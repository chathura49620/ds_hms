{"ast":null,"code":"var _jsxFileName = \"C:\\\\ds_hms\\\\FE\\\\src\\\\components\\\\Traveller\\\\forms\\\\askReserveDetails.jsx\";\nimport React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport FormSuper from './../reusables/formsuper';\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AskReserveDetails extends FormSuper {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: {\n        roomNo: \"\",\n        type: \"\",\n        customerName: \"\",\n        customerId: \"\",\n        startDate: \"\",\n        endDate: \"\"\n      },\n      errors: {},\n      reservedData: []\n    };\n    this.schema = {\n      roomNo: Joi.string(),\n      type: Joi.string(),\n      customerName: Joi.string().required(),\n      customerId: Joi.string().required(),\n      startDate: Joi.string().required(),\n      endDate: Joi.string().required()\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\"http://localhost:8082/reservedRooms\", {\n      method: \"GET\"\n    });\n    const reservedData = await response.json();\n    const room = this.props.room;\n    const data = {\n      roomNo: room.roomNo,\n      type: room.type,\n      customerName: \"\",\n      customerId: \"\",\n      startDate: \"\",\n      endDate: \"\"\n    };\n    this.setState({\n      data,\n      reservedData\n    });\n    console.log(data, reservedData, \"ok\");\n  }\n\n  async doSubmit() {\n    const {\n      reservedData\n    } = this.state;\n    const jsonOb = this.state.data;\n    console.log(\"submitted\");\n    console.log(jsonOb);\n    let dateFrom = jsonOb.startDate;\n    let dateTo = jsonOb.endDate;\n    let dateBetween = \"2022-05-19\";\n    let from = Date.parse(dateFrom);\n    let to = Date.parse(dateTo);\n    let check = Date.parse(dateBetween);\n    let d1 = moment(from).format(\"MM-DD-YYYY\");\n    let d2 = moment(to).format(\"MM-DD-YYYY\");\n    let d3 = moment(check).format(\"MM-DD-YYYY\");\n    console.log(d1, d2, d3); //console.log(check);\n\n    let reservedStartDate;\n    let reservedEndDate;\n\n    for (let i = 0; i < reservedData.length; i++) {\n      console.log(reservedData[i].startDate, \"hello\", reservedData[0].endDate);\n      reservedStartDate = moment(Date.parse(reservedData[i].startDate)).format(\"MM-DD-YYYY\");\n      reservedEndDate = moment(Date.parse(reservedData[i].endDate)).format(\"MM-DD-YYYY\");\n      console.log(reservedStartDate);\n    }\n\n    if (d3 <= d2 && d3 >= d1) {\n      swal({\n        text: \"You have reserved a another reservation between \" + dateFrom + \"-\" + dateTo,\n        icon: \"warning\",\n        timer: \"2000\"\n      });\n    } else {\n      const response = await fetch(\"http://localhost:8082/addReservedRoom\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(jsonOb)\n      });\n      const data = await response.json();\n      console.log(data);\n      swal({\n        text: \"Room Reserved successfully.\",\n        icon: \"success\",\n        timer: \"2000\"\n      });\n      this.props.onClose();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        style: {\n          backgroundColor: \"#F2F3F4\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"my-2\",\n            children: this.renderInput(\"customerName\", \"Your Name\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: this.renderInput(\"customerId\", \"Passport No\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: this.renderInput(\"startDate\", \"Start Date\", \"date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: this.renderInput(\"endDate\", \"End Date\", \"date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), this.renderButton(\"Make Reservation\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AskReserveDetails;","map":{"version":3,"names":["React","useState","Joi","axios","swal","FormSuper","Link","moment","AskReserveDetails","state","data","roomNo","type","customerName","customerId","startDate","endDate","errors","reservedData","schema","string","required","componentDidMount","response","fetch","method","json","room","props","setState","console","log","doSubmit","jsonOb","dateFrom","dateTo","dateBetween","from","Date","parse","to","check","d1","format","d2","d3","reservedStartDate","reservedEndDate","i","length","text","icon","timer","headers","body","JSON","stringify","onClose","render","backgroundColor","handleSubmit","renderInput","renderButton"],"sources":["C:/ds_hms/FE/src/components/Traveller/forms/askReserveDetails.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport FormSuper from './../reusables/formsuper';\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\"\r\n\r\n\r\n\r\nclass AskReserveDetails extends FormSuper {\r\n  state = { \r\n\r\n\r\n    data: {\r\n        roomNo: \"\",\r\n        type: \"\",\r\n        customerName: \"\",\r\n        customerId: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n    \r\n    },\r\n    errors: {},\r\n    reservedData: [],\r\n\r\n   } \r\n\r\n   schema = {\r\n    roomNo: Joi.string(),\r\n    type: Joi.string(),\r\n    customerName: Joi.string().required(),\r\n    customerId: Joi.string().required(),\r\n    startDate: Joi.string().required(),\r\n    endDate: Joi.string().required(),\r\n    \r\n\r\n  };\r\n\r\n async componentDidMount(){\r\n\r\n\r\n    const response = await fetch(\"http://localhost:8082/reservedRooms\", {\r\n      method: \"GET\",\r\n    });\r\n\r\n    const reservedData = await response.json();\r\n\r\n\r\n         const room = this.props.room;\r\n         const data = {\r\n\r\n            roomNo: room.roomNo,\r\n            type: room.type,\r\n            customerName: \"\",\r\n            customerId: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n\r\n\r\n         }\r\n\r\n         this.setState({data, reservedData});\r\n         console.log(data, reservedData, \"ok\");\r\n\r\n  }\r\n\r\n  async doSubmit(){\r\n    \r\n\r\n    const {reservedData} = this.state;\r\n\r\n    const jsonOb = this.state.data;\r\n    console.log(\"submitted\")\r\n    console.log(jsonOb)\r\n     \r\n    let dateFrom = jsonOb.startDate;\r\n    let dateTo = jsonOb.endDate;\r\n\r\n    let dateBetween =  \"2022-05-19\";\r\n\r\n    let from = Date.parse(dateFrom);\r\n    let to   = Date.parse(dateTo);\r\n    let check= Date.parse(dateBetween);\r\n\r\n    let d1 =  moment(from).format(\"MM-DD-YYYY\");\r\n    let d2 = moment(to).format(\"MM-DD-YYYY\");\r\n    let d3 = moment(check).format(\"MM-DD-YYYY\");\r\n\r\n    console.log(d1, d2, d3);\r\n    //console.log(check);\r\n\r\n    let reservedStartDate;\r\n    let reservedEndDate;\r\n\r\n    \r\n\r\n    for(let i=0; i < reservedData.length; i++){\r\n     console.log(reservedData[i].startDate, \"hello\", reservedData[0].endDate)\r\n     \r\n     reservedStartDate =   moment(Date.parse(reservedData[i].startDate)).format(\"MM-DD-YYYY\");\r\n     reservedEndDate  =    moment( Date.parse(reservedData[i].endDate)).format(\"MM-DD-YYYY\");\r\n\r\n\r\n     console.log(reservedStartDate);\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n    if((d3 <= d2 && d3 >= d1)){\r\n\r\n     \r\n      swal({\r\n        text: \"You have reserved a another reservation between \"+ dateFrom + \"-\"+ dateTo,\r\n        icon: \"warning\",\r\n        timer: \"2000\",\r\n      });\r\n    }\r\n    else{\r\n\r\n\r\n      const response = await fetch(\"http://localhost:8082/addReservedRoom\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(jsonOb),\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      console.log(data);\r\n      \r\n      swal({\r\n        text: \"Room Reserved successfully.\",\r\n        icon: \"success\",\r\n        timer: \"2000\",\r\n      });\r\n      this.props.onClose();\r\n\r\n    }      \r\n    \r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <React.Fragment>\r\n    \r\n    \r\n      <div className=\"col\" style={{backgroundColor:\"#F2F3F4\"}}>\r\n      {/* <h1 className=\"mb-4\">Reserve your room</h1> */}\r\n      <form onSubmit={this.handleSubmit}>\r\n            <div className=\"my-2\">\r\n            {this.renderInput(\"customerName\", \"Your Name\")}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n            {this.renderInput(\"customerId\", \"Passport No\")}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n            {this.renderInput(\"startDate\", \"Start Date\", \"date\")}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n            {this.renderInput(\"endDate\", \"End Date\", \"date\")}\r\n            </div>\r\n            \r\n           \r\n            {this.renderButton(\"Make Reservation\")}\r\n           \r\n           \r\n      </form>\r\n        \r\n\r\n      </div>\r\n\r\n          \r\n        \r\n    </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n \r\nexport default AskReserveDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}