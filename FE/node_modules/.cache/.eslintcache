[{"C:\\ds_hms\\FE\\src\\index.js":"1","C:\\ds_hms\\FE\\src\\App.js":"2","C:\\ds_hms\\FE\\src\\reportWebVitals.js":"3","C:\\ds_hms\\FE\\src\\pages\\Dashboard.jsx":"4","C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\BasicInfo.jsx":"5","C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\ProductCodes.jsx":"6","C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\UserRoles.jsx":"7","C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\Dashboard.jsx":"8","C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\UserList.jsx":"9","C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\MaterialCodes.jsx":"10","C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\Categories.jsx":"11","C:\\ds_hms\\FE\\src\\pages\\HotelStaff\\Reservation.jsx":"12","C:\\ds_hms\\FE\\src\\pages\\HotelStaff\\Dashboard.jsx":"13","C:\\ds_hms\\FE\\src\\pages\\Traveller\\Dashboard.jsx":"14","C:\\ds_hms\\FE\\src\\components\\HotelStaff\\sideNav\\Sidebar.jsx":"15","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\sideNav\\Sidebar.jsx":"16","C:\\ds_hms\\FE\\src\\components\\Traveller\\sideNav\\Sidebar.jsx":"17","C:\\ds_hms\\FE\\src\\pages\\charts\\chart.js":"18","C:\\ds_hms\\FE\\src\\components\\HotelStaff\\sideNav\\SidebarData.js":"19","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\sideNav\\SidebarData.js":"20","C:\\ds_hms\\FE\\src\\components\\Traveller\\sideNav\\SidebarData.js":"21","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddMaterialCodeModal.jsx":"22","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddFactoryDetailsModal.jsx":"23","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddProductCodeModal.jsx":"24","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddCategoryModal.jsx":"25","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\ProductCodesTable.jsx":"26","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\UserListTable.jsx":"27","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\UserRolesTable.jsx":"28","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\MaterialCodeTable.jsx":"29","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\ApprovedUsersTable.jsx":"30","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\RejectUsersTable.jsx":"31","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\CategoriesTable.jsx":"32","C:\\ds_hms\\FE\\src\\components\\HotelStaff\\Tables\\ReservationTable.jsx":"33","C:\\ds_hms\\FE\\src\\components\\HotelStaff\\Modals\\AddReservationsModal.jsx":"34","C:\\ds_hms\\FE\\src\\components\\HotelStaff\\sideNav\\SubMenu.jsx":"35","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\sideNav\\SubMenu.jsx":"36","C:\\ds_hms\\FE\\src\\components\\Traveller\\sideNav\\SubMenu.jsx":"37","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\EditProductCodeModal.jsx":"38","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\EditMaterialCodeModal.jsx":"39","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\EditCategoryModal.jsx":"40","C:\\ds_hms\\FE\\src\\components\\HotelStaff\\Modals\\EditReservationsModal.jsx":"41","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\MainContent.jsx":"42","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\Earnings.jsx":"43","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\Navbar.jsx":"44","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\ProjectRecommendation.jsx":"45","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\Projects.jsx":"46","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\Info.jsx":"47","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\JoinSlack.jsx":"48","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\Invoices.jsx":"49","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\Badge.jsx":"50","C:\\ds_hms\\FE\\src\\pages\\Traveller\\utils\\index.js":"51","C:\\ds_hms\\FE\\src\\components\\Traveller\\forms\\loginUser.jsx":"52","C:\\ds_hms\\FE\\src\\components\\Traveller\\reusables\\formsuper.jsx":"53","C:\\ds_hms\\FE\\src\\components\\Traveller\\reusables\\textarea.jsx":"54","C:\\ds_hms\\FE\\src\\components\\Traveller\\reusables\\select.jsx":"55","C:\\ds_hms\\FE\\src\\components\\Traveller\\reusables\\input.jsx":"56","C:\\ds_hms\\FE\\src\\components\\Traveller\\reusables\\radio.jsx":"57","C:\\ds_hms\\FE\\src\\components\\Traveller\\forms\\registerTraveller.jsx":"58","C:\\ds_hms\\FE\\src\\pages\\Traveller\\viewAvailableRooms.jsx":"59","C:\\ds_hms\\FE\\src\\components\\Traveller\\tables\\tableViewAvailableRooms.jsx":"60","C:\\ds_hms\\FE\\src\\components\\Traveller\\forms\\askReserveDetails.jsx":"61","C:\\ds_hms\\FE\\src\\pages\\Traveller\\viewReservedRooms.jsx":"62","C:\\ds_hms\\FE\\src\\components\\Traveller\\tables\\tableViewReservedRooms.jsx":"63","C:\\ds_hms\\FE\\src\\components\\Traveller\\reusables\\clock.jsx":"64","C:\\ds_hms\\FE\\src\\pages\\Traveller\\myProfile.jsx":"65","C:\\ds_hms\\FE\\src\\components\\Traveller\\tables\\tableProfile.jsx":"66"},{"size":403,"mtime":1652596858866,"results":"67","hashOfConfig":"68"},{"size":150,"mtime":1652596858852,"results":"69","hashOfConfig":"68"},{"size":375,"mtime":1652596858877,"results":"70","hashOfConfig":"68"},{"size":4620,"mtime":1652858850515,"results":"71","hashOfConfig":"68"},{"size":5327,"mtime":1652596858870,"results":"72","hashOfConfig":"68"},{"size":1668,"mtime":1652596858872,"results":"73","hashOfConfig":"68"},{"size":3289,"mtime":1652596858873,"results":"74","hashOfConfig":"68"},{"size":6539,"mtime":1652596858871,"results":"75","hashOfConfig":"68"},{"size":1547,"mtime":1652596858872,"results":"76","hashOfConfig":"68"},{"size":1681,"mtime":1652596858871,"results":"77","hashOfConfig":"68"},{"size":1502,"mtime":1652596858871,"results":"78","hashOfConfig":"68"},{"size":1660,"mtime":1652598418610,"results":"79","hashOfConfig":"68"},{"size":6539,"mtime":1652596858867,"results":"80","hashOfConfig":"68"},{"size":1992,"mtime":1652856255977,"results":"81","hashOfConfig":"68"},{"size":1893,"mtime":1652596858855,"results":"82","hashOfConfig":"68"},{"size":1893,"mtime":1652596858864,"results":"83","hashOfConfig":"68"},{"size":2227,"mtime":1652695158661,"results":"84","hashOfConfig":"68"},{"size":963,"mtime":1652599039959,"results":"85","hashOfConfig":"68"},{"size":1708,"mtime":1652596858856,"results":"86","hashOfConfig":"68"},{"size":1708,"mtime":1652596858865,"results":"87","hashOfConfig":"68"},{"size":1521,"mtime":1652669121230,"results":"88","hashOfConfig":"68"},{"size":6182,"mtime":1652596858859,"results":"89","hashOfConfig":"68"},{"size":8917,"mtime":1652596858858,"results":"90","hashOfConfig":"68"},{"size":6860,"mtime":1652596858859,"results":"91","hashOfConfig":"68"},{"size":5218,"mtime":1652596858858,"results":"92","hashOfConfig":"68"},{"size":3122,"mtime":1652596858862,"results":"93","hashOfConfig":"68"},{"size":1327,"mtime":1652596858863,"results":"94","hashOfConfig":"68"},{"size":746,"mtime":1652596858864,"results":"95","hashOfConfig":"68"},{"size":3109,"mtime":1652596858862,"results":"96","hashOfConfig":"68"},{"size":955,"mtime":1652596858861,"results":"97","hashOfConfig":"68"},{"size":1022,"mtime":1652596858863,"results":"98","hashOfConfig":"68"},{"size":2929,"mtime":1652596858862,"results":"99","hashOfConfig":"68"},{"size":3053,"mtime":1652598418590,"results":"100","hashOfConfig":"68"},{"size":6522,"mtime":1652598418588,"results":"101","hashOfConfig":"68"},{"size":1667,"mtime":1652596858856,"results":"102","hashOfConfig":"68"},{"size":1667,"mtime":1652596858865,"results":"103","hashOfConfig":"68"},{"size":1716,"mtime":1652598418593,"results":"104","hashOfConfig":"68"},{"size":5826,"mtime":1652596858861,"results":"105","hashOfConfig":"68"},{"size":5297,"mtime":1652596858860,"results":"106","hashOfConfig":"68"},{"size":4602,"mtime":1652596858860,"results":"107","hashOfConfig":"68"},{"size":5067,"mtime":1652598418589,"results":"108","hashOfConfig":"68"},{"size":3930,"mtime":1652856755562,"results":"109","hashOfConfig":"68"},{"size":1692,"mtime":1652855261233,"results":"110","hashOfConfig":"68"},{"size":1496,"mtime":1652847784927,"results":"111","hashOfConfig":"68"},{"size":2847,"mtime":1652597500373,"results":"112","hashOfConfig":"68"},{"size":2129,"mtime":1652856613724,"results":"113","hashOfConfig":"68"},{"size":2336,"mtime":1652856127775,"results":"114","hashOfConfig":"68"},{"size":2081,"mtime":1652716130397,"results":"115","hashOfConfig":"68"},{"size":3158,"mtime":1652694755014,"results":"116","hashOfConfig":"68"},{"size":1101,"mtime":1652597500369,"results":"117","hashOfConfig":"68"},{"size":262,"mtime":1652597500376,"results":"118","hashOfConfig":"68"},{"size":2255,"mtime":1652859153645,"results":"119","hashOfConfig":"68"},{"size":2547,"mtime":1652598418601,"results":"120","hashOfConfig":"68"},{"size":693,"mtime":1652598418608,"results":"121","hashOfConfig":"68"},{"size":790,"mtime":1652598418607,"results":"122","hashOfConfig":"68"},{"size":669,"mtime":1652598418601,"results":"123","hashOfConfig":"68"},{"size":958,"mtime":1652598418605,"results":"124","hashOfConfig":"68"},{"size":2244,"mtime":1652598418595,"results":"125","hashOfConfig":"68"},{"size":2940,"mtime":1652675079617,"results":"126","hashOfConfig":"68"},{"size":1024,"mtime":1652671401101,"results":"127","hashOfConfig":"68"},{"size":4455,"mtime":1652847332445,"results":"128","hashOfConfig":"68"},{"size":2958,"mtime":1652677102166,"results":"129","hashOfConfig":"68"},{"size":1108,"mtime":1652675357075,"results":"130","hashOfConfig":"68"},{"size":556,"mtime":1652855207502,"results":"131","hashOfConfig":"68"},{"size":2470,"mtime":1652927212808,"results":"132","hashOfConfig":"68"},{"size":2847,"mtime":1652858927319,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1rs6swx",{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"136"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"136"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"136"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"136"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"136"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"136"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"136"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"136"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"136"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"136"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"190","usedDeprecatedRules":"136"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"193","usedDeprecatedRules":"136"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"196","usedDeprecatedRules":"136"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"199","usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"202","usedDeprecatedRules":"136"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"136"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"210","usedDeprecatedRules":"136"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"217","usedDeprecatedRules":"136"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"220","usedDeprecatedRules":"136"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"223","usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"136"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"136"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"136"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"136"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"136"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"136"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"136"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"136"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"136"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"136"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"136"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"136"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"136"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"136"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"136"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"136"},"C:\\ds_hms\\FE\\src\\index.js",[],["307","308"],"C:\\ds_hms\\FE\\src\\App.js",[],"C:\\ds_hms\\FE\\src\\reportWebVitals.js",[],"C:\\ds_hms\\FE\\src\\pages\\Dashboard.jsx",["309","310","311","312","313","314","315","316","317","318"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport SuperAdminSideNav from '../components/SuperAdmin/sideNav/Sidebar';\r\nimport HotelStaffSideNav from '../components/HotelStaff/sideNav/Sidebar';\r\nimport TravellerSideNav from '../components/Traveller/sideNav/Sidebar';\r\n\r\n\r\nimport SuperAdminDashboard from './SuperAdmin/Dashboard'\r\nimport HotelStaffDashboard from './HotelStaff/Dashboard'\r\nimport TravellerDashboard from './Traveller/Dashboard'\r\n\r\n\r\n//super admin routers\r\nimport BasicInfo from './SuperAdmin/BasicInfo';\r\nimport UserRoles from './SuperAdmin/UserRoles';\r\nimport UserList from './SuperAdmin/UserList';\r\nimport Categories from './SuperAdmin/Categories';\r\nimport ProductCodes from './SuperAdmin/ProductCodes';\r\nimport MaterialCodes from './SuperAdmin/MaterialCodes';\r\nimport login from \"../components/Traveller/forms/loginUser\";\r\nimport  RegisterTraveller  from '../components/Traveller/forms/registerTraveller';\r\n\r\n//super admin routers\r\nimport Reservation from './HotelStaff/Reservation';\r\nimport ViewAvailableRooms from './Traveller/viewAvailableRooms';\r\nimport ViewReservedRooms from './Traveller/viewReservedRooms';\r\nimport MyProfile from './Traveller/myProfile';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);   \r\n        this.state = {\r\n            superAdmin: false\r\n        }\r\n        this.renderSideNavigation = this.renderSideNavigation.bind(this);\r\n        this.renderDashboard = this.renderDashboard.bind(this);\r\n    }\r\n\r\n    renderSideNavigation(){\r\n        const user_role = localStorage.getItem('user_role');\r\n        const is_login = localStorage.getItem('is_login');\r\n        if(is_login != '1'){\r\n                return false;\r\n        }else{\r\n            if(user_role == 'Super Admin'){\r\n                return (\r\n                    <SuperAdminSideNav/> \r\n                );\r\n            }\r\n            if(user_role == 'Hotel Staff'){\r\n                return (\r\n                    <HotelStaffSideNav/> \r\n                );\r\n            }\r\n            if(user_role == 'Traveller'){\r\n                return (\r\n                    <TravellerSideNav/> \r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderDashboard(){\r\n        const user_role = localStorage.getItem('user_role')\r\n        const is_login = localStorage.getItem('is_login')\r\n        if(is_login != '1'){\r\n            return (\r\n                <div>\r\n                    <Route path= '/' exact component={login} />\r\n                    <Route path= '/registerTraveller' exact component={RegisterTraveller} />\r\n                </div>\r\n            );\r\n        }else{\r\n           if(user_role == 'Super Admin'){\r\n                return (\r\n                    <div>\r\n                        <Route path='/' exact component={SuperAdminDashboard} />\r\n                        <Route path='/basic-info' exact component={BasicInfo} />\r\n                        <Route path='/user-roles' exact component={UserRoles} />\r\n                        <Route path='/user-list' exact component={UserList} />\r\n                        <Route path='/categories' exact component={Categories} />\r\n                        <Route path='/product-codes' exact component={ProductCodes} />\r\n                        <Route path='/metirial-codes' exact component={MaterialCodes} />\r\n                    </div>\r\n                );\r\n            }\r\n            if(user_role == 'Traveller'){\r\n                return (\r\n                    <div>\r\n                        <Route path='/' exact component={TravellerDashboard} />\r\n                         <Route path='/availableRooms' exact component={ViewAvailableRooms} />\r\n                         <Route path='/reservedRooms' exact component={ViewReservedRooms} />\r\n                         <Route path='/myprofile' exact component={MyProfile} />\r\n                         \r\n\r\n                    </div>\r\n                );\r\n            }\r\n            if(user_role == 'Hotel Staff'){\r\n                return (\r\n                    <div>\r\n                        <Route path='/' exact component={HotelStaffDashboard} />\r\n                        <Route path='/resavations' exact component={Reservation} />\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n       return(\r\n           <div>\r\n                 {this.renderSideNavigation()}\r\n                 {this.renderDashboard()}\r\n           </div> \r\n       );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\BasicInfo.jsx",["319","320","321","322"],"import React, { Component } from \"react\";\r\n\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport axios from \"axios\";\r\n\r\nclass BasicInfo extends Component  {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: '',  factoryDetails: [], };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n}\r\n\r\n  componentDidMount() {\r\n    axios\r\n    .get(\"http://localhost:5000/api/factory-details\")\r\n    .then((result) => {\r\n      const factoryDetails = result.data;\r\n      console.log(factoryDetails)\r\n\r\n      this.setState({ factoryDetails: factoryDetails });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event, props) {\r\n    event.preventDefault();\r\n    //alert(event.target.name.value);\r\n\r\n    fetch('http://localhost:5000/api/factory-details', {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'username': 'chathura'\r\n        },\r\n        body: JSON.stringify({\r\n            id: event.target.id.value,\r\n            companyName: event.target.companyName.value,\r\n            companyAddress: event.target.companyAddress.value,\r\n            ownerName: event.target.ownerName.value,\r\n            mainProduct: event.target.mainProduct.value,\r\n            startDate: event.target.startDate.value,\r\n            is_added:1\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then((result) => {\r\n            swal({\r\n                title: \"Factory Details Updated Succesfully\",\r\n                icon: \"success\",\r\n                button: \"Done\",\r\n              });\r\n        }, (error) => {\r\n            this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n        }\r\n\r\n        )\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h1>Basic Info</h1>\r\n            {this.state.factoryDetails.map((i) => (\r\n            <Form onSubmit={this.handleSubmit}  key={i._id}>\r\n                                      <Form.Group controlId=\"id\">\r\n                                        {/* <Form.Label>ID</Form.Label> */}\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={i._id} hidden/>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"companyName\">\r\n                                        <Form.Label>Company Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"companyName\" required placeholder=\"Company Name\" defaultValue={i.companyName} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"companyAddress\">\r\n                                        <Form.Label>Company Address</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"companyAddress\" required placeholder=\"Company Address\" defaultValue={i.companyAddress} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"ownerName\">\r\n                                        <Form.Label>Owner Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"ownerName\" required placeholder=\"Owner Name\" defaultValue={i.ownerName} />\r\n                                    </Form.Group>\r\n                                    {/* <Form.Group controlId=\"companyLogo\">\r\n                                        <Form.Label>Company Logo</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"companyLogo\" required placeholder=\"Category Name\" />\r\n                                    </Form.Group> */}\r\n                                    <Form.Group controlId=\"mainProduct\">\r\n                                        <Form.Label>Main Product</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"mainProduct\" required placeholder=\"Main Product\" defaultValue={i.mainProduct} />\r\n                                    </Form.Group>\r\n                                    {/* <Form.Group controlId=\"br\">\r\n                                        <Form.Label>br</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"br\" required placeholder=\"Category Name\" />\r\n                                    </Form.Group> */}\r\n                                    <Form.Group controlId=\"startDate\">\r\n                                        <Form.Label>startDate</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"startDate\" required placeholder=\"Start Date\" defaultValue={i.startDate} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button  variant=\"primary\" type=\"submit\" >\r\n                                            Update Factory Details\r\n                                        </Button>\r\n                                    </Form.Group>\r\n              </Form>\r\n            ))}\r\n          </div>\r\n\r\n          \r\n\r\n            \r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BasicInfo;\r\n","C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\ProductCodes.jsx",["323"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddProductCodeModal } from '../../components/SuperAdmin/Modals/AddProductCodeModal';\r\nimport {ProductCodesTable} from \"../../components/SuperAdmin/Tables/ProductCodesTable\";\r\n\r\n\r\nclass ProductCodes extends Component {\r\n  state = {\r\n    ProductCodes: [],\r\n    addModalShow: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/product-code\")\r\n      .then((result) => {\r\n        const ProductCodes = result.data;\r\n\r\n        this.setState({ ProductCodes: ProductCodes });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  render(){\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n        <h1 className=\"mb-5\">Product Codes</h1>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Product Code\r\n                    </Button>\r\n                    <AddProductCodeModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n        </ButtonToolbar>\r\n        <div className=\"row\">\r\n          <div className=\"col-1\"></div>\r\n          <div className=\"col\">\r\n            <ProductCodesTable filteredItems={this.state.ProductCodes} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n  }\r\n};\r\n\r\nexport default ProductCodes;\r\n","C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\UserRoles.jsx",[],"C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\Dashboard.jsx",["324","325","326","327"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport Chart from \"../charts/chart\";\r\nimport \"./dashboard.css\";\r\nimport hello from \"../assets/hello.png\";\r\n// import clock from \"../assets/clock.png\";\r\nimport { AddFactoryDetailsModal } from '../../components/SuperAdmin/Modals/AddFactoryDetailsModal';\r\n// import Clock from \"../../components/ProductionManager/common/clock\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    factoryDetails: [],\r\n    category:[],\r\n    matCode:[],\r\n    proCode:[],\r\n    users:[],\r\n    user_name:'',\r\n    addModalShow: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n    .get(\"http://localhost:5000/api/factory-details\")\r\n    .then((result) => {\r\n      const factoryDetails = result.data;\r\n\r\n      this.setState({ factoryDetails: factoryDetails });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    const user_name = localStorage.getItem(\"user_full_name\");\r\n    this.setState({ user_name: user_name });\r\n\r\n    axios\r\n    .get(\"http://localhost:5000/api/categories\")\r\n    .then((result) => {\r\n      const category = result.data;\r\n\r\n      this.setState({ category: category });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    axios\r\n    .get(\"http://localhost:5000/api/meterial-code\")\r\n    .then((result) => {\r\n      const matCode = result.data;\r\n\r\n      this.setState({ matCode: matCode });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    axios\r\n    .get(\"http://localhost:5000/api/product-code\")\r\n    .then((result) => {\r\n      const proCode = result.data;\r\n\r\n      this.setState({ proCode: proCode });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    axios\r\n    .get(\"http://localhost:5000/users\")\r\n    .then((result) => {\r\n      const users = result.data;\r\n\r\n      this.setState({ users: users });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n  }\r\n\r\n\r\n  logout(){\r\n    localStorage.removeItem('user_full_name');\r\n    localStorage.removeItem('user_email');\r\n    localStorage.removeItem('is_login');\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n    return (\r\n      <React.Fragment>\r\n           <ButtonToolbar>\r\n                    <AddFactoryDetailsModal\r\n                        show={this.state.addModalShow && this.state.factoryDetails.length == 0}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n          <main>\r\n            <div className=\"main__container\">\r\n              {/* <!-- MAIN TITLE STARTS HERE --> */}\r\n\r\n              <div className=\"main__title\">\r\n              <img src={hello} alt=\"hello\" />\r\n                <div className=\"main__greeting\">\r\n                  <h1>Hello, {this.state.user_name}</h1>\r\n                  <p>Welcome to your profile.</p>\r\n                </div>\r\n                <button style={{ backgroundColor: \"#7121AD\", color: \"white\" ,width:\"100px\"}} onClick={this.logout}>Log Out</button>\r\n              </div>\r\n\r\n              <div className=\"charts\">\r\n                <div className=\"charts__left\">\r\n                  <div className=\"charts__left__title\">\r\n                    <div>\r\n                      <h1>Date and Time</h1>\r\n                    </div>\r\n                    <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n                  <div className=\"row mt-5\">\r\n                    <div className=\"col-md-6\">\r\n                      {/* <img src={clock} alt=\"clock\" /> */}\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      {/* <Clock /> */}\r\n                    </div>\r\n                  </div>\r\n                 \r\n                </div>\r\n\r\n                <div className=\"charts__right\">\r\n                  <div className=\"charts__right__title\">\r\n                    <div>\r\n                      <h1>Report Genaration</h1>\r\n                    </div>\r\n                    <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n\r\n                  <div className=\"charts__right__cards\">\r\n                 \r\n                 \r\n                      <div className=\"card1\">\r\n                      <h1>Profit Report</h1>\r\n                    </div>\r\n                    \r\n                   \r\n                      <div className=\"card2\">\r\n                      <h1>User Report</h1>\r\n                    </div>\r\n                     \r\n                     \r\n                        <div className=\"card3\">\r\n                        <h1>Cost Report</h1>\r\n                        </div>\r\n                       \r\n                  \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* <!-- MAIN TITLE ENDS HERE --> */}\r\n\r\n              {/* <!-- MAIN CARDS STARTS HERE --> */}\r\n              <div className=\"main__cards\">\r\n\r\n                \r\n                <div className=\"carda\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">Number of Users</p>\r\n                    <span className=\"font-bold text-title\">{this.state.users.length}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"cardd\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">No of Categories</p>\r\n                    <span className=\"font-bold text-title\">{this.state.category.length}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"carda\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">Number of Product Codes</p>\r\n                    <span className=\"font-bold text-title\">{this.state.proCode.length}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"cardd\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">No of Metirial Codes</p>\r\n                    <span className=\"font-bold text-title\">{this.state.matCode.length}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <!-- MAIN CARDS ENDS HERE --> */}\r\n\r\n              {/* <!-- CHARTS STARTS HERE --> */}\r\n              \r\n              {/* <!-- CHARTS ENDS HERE --> */}\r\n            </div>\r\n          </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\UserList.jsx",[],"C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\MaterialCodes.jsx",["328"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddMaterialCodeModal } from '../../components/SuperAdmin/Modals/AddMaterialCodeModal';\r\nimport {MaterialCodeTable} from \"../../components/SuperAdmin/Tables/MaterialCodeTable\";\r\n\r\nclass MaterialCodes extends Component {\r\n  state = {\r\n    MaterialCodes: [],\r\n    addModalShow: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/meterial-code\")\r\n      .then((result) => {\r\n        const MaterialCodes = result.data;\r\n\r\n        this.setState({ MaterialCodes: MaterialCodes });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  render(){\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n        <h1 className=\"mb-5\">Material Codes</h1>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Material Code\r\n                    </Button>\r\n                    <AddMaterialCodeModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n        <div className=\"row\">\r\n          <div className=\"col-1\"></div>\r\n          <div className=\"col\">\r\n            <MaterialCodeTable filteredItems={this.state.MaterialCodes} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n  }\r\n};\r\n\r\nexport default MaterialCodes;\r\n","C:\\ds_hms\\FE\\src\\pages\\SuperAdmin\\Categories.jsx",["329"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddCategoryModal } from '../../components/SuperAdmin/Modals/AddCategoryModal';\r\nimport {CategoriesTable} from \"../../components/SuperAdmin/Tables/CategoriesTable\";\r\n\r\n\r\nclass Categories extends Component {\r\n  state = {\r\n    categories: [],\r\n    addModalShow: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n\r\n  render() {\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"mb-5\">Categories</h1>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Category\r\n                    </Button>\r\n                    <AddCategoryModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n            <CategoriesTable filteredItems={this.state.categories} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Categories;\r\n","C:\\ds_hms\\FE\\src\\pages\\HotelStaff\\Reservation.jsx",["330"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddReservationsModal } from '../../components/HotelStaff/Modals/AddReservationsModal';\r\nimport {ReservationTable} from \"../../components/HotelStaff/Tables/ReservationTable\";\r\n\r\n\r\nclass Reservations extends Component {\r\n  state = {\r\n    reservations: [],\r\n    addModalShow: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8082/reservations\")\r\n      .then((result) => {\r\n        const reservations = result.data;\r\n\r\n        this.setState({ reservations: reservations });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  render(){\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n        <h1 className=\"mb-5\">Reservation</h1>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Reservation\r\n                    </Button>\r\n                    <AddReservationsModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n        </ButtonToolbar>\r\n        <div className=\"row\">\r\n          <div className=\"col-1\"></div>\r\n          <div className=\"col\">\r\n            <ReservationTable reservations={this.state.reservations} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n  }\r\n};\r\n\r\nexport default Reservations;\r\n","C:\\ds_hms\\FE\\src\\pages\\HotelStaff\\Dashboard.jsx",["331","332","333","334"],"C:\\ds_hms\\FE\\src\\pages\\Traveller\\Dashboard.jsx",["335","336","337","338","339","340","341"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport Chart from \"../charts/chart\";\r\n// import \"./dashboard.css\";\r\nimport hello from \"../assets/hello.png\";\r\n// import clock from \"../assets/clock.png\";\r\nimport { AddFactoryDetailsModal } from '../../components/SuperAdmin/Modals/AddFactoryDetailsModal';\r\n// import Clock from \"../../components/ProductionManager/common/clock\";\r\nimport MainContent from \"./TravellerDashboard/MainContent\"\r\n//import \"./TravellerDashboard/dashboard.css\"\r\n\r\nimport styled from \"styled-components\";\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    reservedRooms: [],\r\n    availableRooms: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n\r\n    const response = await fetch(\"http://localhost:8082/reservedRooms\", {\r\n      method: \"GET\",\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n\r\n    const response2 = await fetch(\"http://localhost:8082/rooms\", {\r\n      method: \"GET\",\r\n    });\r\n\r\n    const data2 = await response2.json();\r\n    const availableRooms = data2.filter(d => d.status === \"available\")\r\n    \r\n    this.setState({reservedRooms: data, availableRooms: availableRooms});\r\n    console.log(data);\r\n    \r\n  }\r\n\r\n\r\n  logout(){\r\n    localStorage.removeItem('user_full_name');\r\n    localStorage.removeItem('user_email');\r\n    localStorage.removeItem('is_login');\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n      <MainContent NumOfReserved={this.state.reservedRooms.length} NumOfAvailable={this.state.availableRooms.length}\r\n      reservedRooms={this.state.reservedRooms}\r\n      />\r\n    </Container>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  height: 97vh;\r\n  background: linear-gradient(to bottom right, white 0%, #e6e4ff 70%);\r\n  border-radius: 2rem;\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport default Dashboard;\r\n","C:\\ds_hms\\FE\\src\\components\\HotelStaff\\sideNav\\Sidebar.jsx",["342","343","344","345","346"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Container, Image } from \"react-bootstrap\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nconst Nav = styled.div`\r\n  background: #15171c;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #15171c;\r\n  width: 250px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  @media only screen and (max-width: 1920px) {\r\n    left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\r\n  }\r\n  left: 0;\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#fff\" }}>\r\n        <Nav>\r\n          <NavIcon to=\"#\">\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </NavIcon>\r\n        </Nav>\r\n        <SidebarNav sidebar={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to=\"#\">\r\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\r\n            </NavIcon>\r\n            {SidebarData.map((item, index) => {\r\n              return <SubMenu item={item} key={index} />;\r\n            })}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\sideNav\\Sidebar.jsx",["347","348","349","350","351"],"C:\\ds_hms\\FE\\src\\components\\Traveller\\sideNav\\Sidebar.jsx",["352","353","354","355","356"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Container, Image } from \"react-bootstrap\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nconst Nav = styled.div`\r\n  background:    #fdfefe ;\r\n  height: 80px; \r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background:   #34495e \r\n\r\n\r\n  ;\r\n  width: 250px;\r\n  height: 100vh;\r\n  border-style: solid;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  @media only screen and (max-width: 1920px) {\r\n    left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\r\n  }\r\n  left: 0;\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \" #17202a \" }}>\r\n        <Nav>\r\n         \r\n          <NavIcon to=\"#\">\r\n            \r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </NavIcon>\r\n          <h2>Hotel Reservation Management</h2>\r\n          <button className='btn btn-sm btn-danger' onClick={() =>{\r\n            localStorage.removeItem(\"is_login\");\r\n            window.location.href = \"/\"\r\n            \r\n            }}>Log out</button><br></br>\r\n        </Nav>\r\n        <SidebarNav sidebar={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to=\"#\">\r\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\r\n            </NavIcon>\r\n            {SidebarData.map((item, index) => {\r\n              return <SubMenu item={item} key={index} />;\r\n            })}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\ds_hms\\FE\\src\\pages\\charts\\chart.js",[],"C:\\ds_hms\\FE\\src\\components\\HotelStaff\\sideNav\\SidebarData.js",[],"C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\sideNav\\SidebarData.js",[],"C:\\ds_hms\\FE\\src\\components\\Traveller\\sideNav\\SidebarData.js",["357"],"import React from \"react\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: \"Dashboard\",\r\n    path: \"/\",\r\n    icon: <AiIcons.AiFillHome />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n  {\r\n    title: \"Basic Info\",\r\n    path: \"/basic-info\",\r\n    icon: <IoIcons.IoMdPlay />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n  {\r\n    title: \"Items\",\r\n    icon: <RiIcons.RiBookmark3Fill />,\r\n\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: \"Item Lists\",\r\n        path: \"/items/my\",\r\n        icon: <IoIcons.IoIosListBox />,\r\n        cName: \"sub-nav\",\r\n      },\r\n      {\r\n        title: \"Item Records\",\r\n        path: \"/itemsrecords\",\r\n        icon: <RiIcons.RiBarChartFill />,\r\n        cName: \"sub-nav\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    title: \"available rooms\",\r\n    path: \"/availableRooms\",\r\n    icon: <IoIcons.IoMdTime />,\r\n  },\r\n\r\n  {\r\n    title: \"view members\",\r\n    path: \"/viewMembers\",\r\n    icon: <IoIcons.IoMdColorFill />,\r\n  },\r\n  {\r\n    title: \"Item Requests\",\r\n    path: \"/requests/for/items\",\r\n    icon: <IoIcons.IoMdPaperPlane />,\r\n  },\r\n\r\n  {\r\n    title: \"My Profile\",\r\n    path: \"/myprofile\",\r\n    icon: <IoIcons.IoMdPerson />,\r\n  },\r\n];\r\n","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddMaterialCodeModal.jsx",["358","359","360"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nexport class AddMaterialCodeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            materialNameError:'',\r\n            materialCodeError:''\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate(event);\r\n        if(isValid){\r\n            fetch('http://localhost:5000/api/meterial-code/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    materialName: event.target.materialName.value,\r\n                    materialCode: event.target.materialCode.value,\r\n                    status: event.target.status.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Material Code Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    });\r\n                    this.setState({\r\n                        materialNameError: '',\r\n                        materialCodeError:''\r\n        \r\n                    }) \r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                    }.bind(this), 1500); \r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        }\r\n    }\r\n\r\n    validate(event){\r\n        let materialNameError = '';\r\n        let materialCodeError = '';\r\n        \r\n        if(!event.target.materialName.value){\r\n            materialNameError = \"Material Name  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.materialCode.value){\r\n            materialCodeError = \"Material Code Cannot Be Blank\"\r\n        }\r\n        \r\n\r\n        if(materialNameError || materialCodeError){\r\n         \r\n            this.setState({\r\n                materialNameError: materialNameError,\r\n                materialCodeError:materialCodeError\r\n\r\n            })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Material Code\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Material Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"materialName\"  placeholder=\"Material Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.materialNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Material Code</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"materialCode\"  placeholder=\"Material Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.materialCodeError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\">\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Material Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddFactoryDetailsModal.jsx",["361","362","363"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddFactoryDetailsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            companyNameError:'',\r\n            companyAddressError:'',\r\n            ownerNameError:'',\r\n            mainProductError:'',\r\n            startDateError:''\r\n\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate(event);\r\n            if(isValid){\r\n                fetch('http://localhost:5000/api/factory-details', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    companyName: event.target.companyName.value,\r\n                    companyAddress: event.target.companyAddress.value,\r\n                    ownerName: event.target.ownerName.value,\r\n                    mainProduct: event.target.mainProduct.value,\r\n                    startDate: event.target.startDate.value,\r\n                    is_added:1\r\n                    // companyName: event.target.companyName.value,\r\n                    // companyName: event.target.companyName.value,\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    console.log(result);\r\n                    swal({\r\n                        title: \"Factory Details Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    }); \r\n                    this.setState({\r\n                        companyNameError:'',\r\n                        companyAddressError:'',\r\n                        ownerNameError:'',\r\n                        mainProductError:'',\r\n                        startDateError:'',\r\n                    })\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1500);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        }\r\n    }\r\n\r\n    validate(event){\r\n        let companyNameError = \"\";\r\n        let companyAddressError = \"\";\r\n        let ownerNameError = \"\";\r\n        let mainProductError = \"\";\r\n        let startDateError = \"\";\r\n\r\n        if(!event.target.companyName.value){\r\n            companyNameError = \"Company Name  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.companyAddress.value){\r\n            companyAddressError = \"Company Address  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.ownerName.value){\r\n            ownerNameError = \"Owner Name  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.mainProduct.value){\r\n            mainProductError = \"Main Product  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.startDate.value){\r\n            startDateError = \"start Date  Cannot Be Blank\"\r\n        }\r\n\r\n        if(companyNameError | companyAddressError | ownerNameError | mainProductError | startDateError){\r\n            this.setState({\r\n                companyNameError:companyNameError,\r\n                companyAddressError:companyAddressError,\r\n                ownerNameError:ownerNameError,\r\n                mainProductError:mainProductError,\r\n                startDateError:startDateError,\r\n            })\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Factory Details\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"companyName\">\r\n                                        <Form.Label>Company Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"companyName\" required placeholder=\"Company Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.companyNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"companyAddress\">\r\n                                        <Form.Label>Company Address</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"companyAddress\" required placeholder=\"Company Address\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.companyAddressError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"ownerName\">\r\n                                        <Form.Label>Owner Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"ownerName\" required placeholder=\"Owner Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.ownerNameError}</div>\r\n                                    </Form.Group>\r\n                                    {/* <Form.Group controlId=\"companyLogo\">\r\n                                        <Form.Label>Company Logo</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"companyLogo\" required placeholder=\"Category Name\" />\r\n                                    </Form.Group> */}\r\n                                    <Form.Group controlId=\"mainProduct\">\r\n                                        <Form.Label>Main Product</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"mainProduct\" required placeholder=\"Main Product\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.mainProduct}</div>\r\n                                    </Form.Group>\r\n                                    {/* <Form.Group controlId=\"br\">\r\n                                        <Form.Label>br</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"br\" required placeholder=\"Category Name\" />\r\n                                    </Form.Group> */}\r\n                                    <Form.Group controlId=\"startDate\">\r\n                                        <Form.Label>startDate</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"startDate\" required placeholder=\"Start Date\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.startDate}</div>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Factory Details\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddProductCodeModal.jsx",["364","365","366"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport swal from 'sweetalert';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddProductCodeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            categories: [],\r\n            productCodeError:'',\r\n            productCategoryError:''\r\n         };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n          .get(\"http://localhost:5000/api/categories\")\r\n          .then((result) => {\r\n            const categories = result.data;\r\n    \r\n            this.setState({ categories: categories });\r\n          })\r\n          .catch((err) => console.log(err.message));\r\n      }\r\n\r\n    handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n        const isValid = this.validate(event);\r\n        if(isValid){\r\n            fetch('http://localhost:5000/api/product-code/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    productCode: event.target.productCode.value,\r\n                    productCategory: event.target.productCategory.value,\r\n                    status: event.target.status.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Product Code Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    });\r\n                    this.setState({\r\n                        productCodeError:'',\r\n                        productCategoryError:''\r\n                    })\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1500);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        }\r\n    }\r\n\r\n    validate(event){\r\n        let productCodeError = \"\";\r\n        let productCategoryError = \"\";\r\n      \r\n       \r\n        if(!event.target.productCode.value){\r\n            productCodeError = \"Product Code Cannot Be Blank\"\r\n        }\r\n        if(!event.target.productCategory.value){\r\n            productCategoryError = \"Please Select Product Category\"\r\n        }\r\n        \r\n       \r\n\r\n        if(productCodeError){\r\n            this.setState({\r\n                productCodeError:productCodeError,\r\n                productCategoryError:productCategoryError\r\n            })\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Product Code\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Product Code</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"productCode\"  placeholder=\"Product Code\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCodeError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Product Category</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"productCategory\">\r\n                                        {this.state.categories.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.categoryName}</option>\r\n                                        ))}\r\n                                        </Form.Control>  \r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCategoryError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\"  name=\"status\">\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Product Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddCategoryModal.jsx",["367","368","369"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddCategoryModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            CategoryNameError:''\r\n             \r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if(isValid){\r\n            fetch('http://localhost:5000/api/categories', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    categoryName: event.target.categoryName.value,\r\n                    status: event.target.status.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Category Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    }); \r\n                    this.setState({CategoryNameError:''})\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1000);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        }\r\n    }\r\n\r\n    validate(){\r\n        let CategoryNameError = \"\";\r\n\r\n        if(!this.state.CategoryNameError){\r\n            CategoryNameError = \"Category Name Cannot Be Blank\"\r\n        }\r\n\r\n        if(CategoryNameError){\r\n            this.setState({CategoryNameError:CategoryNameError})\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Category\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"categoryName\"  placeholder=\"Category Name\" />\r\n                                          <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\">\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Category\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\ProductCodesTable.jsx",["370","371","372"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditProductCodeModal } from '../Modals/EditProductCodeModal';\r\n\r\n\r\nexport class ProductCodesTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteProCode(id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/product-code', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Product Code Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          });\r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500); \r\n      });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {id, productCode, productCategory, status } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n      <ButtonToolbar>\r\n      <EditProductCodeModal\r\n          show={this.state.editModalShow} \r\n          onHide={EditModelClose}\r\n          id={id}\r\n          productCode={productCode}\r\n          productCategory={productCategory}\r\n          status={status}\r\n      />\r\n      </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Product Code</th>\r\n          <th scope=\"col\">Product Category</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n            \r\n          > \r\n            <td></td>\r\n            <td>{i.productCode}</td>\r\n            <td>{i.productCategory}</td>\r\n            <td><button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i._id, productCode: i.productCode, productCategory: i.productCategory, status: i.status })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteProCode(i._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n};\r\n\r\n","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\UserListTable.jsx",[],"C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\UserRolesTable.jsx",["373"],"import React, { Component } from \"react\";\r\nconst UserRolesTable = ({ filteredItems}) => {\r\n  return (\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">User Role</th>\r\n          <th scope=\"col\">Status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n           \r\n          >\r\n            <td>{i.userRoleNo}</td>\r\n            <td>{i.userRole}</td>\r\n            <td>{i.status}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default UserRolesTable;\r\n","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\MaterialCodeTable.jsx",["374","375","376"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditMaterialCodeModal } from '../Modals/EditMaterialCodeModal';\r\n\r\nexport class MaterialCodeTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteMatCode (id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/meterial-code', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Material Code Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          });\r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500);\r\n      });\r\n      \r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {id, matirialName, materialCode, status } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n       <ButtonToolbar>\r\n      <EditMaterialCodeModal\r\n          show={this.state.editModalShow}\r\n          onHide={EditModelClose}\r\n          id={id}\r\n          matirialName={matirialName}\r\n          materialCode={materialCode}\r\n          status={status}\r\n      />\r\n      </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Material Name</th>\r\n          <th scope=\"col\">Material Code</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n          >\r\n            <td>1</td>\r\n            <td>{i.materialName}</td>\r\n            <td>{i.materialCode}</td>\r\n            <td><button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i._id, matirialName: i.materialName, materialCode: i.materialCode, status: i.status })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteMatCode(i._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n  }\r\n};\r\n\r\n\r\n","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\ApprovedUsersTable.jsx",[],"C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\RejectUsersTable.jsx",[],"C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\CategoriesTable.jsx",["377","378","379","380"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditCategoryModal } from '../Modals/EditCategoryModal';\r\n\r\nexport class CategoriesTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteCat(id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/categories', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Category Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          }); \r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500);\r\n      });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {id, name, status, version } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n       <ButtonToolbar>\r\n\r\n        <EditCategoryModal\r\n            show={this.state.editModalShow}\r\n            onHide={EditModelClose}\r\n            id={id}\r\n            name={name}\r\n            status={status}\r\n        />\r\n        </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Category</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n            \r\n          >\r\n            <td>{i.userRoleNo}</td>\r\n            <td>{i.categoryName}</td>\r\n            <td><button \r\n              className=\"btn-sm\"\r\n              style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i._id, name: i.categoryName, status: i.status })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteCat(i._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n     \r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n}\r\n\r\n\r\n","C:\\ds_hms\\FE\\src\\components\\HotelStaff\\Tables\\ReservationTable.jsx",["381","382","383"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditReservationsModal } from '../Modals/EditReservationsModal';\r\n\r\n\r\nexport class ReservationTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteProCode(id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch(`http://localhost:8082/deleteReservation/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Reservation Code Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          });\r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500); \r\n      });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {id, customerName, roomNo, price } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n      <ButtonToolbar>\r\n      <EditReservationsModal\r\n          show={this.state.editModalShow} \r\n          onHide={EditModelClose}\r\n          id={id}\r\n          customerName={customerName}\r\n          roomNo={roomNo}\r\n          price={price}\r\n      />\r\n      </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Customer Name</th>\r\n          <th scope=\"col\">Romm No</th>\r\n          <th scope=\"col\">Price</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.reservations.map((i) => (\r\n          <tr\r\n            key={i.id}\r\n            \r\n          > \r\n            <td>{i.id}</td>\r\n            <td>{i.customerName}</td>\r\n            <td>{i.roomNo}</td>\r\n            <td>{i.price}</td>\r\n            <td><button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i.id, customerName: i.customerName, roomNo: i.roomNo, price: i.price })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteProCode(i.id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n};\r\n\r\n","C:\\ds_hms\\FE\\src\\components\\HotelStaff\\Modals\\AddReservationsModal.jsx",["384","385","386","387"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport swal from 'sweetalert';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddReservationsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            // categories: [],\r\n            productCodeError:'',\r\n            productCategoryError:''\r\n         };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    // componentDidMount() {\r\n    //     axios\r\n    //       .get(\"http://localhost:5000/api/categories\")\r\n    //       .then((result) => {\r\n    //         const categories = result.data;\r\n    \r\n    //         this.setState({ categories: categories });\r\n    //       })\r\n    //       .catch((err) => console.log(err.message));\r\n    //   }\r\n\r\n    handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n        // const isValid = this.validate(event);\r\n        // if(isValid){\r\n            fetch('http://localhost:8082/addReservation', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    customerName: event.target.customerName.value,\r\n                    roomNo: event.target.roomNo.value,\r\n                    price: event.target.price.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Reservation Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    });\r\n                    this.setState({\r\n                        productCodeError:'',\r\n                        productCategoryError:''\r\n                    })\r\n                    setTimeout(function() {\r\n                        // window.location.reload(); \r\n                      }.bind(this), 1500);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        // }\r\n    }\r\n\r\n    validate(event){\r\n        let productCodeError = \"\";\r\n        let productCategoryError = \"\";\r\n      \r\n       \r\n        if(!event.target.productCode.value){\r\n            productCodeError = \"Product Code Cannot Be Blank\"\r\n        }\r\n        if(!event.target.productCategory.value){\r\n            productCategoryError = \"Please Select Product Category\"\r\n        }\r\n        \r\n       \r\n\r\n        if(productCodeError){\r\n            this.setState({\r\n                productCodeError:productCodeError,\r\n                productCategoryError:productCategoryError\r\n            })\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Reservation\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"customerName\">\r\n                                        <Form.Label>Customer Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"customerName\"  placeholder=\"Customer Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCodeError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"roomNo\">\r\n                                        <Form.Label>Room No</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"roomNo\"  placeholder=\"Room No\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCodeError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"price\">\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"price\"  placeholder=\"Price\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCodeError}</div>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Reservation\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\ds_hms\\FE\\src\\components\\HotelStaff\\sideNav\\SubMenu.jsx",[],"C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\sideNav\\SubMenu.jsx",[],"C:\\ds_hms\\FE\\src\\components\\Traveller\\sideNav\\SubMenu.jsx",[],"C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\EditProductCodeModal.jsx",["388"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport axios from \"axios\";\r\n\r\nexport class EditProductCodeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '', categories:[] };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n          .get(\"http://localhost:5000/api/categories\")\r\n          .then((result) => {\r\n            const categories = result.data;\r\n    \r\n            this.setState({ categories: categories });\r\n          })\r\n          .catch((err) => console.log(err.message));\r\n      }\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        //alert(event.target.name.value);\r\n\r\n        fetch('http://localhost:5000/api/product-code/', { \r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                productCode: event.target.productCode.value,\r\n                productCategory: event.target.productCategory.value,\r\n                status: event.target.status.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Product Code Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Product Code\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Product Code</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"productCode\" required placeholder=\"Product Code\" defaultValue={this.props.productCode} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Product Category</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"productCategory\" defaultValue={this.props.productCategory}>\r\n                                        {this.state.categories.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.categoryName}</option>\r\n                                        ))}\r\n                                        </Form.Control>  \r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Product Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\EditMaterialCodeModal.jsx",["389"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditMaterialCodeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '' };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        //alert(event.target.name.value);\r\n\r\n        fetch('http://localhost:5000/api/meterial-code/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                materialName: event.target.matName.value,\r\n                materialCode: event.target.matCode.value,\r\n                status: event.target.status.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Metirial Code Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Matirial COde\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n                                    \r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Material Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"matName\" required placeholder=\"Material Name\" defaultValue={this.props.matirialName} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Material Code</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"matCode\" required placeholder=\"Material Code\" defaultValue={this.props.materialCode} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\r\n                                            <option selected disabled>{this.props.status}</option>\r\n                                            <option>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Matirial Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\EditCategoryModal.jsx",["390"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditCategoryModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '' };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        fetch('http://localhost:5000/api/categories/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                categoryName: event.target.name.value,\r\n                status: event.target.status.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Category Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                \r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Category\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"name\" required placeholder=\"Category Name\" defaultValue={this.props.name} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\r\n                                            <option selected disabled>{this.props.status}</option>\r\n                                            <option>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Category\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\ds_hms\\FE\\src\\components\\HotelStaff\\Modals\\EditReservationsModal.jsx",["391","392"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport axios from \"axios\";\r\n\r\nexport class EditReservationsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '', categories:[] };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        //alert(event.target.name.value);\r\n\r\n        fetch('http://localhost:8082/updateReservation', { \r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                customerName: event.target.customerName.value,\r\n                roomNo: event.target.roomNo.value,\r\n                price: event.target.price.value\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Reservation Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Reservation\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"customerName\">\r\n                                        <Form.Label>Customer Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"customerName\" required placeholder=\"Customer Name\" defaultValue={this.props.customerName} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Room No</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"roomNo\" required placeholder=\"Room No\" defaultValue={this.props.roomNo} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"price\" required placeholder=\"Price\" defaultValue={this.props.price} />\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Product Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\MainContent.jsx",["393"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"./Navbar\";\r\nimport Earnings from \"./Earnings\";\r\nimport Info from \"./Info\";\r\nimport JoinSlack from \"./JoinSlack\";\r\nimport ProjectRecommendation from \"./ProjectRecommendation\";\r\nimport Projects from \"./Projects\";\r\nimport Invoices from \"./Invoices\";\r\n\r\nfunction MainContent({NumOfReserved, NumOfAvailable, reservedRooms}) {\r\n  return (\r\n    <Container>\r\n      <Navbar />\r\n      <SubContainer>\r\n        <SectionOne>\r\n          <ColumnOne1>\r\n            <Earnings />\r\n            <Info NumOfReserved={NumOfReserved} NumOfAvailable={NumOfAvailable}/>\r\n          </ColumnOne1>\r\n          <ColumnTwo1>\r\n            <TitleText><div style={{fontSize: 25}}>Your Reservations</div></TitleText>\r\n            <Projects reservedRooms={reservedRooms}/>\r\n          </ColumnTwo1>\r\n        </SectionOne>\r\n        <SectionTwo>\r\n          <ColumnOne2>\r\n            <InvoiceContainer>\r\n              <TitleText><div style={{fontSize: 25}}>Recent Invoices</div></TitleText>\r\n              <Invoices />\r\n            </InvoiceContainer>\r\n           \r\n          </ColumnOne2>\r\n          <ColumnTwo2>\r\n            <TitleText><div style={{fontSize: 25}}>Recommended Project</div></TitleText>\r\n            {/* <ProjectRecommendation /> */}\r\n             <JoinSlack />\r\n          </ColumnTwo2>\r\n        </SectionTwo>\r\n      </SubContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 80%;\r\n  background: linear-gradient(to bottom right, white 0%, #e6e4ff 70%);\r\n  border-bottom-right-radius: 2rem;\r\n  border-top-right-radius: 2rem;\r\n  margin: 1rem 8rem 1rem 4rem;\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    margin: 1rem 0 0 0;\r\n  }\r\n`;\r\n\r\nconst SubContainer = styled.div`\r\n  margin: 0.5rem 0;\r\n  height: 80%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4rem;\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    height: 100%;\r\n  }\r\n`;\r\nconst SectionOne = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 40%;\r\n  gap: 2rem;\r\n  width: 100%;\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: max-content;\r\n  }\r\n`;\r\nconst ColumnOne1 = styled.div`\r\n  display: flex;\r\n  gap: 3rem;\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst ColumnTwo1 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 115%;\r\n  width: 100%;\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    height: max-content;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst TitleText = styled.h3`\r\n  height: 20%;\r\n  /* padding-top */\r\n`;\r\n\r\nconst SectionTwo = styled.div`\r\n  display: flex;\r\n  gap: 2rem;\r\n  height: 26vh;\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    flex-direction: column;\r\n    height: max-content;\r\n    width: 100%;\r\n  }\r\n`;\r\nconst ColumnOne2 = styled.div`\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`;\r\nconst InvoiceContainer = styled.div`\r\n  height: 60%;\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    height: max-content;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst ColumnTwo2 = styled.div`\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport default MainContent;\r\n","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\Earnings.jsx",["394","395","396","397","398","399","400"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IoStatsChart } from \"react-icons/io5\";\r\nimport { themeColor, hoverEffect } from \"../utils\";\r\n//import Clock from './../../../components/reusables/clock';\r\nimport Clock from \"../../../components/Traveller/reusables/clock\";\r\n\r\nfunction Earnings() {\r\n  return (\r\n   \r\n    <EarningsCard>\r\n      <Clock/>\r\n      {/* <CardContent> */}\r\n       \r\n        {/* <Chart>\r\n          <IoStatsChart />\r\n        </Chart>\r\n        <EarningsText><div style={{fontSize: 15}}>Earnings</div></EarningsText>\r\n        <Earning><div style={{fontSize: 14}}>$7,890</div></Earning>\r\n        <EarningsIncrease><div style={{fontSize: 13}}>+ 10% since last month</div></EarningsIncrease> */}\r\n      {/* </CardContent> */}\r\n    </EarningsCard>\r\n  );\r\n}\r\n\r\nconst EarningsCard = styled.div`\r\n  height: 100%;\r\n  width: 14rem;\r\n  background-color: #162349;\r\n  padding: 1rem;\r\n  border-radius: 1rem;\r\n  color: white;\r\n  transition: 0.4s ease-in-out;\r\n  &:hover {\r\n    box-shadow: ${hoverEffect};\r\n  }\r\n\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n  margin: 1rem;\r\n`;\r\n\r\nconst Chart = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  svg {\r\n    height: 4rem;\r\n    width: 4rem;\r\n  }\r\n`;\r\n\r\nconst EarningsText = styled.h3`\r\n  text-align: center;\r\n  font-weight: normal;\r\n  padding: 0.4rem 0;\r\n`;\r\n\r\nconst Earning = styled.h2`\r\n  text-align: center;\r\n`;\r\n\r\nconst EarningsIncrease = styled.h5`\r\n  text-align: center;\r\n  font-weight: normal;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  padding: 0.5rem;\r\n  border-radius: 2rem;\r\n`;\r\n\r\nexport default Earnings;\r\n","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\Navbar.jsx",["401","402","403","404","405"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nfunction Navbar() {\r\n  return (\r\n    <NavbarContainer>\r\n    \r\n      <div><h3>Hello {localStorage.getItem('u_name')}</h3></div>\r\n     \r\n      {/* <InputContainer>\r\n        <Icon>\r\n          <FiSearch />\r\n        </Icon>\r\n        <Input type=\"text\" placeholder=\"Search for projects\" />\r\n      </InputContainer> */}\r\n    </NavbarContainer>\r\n  );\r\n}\r\n\r\nconst NavbarContainer = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 10%;\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    flex-direction: column;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nconst Text = styled.h1`\r\n  span {\r\n    font-weight: 500;\r\n    color: #484258;\r\n  }\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  height: 3rem;\r\n  width: 3rem;\r\n  background-color: #dce4ff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-top-left-radius: 0.5rem;\r\n  border-bottom-left-radius: 0.5rem;\r\n  svg {\r\n    color: #555555;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  border: none;\r\n  background-color: #dce4ff;\r\n  border-top-right-radius: 0.5rem;\r\n  border-bottom-right-radius: 0.5rem;\r\n  color: #464646;\r\n\r\n  &:focus {\r\n    border: none;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport default Navbar;\r\n","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\ProjectRecommendation.jsx",[],"C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\Projects.jsx",["406","407"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AvatarImage from \"./../assets/avatarImage2.jpg\";\r\nimport AvatarImage2 from \"./../assets/avatarImage3.jpg\";\r\nimport { cardShadow, hoverEffect, themeColor } from \"../utils\";\r\n\r\nfunction Projects({reservedRooms}) {\r\n  return (\r\n    <YourProjects>\r\n\r\n      {reservedRooms.map(r => (\r\n\r\n        <Project>\r\n          <Avatar>\r\n          <img src={AvatarImage} alt=\"\" />\r\n        </Avatar>\r\n        <Detail>\r\n        <Title><div style={{fontSize: 18}}>{`ROOM NO: ${r.roomNo}`}</div></Title>\r\n       <SubTitle><div style={{fontSize: 17}}>{`START: ${r.startDate} END: ${r.endDate}`}</div></SubTitle>\r\n       </Detail>\r\n      </Project>\r\n\r\n      ))}\r\n      \r\n      {/* <Project>\r\n        <Avatar>\r\n          <img src={AvatarImage2} alt=\"\" />\r\n        </Avatar>\r\n        <Detail>\r\n          <Title><div style={{fontSize: 18}}>Personal branding project</div></Title>\r\n          <SubTitle><div style={{fontSize: 17}}>5 days remaining</div></SubTitle>\r\n        </Detail>\r\n      </Project> */}\r\n      {/* <AllProjects>See all projects</AllProjects> */}\r\n    </YourProjects>\r\n  );\r\n}\r\n\r\nconst YourProjects = styled.div`\r\n  height: 70%;\r\n  background-color: white;\r\n  margin: 0;\r\n  padding: 1rem;\r\n  border-radius: 1rem;\r\n  box-shadow: ${cardShadow};\r\n  transition: 0.4s ease-in-out;\r\n  &:hover {\r\n    box-shadow: ${hoverEffect};\r\n  }\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    height: max-content;\r\n    width: 75%;\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst Project = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 0.3rem;\r\n`;\r\nconst Avatar = styled.div`\r\n  img {\r\n    height: 4rem;\r\n    width: 4rem;\r\n    border-radius: 4rem;\r\n  }\r\n`;\r\nconst Detail = styled.div`\r\n  margin-left: 1rem;\r\n`;\r\nconst Title = styled.h3`\r\n  font-weight: 500;\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\nconst SubTitle = styled.h5`\r\n  font-weight: 300;\r\n`;\r\nconst AllProjects = styled.h5`\r\n  text-align: end;\r\n  color: ${themeColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default Projects;\r\n","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\Info.jsx",["408"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Badge from \"./Badge\";\r\nimport { cardShadow, hoverEffect, themeColor } from \"../utils\";\r\nfunction Info({NumOfReserved, NumOfAvailable}) {\r\n  return (\r\n    <InfoCard>\r\n      <Card>\r\n        <CardContent>\r\n          <Row>\r\n            <Digit><div style={{fontSize: 15}}>{NumOfReserved}</div></Digit>\r\n            <InfoContainer>\r\n              <Title ><div style={{fontSize: 17}}>RESERVED</div></Title>\r\n              <SubTitle><div style={{fontSize: 17}}>In top 20%</div></SubTitle>\r\n            </InfoContainer>\r\n          </Row>\r\n        </CardContent>\r\n      </Card>\r\n      <Card>\r\n        <CardContent>\r\n          <Row>\r\n            <Digit><div style={{fontSize: 15}}>{NumOfAvailable}</div></Digit>\r\n            <InfoContainer>\r\n              <Title><div style={{fontSize: 17}}>AVAILABLE</div></Title>\r\n              <SubTitle><div style={{fontSize: 17}}>In top 20%</div></SubTitle>\r\n            </InfoContainer>\r\n          </Row>\r\n          {/* <Row justify>\r\n            <Badge content=\"mobile app\" glow />\r\n            <Badge content=\"branding\" glow />\r\n          </Row> */}\r\n        </CardContent>\r\n      </Card>\r\n    </InfoCard>\r\n  );\r\n}\r\n\r\nconst InfoCard = styled.div`\r\n  height: 100%;\r\n  width: 14rem;\r\n  background-color: white;\r\n  border-radius: 1rem;\r\n  padding: 1rem;\r\n  color: white;\r\n  box-shadow: ${cardShadow};\r\n  transition: 0.4s ease-in-out;\r\n  &:hover {\r\n    box-shadow: ${hoverEffect};\r\n  }\r\n  @media screen and (min-width: 320px) and (max-width: 1080px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst Card = styled.div`\r\n  background-color: rgba(183, 194, 243, 0.3);\r\n  border-radius: 1rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n  padding: 0.7rem 1rem 0.3rem 1rem;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 0.4rem;\r\n  ${({ justify }) =>\r\n    justify &&\r\n    `\r\n      justify-content:space-around;\r\n      width:90%\r\n  `}\r\n`;\r\nconst Digit = styled.div`\r\n  background-color: ${themeColor};\r\n  padding: 0.8rem 1rem;\r\n  font-size: 1.3rem;\r\n  border-radius: 1rem;\r\n`;\r\nconst InfoContainer = styled.div`\r\n  margin-left: 0.7rem;\r\n`;\r\nconst Title = styled.h3`\r\n  color: black;\r\n`;\r\nconst SubTitle = styled.h5`\r\n  color: #333333;\r\n  font-weight: normal;\r\n`;\r\n\r\nexport default Info;\r\n","C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\JoinSlack.jsx",[],"C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\Invoices.jsx",[],"C:\\ds_hms\\FE\\src\\pages\\Traveller\\TravellerDashboard\\Badge.jsx",[],"C:\\ds_hms\\FE\\src\\pages\\Traveller\\utils\\index.js",[],"C:\\ds_hms\\FE\\src\\components\\Traveller\\forms\\loginUser.jsx",["409","410","411"],"import React, { useState } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nimport FormSuper from './../reusables/formsuper';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass LoginUser extends FormSuper {\r\n  state = { \r\n\r\n\r\n    data: {\r\n      email: \"\",\r\n      password: \"\",\r\n    \r\n    },\r\n    errors: {},\r\n\r\n   } \r\n\r\n   schema = {\r\n    email: Joi.string().required(),\r\n    password: Joi.string().required(),\r\n    \r\n\r\n  };\r\n\r\n  componentDidMount(){\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  async doSubmit(){\r\n\r\n    const jsonOb = this.state.data;\r\n    console.log(\"submitted\")\r\n    console.log(jsonOb)\r\n     \r\n    try{\r\n      const response = await fetch(\"http://localhost:8082/userByEmail/\"+ jsonOb.email, {\r\n        method: \"GET\",\r\n      });\r\n  \r\n  \r\n      const data = await response.json();\r\n  \r\n      console.log(data);\r\n  \r\n      if(data){\r\n  \r\n        if(data.email === jsonOb.email && data.password === jsonOb.password){\r\n          localStorage.setItem(\"logged\", \"kk\");\r\n          localStorage.setItem(\"user_role\", data.type)\r\n          localStorage.setItem(\"is_login\", \"1\")\r\n          localStorage.setItem(\"u_name\", data.fullName);\r\n          localStorage.setItem(\"u_id\", data.id);\r\n          window.location.href = \"/\";\r\n          \r\n        }\r\n  \r\n\r\n\r\n    }\r\n    \r\n    }catch(ex){\r\n\r\n      alert(\"invalid credentials!\");\r\n    }\r\n    \r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <React.Fragment>\r\n    \r\n    <div className=\"row\" style={{marginTop:\"100px\"}}>\r\n      <div className=\"col-4\"></div>\r\n      <div className=\"col\" style={{backgroundColor:\"#F2F3F4\"}}>\r\n      <h1 className=\"mb-4\">Sign in</h1>\r\n      <form onSubmit={this.handleSubmit}>\r\n            <div className=\"my-2\">\r\n            {this.renderInput(\"email\", \"Email\")}\r\n            </div>\r\n            <div className=\"mb-5\">\r\n            {this.renderInput(\"password\", \"password\")}\r\n            </div>\r\n            \r\n           \r\n            {this.renderButton(\"Sign in\")}\r\n            <Link to=\"/registerTraveller\">Sign in as a Traveller</Link>\r\n           \r\n      </form>\r\n        \r\n\r\n      </div>\r\n      <div className=\"col-4\"></div>\r\n    </div>\r\n          \r\n        \r\n    </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n \r\nexport default LoginUser;\r\n","C:\\ds_hms\\FE\\src\\components\\Traveller\\reusables\\formsuper.jsx",["412"],"import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport TextArea from \"./textarea\";\r\nimport Radio from \"./radio\";\r\n\r\nclass FormSuper extends Component {\r\n\r\n\r\n  handleChange = ({ currentTarget }) => {\r\n     const errors = { ...this.state.errors };\r\n\r\n    const errorMessage = this.validateProperty(currentTarget);\r\n\r\n    if (errorMessage) errors[currentTarget.name] = errorMessage;\r\n    else delete errors[currentTarget.name];\r\n    const data = { ...this.state.data };\r\n    \r\n    data[currentTarget.name] = currentTarget.value;\r\n    this.setState({ data: data, errors: errors });\r\n    \r\n\r\n  };\r\n\r\n  validateProperty = (input) => {\r\n    const obj = { [input.name]: input.value };\r\n    const schema = { [input.name]: this.schema[input.name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  validate = () => {\r\n    const result = Joi.validate(this.state.data, this.schema, {\r\n      abortEarly: false,\r\n    });\r\n    console.log(result);\r\n    if (!result.error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of result.error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    console.log(errors);\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button\r\n        className=\"btn btn-sm btn-primary my-2\"\r\n        type=\"submit\"\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    return (\r\n      <Input\r\n      type={type}\r\n      name={name}\r\n      label={label}\r\n      value={this.state.data[name]}\r\n      onChange={this.handleChange}\r\n      error={this.state.errors[name]}\r\n      />\r\n      \r\n    );\r\n  }\r\n\r\n  renderTextArea(name, label) {\r\n    return (\r\n      <TextArea\r\n        name={name}\r\n        label={label}\r\n        value={this.state.data[name]}\r\n        onChange={this.handleChange}\r\n        error={this.state.errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={this.state.errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormSuper;\r\n","C:\\ds_hms\\FE\\src\\components\\Traveller\\reusables\\textarea.jsx",["413"],"import React, { Component } from \"react\";\r\n\r\nconst TextArea = ({ label, name, value, onChange, error }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label style={{ fontWeight: \"bold\" }} htmlFor={name}>\r\n        {label}\r\n      </label>\r\n      <textarea\r\n        cols=\"30\"\r\n        rows=\"3\"\r\n        className=\"form-control\"\r\n        style={{ border: \"1px solid #050139\" }}\r\n        value={value}\r\n        name={name}\r\n        autoComplete=\"off\"\r\n        onChange={onChange}\r\n      ></textarea>\r\n\r\n      {error && (\r\n        <div className=\"alert alert-danger\" style={{ padding: 3 }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","C:\\ds_hms\\FE\\src\\components\\Traveller\\reusables\\select.jsx",["414"],"import React, { Component } from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group my-2\">\r\n      <label style={{ fontWeight: \"bold\" }} htmlFor={name}>\r\n        {label}\r\n      </label>\r\n      <select\r\n        name={name}\r\n        id={name}\r\n        {...rest}\r\n        className=\"form-control\"\r\n        style={{ border: \"1px solid #050139\" }}\r\n      >\r\n        <option value=\"\" />\r\n\r\n        {options.map((opt) => (\r\n          <option key={opt.id} value={opt.type}>\r\n            {opt.type}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && (\r\n        <div className=\"alert alert-danger\" style={{ padding: 3 }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","C:\\ds_hms\\FE\\src\\components\\Traveller\\reusables\\input.jsx",["415"],"import React, { Component } from \"react\";\r\n\r\nconst Input = ({name, label, value, onChange, error, type }) => {\r\n  return ( \r\n    <div className=\"form-group my-1\">\r\n      <label style={{ fontWeight: \"bold\" }} htmlFor={name}>\r\n        {label}\r\n      </label>\r\n      <input\r\n        id={name}\r\n        type={type}\r\n        className=\"form-control\"\r\n        value={value}\r\n        name={name}\r\n        autoComplete=\"off\"\r\n        onChange={onChange}\r\n        style={{ border: \"2px solid #050139\" }}\r\n      />\r\n      {error && (\r\n        <div style={{ padding: 3, color: \"red\" }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","C:\\ds_hms\\FE\\src\\components\\Traveller\\reusables\\radio.jsx",["416","417","418"],"import React, { Component } from \"react\";\r\n\r\nconst Radio = ({ label, name, value, onChange, error }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ fontWeight: \"bold\" }}>Gender</div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          value=\"Male\"\r\n          name=\"Gender\"\r\n        />\r\n        <label className=\"form-check-label\" for=\"inlineRadio1\">\r\n          Male\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          checked\r\n          value=\"Female\"\r\n          name=\"Gender\"\r\n        />\r\n        <label className=\"form-check-label\" for=\"inlineRadio2\">\r\n          Female\r\n        </label>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n","C:\\ds_hms\\FE\\src\\components\\Traveller\\forms\\registerTraveller.jsx",["419","420","421"],"import React, { useState } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nimport FormSuper from '../reusables/formsuper';\r\n\r\n\r\n\r\nclass RegisterTraveller extends FormSuper {\r\n  state = { \r\n\r\n\r\n    data: {\r\n      fullName: \"\",\r\n      country: \"\",\r\n      email: \"\",\r\n      contact: \"\",\r\n      type: \"Traveller\",\r\n      password: \"\",\r\n    },\r\n    errors: {},\r\n    memberTypes: [{id: 1, type: 'Panel Member'}, {id: 2, type: 'Supervisor'}]\r\n\r\n   } \r\n\r\n   schema = {\r\n    fullName: Joi.string().required(),\r\n    country: Joi.string().required(),\r\n    email: Joi.string().required(),\r\n    contact: Joi.string().required(),\r\n    type: Joi.string(),\r\n    password: Joi.string().required(),\r\n  };\r\n\r\n  componentDidMount(){\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n   async doSubmit(){\r\n\r\n    \r\n    const ob = this.state.data;\r\n    const jsonOb = {\r\n\r\n      fullName: ob.fullName,\r\n      country: ob.country,\r\n      email: ob.email,\r\n      contact: ob.contact,\r\n      type: ob.type,\r\n      age: ob.age,\r\n      password: ob.password,\r\n    }\r\n    \r\n\r\n\r\n    console.log(\"submitted\")\r\n\r\n    const response = await fetch(\"http://localhost:8082/adduser\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(jsonOb),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(data);\r\n\r\n    if(data){\r\n\r\n      window.location.href = \"/\";\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <React.Fragment>\r\n    \r\n    <div className=\"row mt-4\">\r\n      <div className=\"col-3\"></div>\r\n      <div className=\"col\" style={{backgroundColor:\"#F2F3F4\"}}>\r\n      <h1>Register Me</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.renderInput(\"fullName\", \"Full Name\")}\r\n            {this.renderInput(\"country\", \"Country\")}\r\n            {this.renderInput(\"email\", \"Email Address\")}\r\n            {this.renderInput(\"contact\", \"Contact Number\")}\r\n            {this.renderInput(\"password\", \"Password\")}\r\n            {this.renderButton(\"Register Me\")}\r\n          </form>\r\n        \r\n\r\n      </div>\r\n      <div className=\"col-4\"></div>\r\n    </div>\r\n          \r\n        \r\n    </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n \r\nexport default RegisterTraveller;\r\n","C:\\ds_hms\\FE\\src\\pages\\Traveller\\viewAvailableRooms.jsx",[],"C:\\ds_hms\\FE\\src\\components\\Traveller\\tables\\tableViewAvailableRooms.jsx",[],"C:\\ds_hms\\FE\\src\\components\\Traveller\\forms\\askReserveDetails.jsx",["422","423","424"],"import React, { useState } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport FormSuper from './../reusables/formsuper';\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\"\r\n\r\n\r\n\r\nclass AskReserveDetails extends FormSuper {\r\n  state = { \r\n\r\n\r\n    data: {\r\n        roomNo: \"\",\r\n        type: \"\",\r\n        customerName: \"\",\r\n        customerId: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n    \r\n    },\r\n    errors: {},\r\n    reservedData: [],\r\n\r\n   } \r\n\r\n   schema = {\r\n    roomNo: Joi.string(),\r\n    type: Joi.string(),\r\n    customerName: Joi.string().required(),\r\n    customerId: Joi.string().required(),\r\n    startDate: Joi.string().required(),\r\n    endDate: Joi.string().required(),\r\n    \r\n\r\n  };\r\n\r\n async componentDidMount(){\r\n\r\n\r\n    const response = await fetch(\"http://localhost:8082/reservedRooms\", {\r\n      method: \"GET\",\r\n    });\r\n\r\n    const reservedData = await response.json();\r\n\r\n\r\n         const room = this.props.room;\r\n         const data = {\r\n\r\n            roomNo: room.roomNo,\r\n            type: room.type,\r\n            customerName: \"\",\r\n            customerId: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n\r\n\r\n         }\r\n\r\n         this.setState({data, reservedData});\r\n         console.log(data, reservedData, \"ok\");\r\n\r\n  }\r\n\r\n  async doSubmit(){\r\n    \r\n\r\n    const {reservedData} = this.state;\r\n\r\n    const jsonOb = this.state.data;\r\n    console.log(\"submitted\")\r\n    console.log(jsonOb)\r\n     \r\n    let dateFrom = jsonOb.startDate;\r\n    let dateTo = jsonOb.endDate;\r\n\r\n    let dateBetween =  \"2022-05-19\";\r\n\r\n    let from = Date.parse(dateFrom);\r\n    let to   = Date.parse(dateTo);\r\n    let check= Date.parse(dateBetween);\r\n\r\n    let d1 =  moment(from).format(\"MM-DD-YYYY\");\r\n    let d2 = moment(to).format(\"MM-DD-YYYY\");\r\n    let d3 = moment(check).format(\"MM-DD-YYYY\");\r\n\r\n    console.log(d1, d2, d3);\r\n    //console.log(check);\r\n\r\n    let reservedStartDate;\r\n    let reservedEndDate;\r\n\r\n    \r\n\r\n    for(let i=0; i < reservedData.length; i++){\r\n     console.log(reservedData[i].startDate, \"hello\", reservedData[0].endDate)\r\n     \r\n     reservedStartDate =   moment(Date.parse(reservedData[i].startDate)).format(\"MM-DD-YYYY\");\r\n     reservedEndDate  =    moment( Date.parse(reservedData[i].endDate)).format(\"MM-DD-YYYY\");\r\n\r\n\r\n     console.log(reservedStartDate);\r\n\r\n\r\n     \r\n    if((reservedStartDate <= d2 && reservedStartDate >= d1) || (reservedEndDate <= d2 && reservedEndDate >= d1)){\r\n\r\n     \r\n      swal({\r\n        text: \"You have reserved a another reservation between   \"+ dateFrom + \"-\"+ dateTo,\r\n        icon: \"warning\",\r\n        timer: \"2000\",\r\n      });\r\n\r\n      break;\r\n    }\r\n    else{\r\n\r\n\r\n      const response = await fetch(\"http://localhost:8082/addReservedRoom\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(jsonOb),\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      console.log(data);\r\n      \r\n      swal({\r\n        text: \"Room Reserved successfully.\",\r\n        icon: \"success\",\r\n        timer: \"2000\",\r\n      });\r\n      this.props.onClose();\r\n\r\n      break;\r\n\r\n    }  //end of else    \r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n    // if((d3 <= d2 && d3 >= d1)){\r\n\r\n     \r\n    //   swal({\r\n    //     text: \"You have reserved a another reservation between \"+ dateFrom + \"-\"+ dateTo,\r\n    //     icon: \"warning\",\r\n    //     timer: \"2000\",\r\n    //   });\r\n    // }\r\n    \r\n    \r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <React.Fragment>\r\n    \r\n    \r\n      <div className=\"col\" style={{backgroundColor:\"#F2F3F4\"}}>\r\n      {/* <h1 className=\"mb-4\">Reserve your room</h1> */}\r\n      <form onSubmit={this.handleSubmit}>\r\n            <div className=\"my-2\">\r\n            {this.renderInput(\"customerName\", \"Your Name\")}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n            {this.renderInput(\"customerId\", \"Passport No\")}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n            {this.renderInput(\"startDate\", \"Start Date\", \"date\")}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n            {this.renderInput(\"endDate\", \"End Date\", \"date\")}\r\n            </div>\r\n            \r\n           \r\n            {this.renderButton(\"Make Reservation\")}\r\n           \r\n           \r\n      </form>\r\n        \r\n\r\n      </div>\r\n\r\n          \r\n        \r\n    </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n \r\nexport default AskReserveDetails;\r\n","C:\\ds_hms\\FE\\src\\pages\\Traveller\\viewReservedRooms.jsx",["425","426"],"import React, { Component } from 'react'\r\nimport TableViewAvailableRooms from '../../components/Traveller/tables/tableViewAvailableRooms';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport AskReserveDetails from '../../components/Traveller/forms/askReserveDetails';\r\nimport { Link } from 'react-router-dom';\r\nimport TableViewReservedRooms from '../../components/Traveller/tables/tableViewReservedRooms';\r\n\r\n\r\nclass ViewReservedRooms extends Component {\r\n    state = { \r\n\r\n        reservedRooms : [],\r\n        openModal: false,\r\n        editMember: {},\r\n        show: false,\r\n        editOb: {},\r\n     }\r\n    \r\n\r\n    handleRemove = async(id) => {\r\n\r\n      console.log(\"handle remove\", id);\r\n\r\n      const  reservedRooms = this.state.reservedRooms.filter(room => room.id !== id);\r\n      this.setState({reservedRooms});\r\n\r\n      const response = await fetch(\"http://localhost:8082/delete/reserved/\"+id, {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n\r\n     // const data = await response.json();\r\n      console.log(response);\r\n      //db delete request\r\n      \r\n\r\n\r\n    } \r\n\r\n    handleEditModal = (member) => {\r\n\r\n\r\n        this.setState({openModal: true});\r\n        console.log(\"edit modal\", member._id)\r\n    }\r\n    closeOpenedModal = () => {\r\n\r\n        this.setState({openModal: false});\r\n    }\r\n    \r\n\r\n   async componentDidMount(){\r\n\r\n        const response = await fetch(\"http://localhost:8082/reservedRooms\", {\r\n            method: \"GET\",\r\n          });\r\n\r\n          const data = await response.json();\r\n          \r\n          this.setState({reservedRooms: data})\r\n          console.log(data);\r\n\r\n\r\n    }\r\n\r\n    handleShow = (room) => {\r\n        this.setState({show: true, editOb: room});\r\n    }\r\n    handleClose = () => {\r\n\r\n        this.setState({show: false});\r\n    }\r\n\r\n\r\n\r\n\r\n    render() { \r\n        return (\r\n            <>\r\n            reserved rooms\r\n            \r\n           <TableViewReservedRooms filteredItems={this.state.reservedRooms} onModalView={this.handleShow} onRemove={this.handleRemove}/>\r\n           {/* <TableViewMember filteredItems={this.state.users} onRemove={this.handleRemove}\r\n            openEditModal={this.handleEditModal} */}\r\n            {/* /> */}\r\n            <Modal show={this.state.show}>\r\n             <Modal.Header>\r\n\r\n               <Modal.Title>Reserve your room</Modal.Title>\r\n             </Modal.Header>\r\n             <Modal.Body>\r\n\r\n\r\n            <AskReserveDetails  room={this.state.editOb} onClose={this.handleClose}/>\r\n\r\n\r\n             </Modal.Body>\r\n             <Modal.Footer>\r\n                 <Button variant='danger' onClick={this.handleClose}>\r\n                  close\r\n                 </Button>\r\n                 <Button variant='primary'>\r\n                   save\r\n                 </Button>\r\n\r\n             </Modal.Footer>\r\n\r\n            </Modal>\r\n            </>\r\n           \r\n        );\r\n    }\r\n}\r\n \r\nexport default ViewReservedRooms;","C:\\ds_hms\\FE\\src\\components\\Traveller\\tables\\tableViewReservedRooms.jsx",[],"C:\\ds_hms\\FE\\src\\components\\Traveller\\reusables\\clock.jsx",[],"C:\\ds_hms\\FE\\src\\pages\\Traveller\\myProfile.jsx",["427"],"C:\\ds_hms\\FE\\src\\components\\Traveller\\tables\\tableProfile.jsx",["428"],"import React, { useState } from \"react\";\r\n\r\nconst TableProfile = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <table\r\n        className=\"table table-bordered table-sm my-3\"\r\n        style={{ width: \"1000px\" }}\r\n      >\r\n        <thead></thead>\r\n\r\n        <tbody>\r\n          <tr>\r\n            <td colSpan=\"2\" style={{ textAlign: \"center\", fontSize: 20 }}>\r\n              {/* <img\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  width: \"200px\",\r\n                  height: \"200px\",\r\n                }}\r\n                src={userPic}\r\n                alt=\"user image\"\r\n              /> */}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Full name</td>\r\n            <td>{}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Date of birth</td>\r\n            <td>{}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Email address</td>\r\n            <td>{}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Contact number</td>\r\n            <td>{}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Age</td>\r\n            <td>{}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Gender</td>\r\n            <td>{}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Address</td>\r\n            <td>{}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Designation</td>\r\n            <td>{}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Bank Name</td>\r\n            <td>{}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Account Number</td>\r\n            <td>{}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Branch</td>\r\n            <td>{}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Branch code</td>\r\n            <td>{}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Number of Family members</td>\r\n            <td>{}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-4\"></div>\r\n        <div className=\"col\">\r\n          <button\r\n           \r\n            className=\" btn btn-primary m-1\"\r\n           \r\n          >\r\n            Edit Profile\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn btn-danger\"\r\n           \r\n           \r\n          >\r\n            Delete Profile\r\n          </button>\r\n        </div>\r\n        <div className=\"col-2\"></div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TableProfile;\r\n",{"ruleId":"429","replacedBy":"430"},{"ruleId":"431","replacedBy":"432"},{"ruleId":"433","severity":1,"message":"434","line":2,"column":27,"nodeType":"435","messageId":"436","endLine":2,"endColumn":33},{"ruleId":"433","severity":1,"message":"437","line":2,"column":35,"nodeType":"435","messageId":"436","endLine":2,"endColumn":41},{"ruleId":"438","severity":1,"message":"439","line":51,"column":21,"nodeType":"440","messageId":"441","endLine":51,"endColumn":23},{"ruleId":"438","severity":1,"message":"442","line":54,"column":26,"nodeType":"440","messageId":"441","endLine":54,"endColumn":28},{"ruleId":"438","severity":1,"message":"442","line":59,"column":26,"nodeType":"440","messageId":"441","endLine":59,"endColumn":28},{"ruleId":"438","severity":1,"message":"442","line":64,"column":26,"nodeType":"440","messageId":"441","endLine":64,"endColumn":28},{"ruleId":"438","severity":1,"message":"439","line":77,"column":21,"nodeType":"440","messageId":"441","endLine":77,"endColumn":23},{"ruleId":"438","severity":1,"message":"442","line":85,"column":25,"nodeType":"440","messageId":"441","endLine":85,"endColumn":27},{"ruleId":"438","severity":1,"message":"442","line":98,"column":26,"nodeType":"440","messageId":"441","endLine":98,"endColumn":28},{"ruleId":"438","severity":1,"message":"442","line":110,"column":26,"nodeType":"440","messageId":"441","endLine":110,"endColumn":28},{"ruleId":"433","severity":1,"message":"443","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":15},{"ruleId":"433","severity":1,"message":"444","line":3,"column":25,"nodeType":"435","messageId":"436","endLine":3,"endColumn":28},{"ruleId":"433","severity":1,"message":"445","line":3,"column":30,"nodeType":"435","messageId":"436","endLine":3,"endColumn":33},{"ruleId":"433","severity":1,"message":"446","line":3,"column":41,"nodeType":"435","messageId":"436","endLine":3,"endColumn":50},{"ruleId":"433","severity":1,"message":"447","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":15},{"ruleId":"433","severity":1,"message":"447","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":15},{"ruleId":"433","severity":1,"message":"448","line":3,"column":17,"nodeType":"435","messageId":"436","endLine":3,"endColumn":23},{"ruleId":"433","severity":1,"message":"449","line":4,"column":8,"nodeType":"435","messageId":"436","endLine":4,"endColumn":13},{"ruleId":"438","severity":1,"message":"442","line":87,"column":91,"nodeType":"440","messageId":"441","endLine":87,"endColumn":93},{"ruleId":"433","severity":1,"message":"447","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":15},{"ruleId":"433","severity":1,"message":"447","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":15},{"ruleId":"433","severity":1,"message":"447","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":15},{"ruleId":"433","severity":1,"message":"447","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":15},{"ruleId":"433","severity":1,"message":"448","line":3,"column":17,"nodeType":"435","messageId":"436","endLine":3,"endColumn":23},{"ruleId":"433","severity":1,"message":"449","line":4,"column":8,"nodeType":"435","messageId":"436","endLine":4,"endColumn":13},{"ruleId":"438","severity":1,"message":"442","line":87,"column":91,"nodeType":"440","messageId":"441","endLine":87,"endColumn":93},{"ruleId":"433","severity":1,"message":"450","line":2,"column":8,"nodeType":"435","messageId":"436","endLine":2,"endColumn":13},{"ruleId":"433","severity":1,"message":"447","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":15},{"ruleId":"433","severity":1,"message":"448","line":3,"column":17,"nodeType":"435","messageId":"436","endLine":3,"endColumn":23},{"ruleId":"433","severity":1,"message":"451","line":3,"column":25,"nodeType":"435","messageId":"436","endLine":3,"endColumn":38},{"ruleId":"433","severity":1,"message":"449","line":4,"column":8,"nodeType":"435","messageId":"436","endLine":4,"endColumn":13},{"ruleId":"433","severity":1,"message":"452","line":6,"column":8,"nodeType":"435","messageId":"436","endLine":6,"endColumn":13},{"ruleId":"433","severity":1,"message":"453","line":8,"column":10,"nodeType":"435","messageId":"436","endLine":8,"endColumn":32},{"ruleId":"433","severity":1,"message":"454","line":4,"column":10,"nodeType":"435","messageId":"436","endLine":4,"endColumn":14},{"ruleId":"433","severity":1,"message":"444","line":4,"column":16,"nodeType":"435","messageId":"436","endLine":4,"endColumn":19},{"ruleId":"433","severity":1,"message":"445","line":4,"column":21,"nodeType":"435","messageId":"436","endLine":4,"endColumn":24},{"ruleId":"433","severity":1,"message":"455","line":4,"column":26,"nodeType":"435","messageId":"436","endLine":4,"endColumn":35},{"ruleId":"433","severity":1,"message":"456","line":4,"column":37,"nodeType":"435","messageId":"436","endLine":4,"endColumn":42},{"ruleId":"433","severity":1,"message":"454","line":4,"column":10,"nodeType":"435","messageId":"436","endLine":4,"endColumn":14},{"ruleId":"433","severity":1,"message":"444","line":4,"column":16,"nodeType":"435","messageId":"436","endLine":4,"endColumn":19},{"ruleId":"433","severity":1,"message":"445","line":4,"column":21,"nodeType":"435","messageId":"436","endLine":4,"endColumn":24},{"ruleId":"433","severity":1,"message":"455","line":4,"column":26,"nodeType":"435","messageId":"436","endLine":4,"endColumn":35},{"ruleId":"433","severity":1,"message":"456","line":4,"column":37,"nodeType":"435","messageId":"436","endLine":4,"endColumn":42},{"ruleId":"433","severity":1,"message":"454","line":4,"column":10,"nodeType":"435","messageId":"436","endLine":4,"endColumn":14},{"ruleId":"433","severity":1,"message":"444","line":4,"column":16,"nodeType":"435","messageId":"436","endLine":4,"endColumn":19},{"ruleId":"433","severity":1,"message":"445","line":4,"column":21,"nodeType":"435","messageId":"436","endLine":4,"endColumn":24},{"ruleId":"433","severity":1,"message":"455","line":4,"column":26,"nodeType":"435","messageId":"436","endLine":4,"endColumn":35},{"ruleId":"433","severity":1,"message":"456","line":4,"column":37,"nodeType":"435","messageId":"436","endLine":4,"endColumn":42},{"ruleId":"433","severity":1,"message":"457","line":2,"column":13,"nodeType":"435","messageId":"436","endLine":2,"endColumn":20},{"ruleId":"433","severity":1,"message":"446","line":2,"column":41,"nodeType":"435","messageId":"436","endLine":2,"endColumn":50},{"ruleId":"433","severity":1,"message":"458","line":6,"column":10,"nodeType":"435","messageId":"436","endLine":6,"endColumn":18},{"ruleId":"459","severity":1,"message":"460","line":57,"column":23,"nodeType":"461","messageId":"441","endLine":57,"endColumn":27,"fix":"462"},{"ruleId":"433","severity":1,"message":"446","line":2,"column":41,"nodeType":"435","messageId":"436","endLine":2,"endColumn":50},{"ruleId":"433","severity":1,"message":"458","line":6,"column":10,"nodeType":"435","messageId":"436","endLine":6,"endColumn":18},{"ruleId":"459","severity":1,"message":"460","line":68,"column":25,"nodeType":"461","messageId":"441","endLine":68,"endColumn":29,"fix":"463"},{"ruleId":"433","severity":1,"message":"446","line":4,"column":41,"nodeType":"435","messageId":"436","endLine":4,"endColumn":50},{"ruleId":"433","severity":1,"message":"458","line":7,"column":10,"nodeType":"435","messageId":"436","endLine":7,"endColumn":18},{"ruleId":"459","severity":1,"message":"460","line":69,"column":25,"nodeType":"461","messageId":"441","endLine":69,"endColumn":29,"fix":"464"},{"ruleId":"433","severity":1,"message":"446","line":2,"column":41,"nodeType":"435","messageId":"436","endLine":2,"endColumn":50},{"ruleId":"433","severity":1,"message":"458","line":6,"column":10,"nodeType":"435","messageId":"436","endLine":6,"endColumn":18},{"ruleId":"459","severity":1,"message":"460","line":51,"column":25,"nodeType":"461","messageId":"441","endLine":51,"endColumn":29,"fix":"465"},{"ruleId":"433","severity":1,"message":"447","line":2,"column":10,"nodeType":"435","messageId":"436","endLine":2,"endColumn":15},{"ruleId":"433","severity":1,"message":"448","line":2,"column":17,"nodeType":"435","messageId":"436","endLine":2,"endColumn":23},{"ruleId":"459","severity":1,"message":"460","line":43,"column":13,"nodeType":"461","messageId":"441","endLine":43,"endColumn":17,"fix":"466"},{"ruleId":"433","severity":1,"message":"467","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":26},{"ruleId":"433","severity":1,"message":"447","line":2,"column":10,"nodeType":"435","messageId":"436","endLine":2,"endColumn":15},{"ruleId":"433","severity":1,"message":"448","line":2,"column":17,"nodeType":"435","messageId":"436","endLine":2,"endColumn":23},{"ruleId":"459","severity":1,"message":"460","line":42,"column":13,"nodeType":"461","messageId":"441","endLine":42,"endColumn":17,"fix":"468"},{"ruleId":"433","severity":1,"message":"447","line":2,"column":10,"nodeType":"435","messageId":"436","endLine":2,"endColumn":15},{"ruleId":"433","severity":1,"message":"448","line":2,"column":17,"nodeType":"435","messageId":"436","endLine":2,"endColumn":23},{"ruleId":"459","severity":1,"message":"460","line":42,"column":13,"nodeType":"461","messageId":"441","endLine":42,"endColumn":17,"fix":"469"},{"ruleId":"433","severity":1,"message":"470","line":51,"column":30,"nodeType":"435","messageId":"436","endLine":51,"endColumn":37},{"ruleId":"433","severity":1,"message":"447","line":2,"column":10,"nodeType":"435","messageId":"436","endLine":2,"endColumn":15},{"ruleId":"433","severity":1,"message":"448","line":2,"column":17,"nodeType":"435","messageId":"436","endLine":2,"endColumn":23},{"ruleId":"459","severity":1,"message":"460","line":39,"column":13,"nodeType":"461","messageId":"441","endLine":39,"endColumn":17,"fix":"471"},{"ruleId":"433","severity":1,"message":"450","line":2,"column":8,"nodeType":"435","messageId":"436","endLine":2,"endColumn":13},{"ruleId":"433","severity":1,"message":"446","line":4,"column":41,"nodeType":"435","messageId":"436","endLine":4,"endColumn":50},{"ruleId":"433","severity":1,"message":"458","line":7,"column":10,"nodeType":"435","messageId":"436","endLine":7,"endColumn":18},{"ruleId":"459","severity":1,"message":"460","line":69,"column":25,"nodeType":"461","messageId":"441","endLine":69,"endColumn":29,"fix":"472"},{"ruleId":"433","severity":1,"message":"446","line":2,"column":41,"nodeType":"435","messageId":"436","endLine":2,"endColumn":50},{"ruleId":"433","severity":1,"message":"446","line":2,"column":41,"nodeType":"435","messageId":"436","endLine":2,"endColumn":50},{"ruleId":"433","severity":1,"message":"446","line":2,"column":41,"nodeType":"435","messageId":"436","endLine":2,"endColumn":50},{"ruleId":"433","severity":1,"message":"446","line":2,"column":41,"nodeType":"435","messageId":"436","endLine":2,"endColumn":50},{"ruleId":"433","severity":1,"message":"450","line":6,"column":8,"nodeType":"435","messageId":"436","endLine":6,"endColumn":13},{"ruleId":"433","severity":1,"message":"473","line":7,"column":8,"nodeType":"435","messageId":"436","endLine":7,"endColumn":29},{"ruleId":"433","severity":1,"message":"474","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":22},{"ruleId":"433","severity":1,"message":"475","line":4,"column":10,"nodeType":"435","messageId":"436","endLine":4,"endColumn":20},{"ruleId":"433","severity":1,"message":"476","line":43,"column":7,"nodeType":"435","messageId":"436","endLine":43,"endColumn":18},{"ruleId":"433","severity":1,"message":"477","line":47,"column":7,"nodeType":"435","messageId":"436","endLine":47,"endColumn":12},{"ruleId":"433","severity":1,"message":"478","line":56,"column":7,"nodeType":"435","messageId":"436","endLine":56,"endColumn":19},{"ruleId":"433","severity":1,"message":"479","line":62,"column":7,"nodeType":"435","messageId":"436","endLine":62,"endColumn":14},{"ruleId":"433","severity":1,"message":"480","line":66,"column":7,"nodeType":"435","messageId":"436","endLine":66,"endColumn":23},{"ruleId":"433","severity":1,"message":"481","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":18},{"ruleId":"433","severity":1,"message":"482","line":31,"column":7,"nodeType":"435","messageId":"436","endLine":31,"endColumn":11},{"ruleId":"433","severity":1,"message":"483","line":40,"column":7,"nodeType":"435","messageId":"436","endLine":40,"endColumn":21},{"ruleId":"433","severity":1,"message":"484","line":44,"column":7,"nodeType":"435","messageId":"436","endLine":44,"endColumn":11},{"ruleId":"433","severity":1,"message":"485","line":57,"column":7,"nodeType":"435","messageId":"436","endLine":57,"endColumn":12},{"ruleId":"433","severity":1,"message":"486","line":4,"column":8,"nodeType":"435","messageId":"436","endLine":4,"endColumn":20},{"ruleId":"433","severity":1,"message":"487","line":81,"column":7,"nodeType":"435","messageId":"436","endLine":81,"endColumn":18},{"ruleId":"433","severity":1,"message":"488","line":3,"column":8,"nodeType":"435","messageId":"436","endLine":3,"endColumn":13},{"ruleId":"433","severity":1,"message":"489","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":25},{"ruleId":"433","severity":1,"message":"450","line":3,"column":8,"nodeType":"435","messageId":"436","endLine":3,"endColumn":13},{"ruleId":"433","severity":1,"message":"490","line":4,"column":8,"nodeType":"435","messageId":"436","endLine":4,"endColumn":12},{"ruleId":"433","severity":1,"message":"491","line":6,"column":8,"nodeType":"435","messageId":"436","endLine":6,"endColumn":13},{"ruleId":"433","severity":1,"message":"467","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":26},{"ruleId":"433","severity":1,"message":"467","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":26},{"ruleId":"433","severity":1,"message":"467","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":26},{"ruleId":"433","severity":1,"message":"467","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":26},{"ruleId":"492","severity":1,"message":"493","line":22,"column":11,"nodeType":"494","messageId":"495","endLine":22,"endColumn":39},{"ruleId":"492","severity":1,"message":"493","line":23,"column":11,"nodeType":"494","messageId":"495","endLine":23,"endColumn":23},{"ruleId":"433","severity":1,"message":"489","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":25},{"ruleId":"433","severity":1,"message":"450","line":3,"column":8,"nodeType":"435","messageId":"436","endLine":3,"endColumn":13},{"ruleId":"433","severity":1,"message":"490","line":4,"column":8,"nodeType":"435","messageId":"436","endLine":4,"endColumn":12},{"ruleId":"433","severity":1,"message":"489","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":25},{"ruleId":"433","severity":1,"message":"450","line":3,"column":8,"nodeType":"435","messageId":"436","endLine":3,"endColumn":13},{"ruleId":"433","severity":1,"message":"496","line":6,"column":10,"nodeType":"435","messageId":"436","endLine":6,"endColumn":14},{"ruleId":"433","severity":1,"message":"497","line":2,"column":8,"nodeType":"435","messageId":"436","endLine":2,"endColumn":31},{"ruleId":"433","severity":1,"message":"496","line":5,"column":10,"nodeType":"435","messageId":"436","endLine":5,"endColumn":14},{"ruleId":"433","severity":1,"message":"498","line":70,"column":11,"nodeType":"435","messageId":"436","endLine":70,"endColumn":24},{"ruleId":"433","severity":1,"message":"489","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":25},"no-native-reassign",["499"],"no-negated-in-lhs",["500"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Modal' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'FormGroup' is defined but never used.","'Table' is defined but never used.","'Button' is defined but never used.","'Chart' is defined but never used.","'axios' is defined but never used.","'ButtonToolbar' is defined but never used.","'hello' is defined but never used.","'AddFactoryDetailsModal' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'Image' is defined but never used.","'FaIcons' is defined but never used.","'Redirect' is defined but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"501","text":"502"},{"range":"503","text":"502"},{"range":"504","text":"502"},{"range":"505","text":"502"},{"range":"506","text":"502"},"'Component' is defined but never used.",{"range":"507","text":"502"},{"range":"508","text":"502"},"'version' is assigned a value but never used.",{"range":"509","text":"502"},{"range":"510","text":"502"},"'ProjectRecommendation' is defined but never used.","'IoStatsChart' is defined but never used.","'themeColor' is defined but never used.","'CardContent' is assigned a value but never used.","'Chart' is assigned a value but never used.","'EarningsText' is assigned a value but never used.","'Earning' is assigned a value but never used.","'EarningsIncrease' is assigned a value but never used.","'FiSearch' is defined but never used.","'Text' is assigned a value but never used.","'InputContainer' is assigned a value but never used.","'Icon' is assigned a value but never used.","'Input' is assigned a value but never used.","'AvatarImage2' is defined but never used.","'AllProjects' is assigned a value but never used.","'Badge' is defined but never used.","'useState' is defined but never used.","'swal' is defined but never used.","'Radio' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Link' is defined but never used.","'TableViewAvailableRooms' is defined but never used.","'currentUserId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2007,2018],"",[2596,2607],[2384,2395],[1795,1806],[1306,1317],[1309,1320],[1287,1298],[1225,1236],[2402,2413]]