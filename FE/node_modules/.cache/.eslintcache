[{"/home/prabath/Desktop/Hotel Management Sytem/src/index.js":"1","/home/prabath/Desktop/Hotel Management Sytem/src/App.js":"2","/home/prabath/Desktop/Hotel Management Sytem/src/reportWebVitals.js":"3","/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/login.jsx":"4","/home/prabath/Desktop/Hotel Management Sytem/src/pages/Dashboard.jsx":"5","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/sideNav/Sidebar.jsx":"6","/home/prabath/Desktop/Hotel Management Sytem/src/pages/charts/chart.js":"7","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/sideNav/SidebarData.js":"8","/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/UserList.jsx":"9","/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/Dashboard.jsx":"10","/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/UserRoles.jsx":"11","/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/BasicInfo.jsx":"12","/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/Categories.jsx":"13","/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/ProductCodes.jsx":"14","/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/MaterialCodes.jsx":"15","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/sideNav/SubMenu.jsx":"16","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/UserListTable.jsx":"17","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/RejectUsersTable.jsx":"18","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/ApprovedUsersTable.jsx":"19","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/CategoriesTable.jsx":"20","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/ProductCodesTable.jsx":"21","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/UserRolesTable.jsx":"22","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/MaterialCodeTable.jsx":"23","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/AddMaterialCodeModal.jsx":"24","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/AddProductCodeModal.jsx":"25","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/AddCategoryModal.jsx":"26","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/AddFactoryDetailsModal.jsx":"27","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/EditCategoryModal.jsx":"28","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/EditProductCodeModal.jsx":"29","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/EditMaterialCodeModal.jsx":"30","/home/prabath/Desktop/Hotel Management Sytem/src/pages/HotelStaff/Reservation.jsx":"31","/home/prabath/Desktop/Hotel Management Sytem/src/pages/HotelStaff/Dashboard.jsx":"32","/home/prabath/Desktop/Hotel Management Sytem/src/components/HotelStaff/sideNav/Sidebar.jsx":"33","/home/prabath/Desktop/Hotel Management Sytem/src/components/HotelStaff/sideNav/SidebarData.js":"34","/home/prabath/Desktop/Hotel Management Sytem/src/components/HotelStaff/Tables/ReservationTable.jsx":"35","/home/prabath/Desktop/Hotel Management Sytem/src/components/HotelStaff/Modals/AddReservationsModal.jsx":"36","/home/prabath/Desktop/Hotel Management Sytem/src/components/HotelStaff/sideNav/SubMenu.jsx":"37","/home/prabath/Desktop/Hotel Management Sytem/src/components/HotelStaff/Modals/EditReservationsModal.jsx":"38"},{"size":381,"mtime":1652580721949,"results":"39","hashOfConfig":"40"},{"size":139,"mtime":1652584550189,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1630766045032,"results":"42","hashOfConfig":"40"},{"size":3728,"mtime":1652580721949,"results":"43","hashOfConfig":"40"},{"size":3317,"mtime":1652588449087,"results":"44","hashOfConfig":"40"},{"size":1817,"mtime":1652580721949,"results":"45","hashOfConfig":"40"},{"size":812,"mtime":1652580721949,"results":"46","hashOfConfig":"40"},{"size":1634,"mtime":1652580721949,"results":"47","hashOfConfig":"40"},{"size":1492,"mtime":1652580721949,"results":"48","hashOfConfig":"40"},{"size":6341,"mtime":1652584613689,"results":"49","hashOfConfig":"40"},{"size":3171,"mtime":1652580721949,"results":"50","hashOfConfig":"40"},{"size":5208,"mtime":1652580721949,"results":"51","hashOfConfig":"40"},{"size":1454,"mtime":1652580721949,"results":"52","hashOfConfig":"40"},{"size":1616,"mtime":1652580721949,"results":"53","hashOfConfig":"40"},{"size":1630,"mtime":1652580721949,"results":"54","hashOfConfig":"40"},{"size":1591,"mtime":1652580721949,"results":"55","hashOfConfig":"40"},{"size":1278,"mtime":1652580721949,"results":"56","hashOfConfig":"40"},{"size":980,"mtime":1652580721949,"results":"57","hashOfConfig":"40"},{"size":916,"mtime":1652580721949,"results":"58","hashOfConfig":"40"},{"size":2829,"mtime":1652580721949,"results":"59","hashOfConfig":"40"},{"size":3021,"mtime":1652580721949,"results":"60","hashOfConfig":"40"},{"size":718,"mtime":1652580721949,"results":"61","hashOfConfig":"40"},{"size":3008,"mtime":1652580721949,"results":"62","hashOfConfig":"40"},{"size":6029,"mtime":1652580721949,"results":"63","hashOfConfig":"40"},{"size":6687,"mtime":1652580721949,"results":"64","hashOfConfig":"40"},{"size":5085,"mtime":1652580721949,"results":"65","hashOfConfig":"40"},{"size":8724,"mtime":1652580721949,"results":"66","hashOfConfig":"40"},{"size":4495,"mtime":1652580721949,"results":"67","hashOfConfig":"40"},{"size":5694,"mtime":1652580721949,"results":"68","hashOfConfig":"40"},{"size":5180,"mtime":1652580721949,"results":"69","hashOfConfig":"40"},{"size":1608,"mtime":1652582882595,"results":"70","hashOfConfig":"40"},{"size":6341,"mtime":1652584596533,"results":"71","hashOfConfig":"40"},{"size":1817,"mtime":1652581363387,"results":"72","hashOfConfig":"40"},{"size":1634,"mtime":1652581363387,"results":"73","hashOfConfig":"40"},{"size":2954,"mtime":1652587753933,"results":"74","hashOfConfig":"40"},{"size":6356,"mtime":1652586029755,"results":"75","hashOfConfig":"40"},{"size":1591,"mtime":1652581363387,"results":"76","hashOfConfig":"40"},{"size":4950,"mtime":1652588063171,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1wryc23",{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"125","usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"128","usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"134","usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"143","usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/prabath/Desktop/Hotel Management Sytem/src/index.js",[],["172","173"],"/home/prabath/Desktop/Hotel Management Sytem/src/App.js",[],"/home/prabath/Desktop/Hotel Management Sytem/src/reportWebVitals.js",[],"/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/login.jsx",["174","175","176"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport img1 from './fac1.jpeg'\nimport img2 from './signIn1.webp'\n\n\nclass login extends Component {\n  constructor(props) {\n    super(props);   \n    this.state = {\n        users: [], addModalShow: false\n    }\n    this.login = this.login.bind(this);\n}\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/login\")\n      .then((result) => {\n        const user = result.data;\n        \n        this.setState({ users: user });\n        // console.log(this.state.users.length);\n      })\n      .catch((err) => console.log(err.message));\n\n      \n  \n  }\n \n  login (event) {\n    this.state.users.forEach(element => {\n        if(element.email == event.target.email.value){\n            const password = element.password;\n            if(password == event.target.password.value){\n                const user_role = element.userRole;\n                localStorage.setItem('user_role', user_role);\n                const user_full_name = element.fullName;\n                localStorage.setItem('user_full_name', user_full_name);\n                localStorage.setItem('user_email', element.email);\n                localStorage.setItem('is_login', \"1\");\n              //   if(user_role == 'Super Admin'){\n              //       this.props.history.push('/super-admin-dashboard');\n              //       window.location.reload();\n              //   }\n              //   if(user_role == 'employee'){\n              //       this.props.history.push('/employee-dashboard');\n              //       window.location.reload();\n              //   }\n              //   if(user_role == 'production team member'){\n              //     this.props.history.push('/production-manager-dashboard');\n              //     window.location.reload();\n              // }\n                \n            }\n        }\n    });\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"row mt-5\">\n            <div className=\"col-md-4\">\n            <img src={img1} alt=\"img1\" />\n            </div>\n            <div className=\"col-md-4\">\n            <form  onSubmit={this.login} style={{ marginTop:\"150px\"}}>\n                        <h3>Sign In</h3>\n\n                        <div className=\"form-group\">\n                            <label>Email address</label>\n                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Enter email\" required />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Enter password\" required />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div className=\"custom-control custom-checkbox\">\n                                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                                <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                            </div>\n                        </div>\n\n                        <button style={{ backgroundColor: \"#7121AD\", color: \"white\" ,width:\"330px\"}} type=\"submit\" className=\"btn btn-primary btn-block\">Log In</button>\n                        <p className=\"forgot-password text-right\">\n                            Forgot <a href=\"#\">password?</a>\n                        </p>\n                </form>\n            </div>\n            <div className=\"col-md-4\">\n            <img src={img2} alt=\"img1\" style={{marginTop:\"450px\"}}/>\n            </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n};\n\nexport default  login;\n","/home/prabath/Desktop/Hotel Management Sytem/src/pages/Dashboard.jsx",["177","178","179","180","181","182","183","184"],"/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/sideNav/Sidebar.jsx",["185","186","187","188","189"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Container, Image } from \"react-bootstrap\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { SidebarData } from \"./SidebarData\";\nimport SubMenu from \"./SubMenu\";\nimport { IconContext } from \"react-icons/lib\";\n\nconst Nav = styled.div`\n  background: #15171c;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst NavIcon = styled(Link)`\n  margin-left: 2rem;\n  font-size: 2rem;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst SidebarNav = styled.nav`\n  background: #15171c;\n  width: 250px;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  @media only screen and (max-width: 1920px) {\n    left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\n  }\n  left: 0;\n  transition: 350ms;\n  z-index: 10;\n`;\n\nconst SidebarWrap = styled.div`\n  width: 100%;\n`;\n\nconst Sidebar = () => {\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: \"#fff\" }}>\n        <Nav>\n          <NavIcon to=\"#\">\n            <FaIcons.FaBars onClick={showSidebar} />\n          </NavIcon>\n        </Nav>\n        <SidebarNav sidebar={sidebar}>\n          <SidebarWrap>\n            <NavIcon to=\"#\">\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\n            </NavIcon>\n            {SidebarData.map((item, index) => {\n              return <SubMenu item={item} key={index} />;\n            })}\n          </SidebarWrap>\n        </SidebarNav>\n      </IconContext.Provider>\n    </>\n  );\n};\n\nexport default Sidebar;\n","/home/prabath/Desktop/Hotel Management Sytem/src/pages/charts/chart.js",[],"/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/sideNav/SidebarData.js",[],"/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/UserList.jsx",[],"/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/Dashboard.jsx",["190","191","192","193"],"/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/UserRoles.jsx",[],"/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/BasicInfo.jsx",["194","195","196","197"],"import React, { Component } from \"react\";\n\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport axios from \"axios\";\n\nclass BasicInfo extends Component  {\n  constructor(props) {\n    super(props);\n    this.state = { snackbaropen: false, snackbarmsg: '',  factoryDetails: [], };\n    this.handleSubmit = this.handleSubmit.bind(this);\n}\n\n  componentDidMount() {\n    axios\n    .get(\"http://localhost:5000/api/factory-details\")\n    .then((result) => {\n      const factoryDetails = result.data;\n      console.log(factoryDetails)\n\n      this.setState({ factoryDetails: factoryDetails });\n    })\n    .catch((err) => console.log(err.message));\n  }\n\n  handleSubmit(event, props) {\n    event.preventDefault();\n    //alert(event.target.name.value);\n\n    fetch('http://localhost:5000/api/factory-details', {\n        method: 'PUT',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'username': 'chathura'\n        },\n        body: JSON.stringify({\n            id: event.target.id.value,\n            companyName: event.target.companyName.value,\n            companyAddress: event.target.companyAddress.value,\n            ownerName: event.target.ownerName.value,\n            mainProduct: event.target.mainProduct.value,\n            startDate: event.target.startDate.value,\n            is_added:1\n        })\n    })\n        .then(res => res.json())\n        .then((result) => {\n            swal({\n                title: \"Factory Details Updated Succesfully\",\n                icon: \"success\",\n                button: \"Done\",\n              });\n        }, (error) => {\n            this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\n        }\n\n        )\n}\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h1>Basic Info</h1>\n            {this.state.factoryDetails.map((i) => (\n            <Form onSubmit={this.handleSubmit}  key={i._id}>\n                                      <Form.Group controlId=\"id\">\n                                        {/* <Form.Label>ID</Form.Label> */}\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={i._id} hidden/>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"companyName\">\n                                        <Form.Label>Company Name</Form.Label>\n                                        <Form.Control type=\"text\" name=\"companyName\" required placeholder=\"Company Name\" defaultValue={i.companyName} />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"companyAddress\">\n                                        <Form.Label>Company Address</Form.Label>\n                                        <Form.Control type=\"text\" name=\"companyAddress\" required placeholder=\"Company Address\" defaultValue={i.companyAddress} />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"ownerName\">\n                                        <Form.Label>Owner Name</Form.Label>\n                                        <Form.Control type=\"text\" name=\"ownerName\" required placeholder=\"Owner Name\" defaultValue={i.ownerName} />\n                                    </Form.Group>\n                                    {/* <Form.Group controlId=\"companyLogo\">\n                                        <Form.Label>Company Logo</Form.Label>\n                                        <Form.Control type=\"file\" name=\"companyLogo\" required placeholder=\"Category Name\" />\n                                    </Form.Group> */}\n                                    <Form.Group controlId=\"mainProduct\">\n                                        <Form.Label>Main Product</Form.Label>\n                                        <Form.Control type=\"text\" name=\"mainProduct\" required placeholder=\"Main Product\" defaultValue={i.mainProduct} />\n                                    </Form.Group>\n                                    {/* <Form.Group controlId=\"br\">\n                                        <Form.Label>br</Form.Label>\n                                        <Form.Control type=\"file\" name=\"br\" required placeholder=\"Category Name\" />\n                                    </Form.Group> */}\n                                    <Form.Group controlId=\"startDate\">\n                                        <Form.Label>startDate</Form.Label>\n                                        <Form.Control type=\"date\" name=\"startDate\" required placeholder=\"Start Date\" defaultValue={i.startDate} />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Button  variant=\"primary\" type=\"submit\" >\n                                            Update Factory Details\n                                        </Button>\n                                    </Form.Group>\n              </Form>\n            ))}\n          </div>\n\n          \n\n            \n        </div>\n      </React.Fragment>\n    );\n  }\n};\n\nexport default BasicInfo;\n","/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/Categories.jsx",["198"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\nimport { AddCategoryModal } from '../../components/SuperAdmin/Modals/AddCategoryModal';\nimport {CategoriesTable} from \"../../components/SuperAdmin/Tables/CategoriesTable\";\n\n\nclass Categories extends Component {\n  state = {\n    categories: [],\n    addModalShow: false\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {\n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n\n  render() {\n    let AddModelClose = () => this.setState({ addModalShow: false })\n    return (\n      <React.Fragment>\n        <h1 className=\"mb-5\">Categories</h1>\n        <ButtonToolbar>\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\n                    className=\"btn btn-lg\"\n                        onClick={() => this.setState({ addModalShow: true })}\n                    >Add Category\n                    </Button>\n                    <AddCategoryModal\n                        show={this.state.addModalShow}\n                        onHide={AddModelClose}\n                    />\n          </ButtonToolbar>\n            <CategoriesTable filteredItems={this.state.categories} />\n      </React.Fragment>\n    );\n  }\n};\n\nexport default Categories;\n","/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/ProductCodes.jsx",["199"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\nimport { AddProductCodeModal } from '../../components/SuperAdmin/Modals/AddProductCodeModal';\nimport {ProductCodesTable} from \"../../components/SuperAdmin/Tables/ProductCodesTable\";\n\n\nclass ProductCodes extends Component {\n  state = {\n    ProductCodes: [],\n    addModalShow: false\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/product-code\")\n      .then((result) => {\n        const ProductCodes = result.data;\n\n        this.setState({ ProductCodes: ProductCodes });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  render(){\n    let AddModelClose = () => this.setState({ addModalShow: false })\n  return (\n    <React.Fragment>\n        <h1 className=\"mb-5\">Product Codes</h1>\n        <ButtonToolbar>\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\n                    className=\"btn btn-lg\"\n                        onClick={() => this.setState({ addModalShow: true })}\n                    >Add Product Code\n                    </Button>\n                    <AddProductCodeModal\n                        show={this.state.addModalShow}\n                        onHide={AddModelClose}\n                    />\n        </ButtonToolbar>\n        <div className=\"row\">\n          <div className=\"col-1\"></div>\n          <div className=\"col\">\n            <ProductCodesTable filteredItems={this.state.ProductCodes} />\n          </div>\n        </div>\n      </React.Fragment>\n  );\n  }\n};\n\nexport default ProductCodes;\n","/home/prabath/Desktop/Hotel Management Sytem/src/pages/SuperAdmin/MaterialCodes.jsx",["200"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\nimport { AddMaterialCodeModal } from '../../components/SuperAdmin/Modals/AddMaterialCodeModal';\nimport {MaterialCodeTable} from \"../../components/SuperAdmin/Tables/MaterialCodeTable\";\n\nclass MaterialCodes extends Component {\n  state = {\n    MaterialCodes: [],\n    addModalShow: false\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/meterial-code\")\n      .then((result) => {\n        const MaterialCodes = result.data;\n\n        this.setState({ MaterialCodes: MaterialCodes });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  render(){\n    let AddModelClose = () => this.setState({ addModalShow: false })\n  return (\n    <React.Fragment>\n        <h1 className=\"mb-5\">Material Codes</h1>\n        <ButtonToolbar>\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\n                    className=\"btn btn-lg\"\n                        onClick={() => this.setState({ addModalShow: true })}\n                    >Add Material Code\n                    </Button>\n                    <AddMaterialCodeModal\n                        show={this.state.addModalShow}\n                        onHide={AddModelClose}\n                    />\n          </ButtonToolbar>\n        <div className=\"row\">\n          <div className=\"col-1\"></div>\n          <div className=\"col\">\n            <MaterialCodeTable filteredItems={this.state.MaterialCodes} />\n          </div>\n        </div>\n      </React.Fragment>\n  );\n  }\n};\n\nexport default MaterialCodes;\n","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/sideNav/SubMenu.jsx",[],"/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/UserListTable.jsx",[],"/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/RejectUsersTable.jsx",[],"/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/ApprovedUsersTable.jsx",[],"/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/CategoriesTable.jsx",["201","202","203","204"],"import React, { Component } from \"react\";\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport { EditCategoryModal } from '../Modals/EditCategoryModal';\n\nexport class CategoriesTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { cate: [], editModalShow: false }\n  }\n\n  deleteCat(id){\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this Recode!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n    .then((willDelete) => {\n      if (willDelete) {\n        fetch('http://localhost:5000/api/categories', {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'username': 'chathura'\n            },\n            body: JSON.stringify({\n                id: id\n               \n            })\n        }).then(res => res.json())\n        .then((result) => {\n          swal({\n            title: \"Category Deleted Succesfully\",\n            icon: \"success\",\n            button: \"Done\",\n          }); \n          setTimeout(function() {\n            window.location.reload(); \n          }.bind(this), 1500);\n      });\n      } else {\n        swal(\"Your imaginary file is safe!\");\n      }\n    });\n  }\n\n  render() {\n    const {id, name, status, version } = this.state;\n    let EditModelClose = () => this.setState({ editModalShow: false })\n  return (\n    <div>\n       <ButtonToolbar>\n\n        <EditCategoryModal\n            show={this.state.editModalShow}\n            onHide={EditModelClose}\n            id={id}\n            name={name}\n            status={status}\n        />\n        </ButtonToolbar>\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\n      <thead>\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Category</th>\n          <th scope=\"col\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {this.props.filteredItems.map((i) => (\n          <tr\n            key={i._id}\n            \n          >\n            <td>{i.userRoleNo}</td>\n            <td>{i.categoryName}</td>\n            <td><button \n              className=\"btn-sm\"\n              style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\n            onClick={() => this.setState({ editModalShow: true, id: i._id, name: i.categoryName, status: i.status })}\n            >Edit</button> \n            <button \n            className=\"btn-sm\"\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \n            onClick={() => this.deleteCat(i._id)}>Delete</button></td>\n          </tr>\n        ))}\n      </tbody>\n     \n    </table>\n    </div>\n  );\n};\n}\n\n\n","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/ProductCodesTable.jsx",["205","206","207"],"import React, { Component } from \"react\";\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport { EditProductCodeModal } from '../Modals/EditProductCodeModal';\n\n\nexport class ProductCodesTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { cate: [], editModalShow: false }\n  }\n\n  deleteProCode(id){\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this Recode!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n    .then((willDelete) => {\n      if (willDelete) {\n        fetch('http://localhost:5000/api/product-code', {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'username': 'chathura'\n            },\n            body: JSON.stringify({\n                id: id\n               \n            })\n        }).then(res => res.json())\n        .then((result) => {\n          swal({\n            title: \"Product Code Deleted Succesfully\",\n            icon: \"success\",\n            button: \"Done\",\n          });\n          setTimeout(function() {\n            window.location.reload(); \n          }.bind(this), 1500); \n      });\n      } else {\n        swal(\"Your imaginary file is safe!\");\n      }\n    });\n  }\n\n  render(){\n    const {id, productCode, productCategory, status } = this.state;\n    let EditModelClose = () => this.setState({ editModalShow: false })\n  return (\n    <div>\n      <ButtonToolbar>\n      <EditProductCodeModal\n          show={this.state.editModalShow} \n          onHide={EditModelClose}\n          id={id}\n          productCode={productCode}\n          productCategory={productCategory}\n          status={status}\n      />\n      </ButtonToolbar>\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\n      <thead>\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Product Code</th>\n          <th scope=\"col\">Product Category</th>\n          <th scope=\"col\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {this.props.filteredItems.map((i) => (\n          <tr\n            key={i._id}\n            \n          > \n            <td></td>\n            <td>{i.productCode}</td>\n            <td>{i.productCategory}</td>\n            <td><button \n            className=\"btn-sm\"\n            style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\n            onClick={() => this.setState({ editModalShow: true, id: i._id, productCode: i.productCode, productCategory: i.productCategory, status: i.status })}\n            >Edit</button> \n            <button \n            className=\"btn-sm\"\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \n            onClick={() => this.deleteProCode(i._id)}>Delete</button></td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n    </div>\n  );\n};\n};\n\n","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/UserRolesTable.jsx",["208"],"import React, { Component } from \"react\";\nconst UserRolesTable = ({ filteredItems}) => {\n  return (\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\n      <thead>\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">User Role</th>\n          <th scope=\"col\">Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {filteredItems.map((i) => (\n          <tr\n            key={i._id}\n           \n          >\n            <td>{i.userRoleNo}</td>\n            <td>{i.userRole}</td>\n            <td>{i.status}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default UserRolesTable;\n","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Tables/MaterialCodeTable.jsx",["209","210","211"],"import React, { Component } from \"react\";\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport { EditMaterialCodeModal } from '../Modals/EditMaterialCodeModal';\n\nexport class MaterialCodeTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { cate: [], editModalShow: false }\n  }\n\n  deleteMatCode (id){\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this Recode!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n    .then((willDelete) => {\n      if (willDelete) {\n        fetch('http://localhost:5000/api/meterial-code', {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'username': 'chathura'\n            },\n            body: JSON.stringify({\n                id: id\n               \n            })\n        }).then(res => res.json())\n        .then((result) => {\n          swal({\n            title: \"Material Code Deleted Succesfully\",\n            icon: \"success\",\n            button: \"Done\",\n          });\n          setTimeout(function() {\n            window.location.reload(); \n          }.bind(this), 1500);\n      });\n      \n      } else {\n        swal(\"Your imaginary file is safe!\");\n      }\n    });\n  }\n\n  render() {\n    const {id, matirialName, materialCode, status } = this.state;\n    let EditModelClose = () => this.setState({ editModalShow: false })\n  return (\n    <div>\n       <ButtonToolbar>\n      <EditMaterialCodeModal\n          show={this.state.editModalShow}\n          onHide={EditModelClose}\n          id={id}\n          matirialName={matirialName}\n          materialCode={materialCode}\n          status={status}\n      />\n      </ButtonToolbar>\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\n      <thead>\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Material Name</th>\n          <th scope=\"col\">Material Code</th>\n          <th scope=\"col\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {this.props.filteredItems.map((i) => (\n          <tr\n            key={i._id}\n          >\n            <td>1</td>\n            <td>{i.materialName}</td>\n            <td>{i.materialCode}</td>\n            <td><button \n            className=\"btn-sm\"\n            style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\n            onClick={() => this.setState({ editModalShow: true, id: i._id, matirialName: i.materialName, materialCode: i.materialCode, status: i.status })}\n            >Edit</button> \n            <button \n            className=\"btn-sm\"\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \n            onClick={() => this.deleteMatCode(i._id)}>Delete</button></td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n    </div>\n  );\n  }\n};\n\n\n","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/AddMaterialCodeModal.jsx",["212","213","214"],"import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport swal from 'sweetalert';\nimport { Redirect } from 'react-router-dom';\n\n\n\nexport class AddMaterialCodeModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            snackbaropen: false, \n            snackbarmsg: '',\n            materialNameError:'',\n            materialCodeError:''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    snackbarClose = (event) => {\n        this.setState({ snackbaropen: false });\n    };\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const isValid = this.validate(event);\n        if(isValid){\n            fetch('http://localhost:5000/api/meterial-code/', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'username': 'chathura'\n                },\n                body: JSON.stringify({\n                    materialName: event.target.materialName.value,\n                    materialCode: event.target.materialCode.value,\n                    status: event.target.status.value\n                })\n            })\n                .then(res => res.json())\n                .then((result) => {\n                    swal({\n                        title: \"Material Code Added Succesfully\",\n                        icon: \"success\",\n                        button: \"Done\",\n                    });\n                    this.setState({\n                        materialNameError: '',\n                        materialCodeError:''\n        \n                    }) \n                    setTimeout(function() {\n                        window.location.reload(); \n                    }.bind(this), 1500); \n                }, (error) => {\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\n                }\n\n                )\n        }\n    }\n\n    validate(event){\n        let materialNameError = '';\n        let materialCodeError = '';\n        \n        if(!event.target.materialName.value){\n            materialNameError = \"Material Name  Cannot Be Blank\"\n        }\n        if(!event.target.materialCode.value){\n            materialCodeError = \"Material Code Cannot Be Blank\"\n        }\n        \n\n        if(materialNameError || materialCodeError){\n         \n            this.setState({\n                materialNameError: materialNameError,\n                materialCodeError:materialCodeError\n\n            })\n            return false;\n        }\n        return true;\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.state.snackbaropen}\n                    autoHideDuration={6000}\n                    onClose={this.snackbarClose}\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\n                    ]}\n                />\n                <Modal\n                    {...this.props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                //centered\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Add Material Code\n              </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col sm={6}>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId=\"name\">\n                                        <Form.Label>Material Name</Form.Label>\n                                        <Form.Control type=\"text\" name=\"materialName\"  placeholder=\"Material Name\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.materialNameError}</div>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"name\">\n                                        <Form.Label>Material Code</Form.Label>\n                                        <Form.Control type=\"text\" name=\"materialCode\"  placeholder=\"Material Name\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.materialCodeError}</div>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Status</Form.Label>\n                                        <Form.Control as=\"select\" required name=\"status\">\n                                            <option selected>ACTIVE</option>\n                                            <option>INACTIVE</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <br />\n                                    <Form.Group>\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\n                                            Add Material Code\n                                        </Button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/AddProductCodeModal.jsx",["215","216","217"],"import React, { Component } from 'react';\nimport axios from \"axios\";\nimport swal from 'sweetalert';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Redirect } from 'react-router-dom';\n\n\nexport class AddProductCodeModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            snackbaropen: false, \n            snackbarmsg: '',\n            categories: [],\n            productCodeError:'',\n            productCategoryError:''\n         };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n    }\n    snackbarClose = (event) => {\n        this.setState({ snackbaropen: false });\n    };\n\n    componentDidMount() {\n        axios\n          .get(\"http://localhost:5000/api/categories\")\n          .then((result) => {\n            const categories = result.data;\n    \n            this.setState({ categories: categories });\n          })\n          .catch((err) => console.log(err.message));\n      }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n        const isValid = this.validate(event);\n        if(isValid){\n            fetch('http://localhost:5000/api/product-code/', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'username': 'chathura'\n                },\n                body: JSON.stringify({\n                    productCode: event.target.productCode.value,\n                    productCategory: event.target.productCategory.value,\n                    status: event.target.status.value\n                })\n            })\n                .then(res => res.json())\n                .then((result) => {\n                    swal({\n                        title: \"Product Code Added Succesfully\",\n                        icon: \"success\",\n                        button: \"Done\",\n                    });\n                    this.setState({\n                        productCodeError:'',\n                        productCategoryError:''\n                    })\n                    setTimeout(function() {\n                        window.location.reload(); \n                      }.bind(this), 1500);\n                }, (error) => {\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\n                }\n\n                )\n        }\n    }\n\n    validate(event){\n        let productCodeError = \"\";\n        let productCategoryError = \"\";\n      \n       \n        if(!event.target.productCode.value){\n            productCodeError = \"Product Code Cannot Be Blank\"\n        }\n        if(!event.target.productCategory.value){\n            productCategoryError = \"Please Select Product Category\"\n        }\n        \n       \n\n        if(productCodeError){\n            this.setState({\n                productCodeError:productCodeError,\n                productCategoryError:productCategoryError\n            })\n            return false;\n        }else{\n            return true;\n        }\n\n        \n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.state.snackbaropen}\n                    autoHideDuration={6000}\n                    onClose={this.snackbarClose}\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\n                    ]}\n                />\n                <Modal\n                    {...this.props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                //centered\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Add Product Code\n              </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col sm={6}>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId=\"name\">\n                                        <Form.Label>Product Code</Form.Label>\n                                        <Form.Control type=\"text\" name=\"productCode\"  placeholder=\"Product Code\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCodeError}</div>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Product Category</Form.Label>\n                                        <Form.Control as=\"select\" required name=\"productCategory\">\n                                        {this.state.categories.map((i) => (\n                                            <option key={i._id}\n                                                    >{i.categoryName}</option>\n                                        ))}\n                                        </Form.Control>  \n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCategoryError}</div>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Status</Form.Label>\n                                        <Form.Control as=\"select\"  name=\"status\">\n                                            <option selected>ACTIVE</option>\n                                            <option>INACTIVE</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <br />\n                                    <Form.Group>\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\n                                            Add Product Code\n                                        </Button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/AddCategoryModal.jsx",["218","219","220"],"import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport swal from 'sweetalert';\nimport { Redirect } from 'react-router-dom';\n\n\nexport class AddCategoryModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            snackbaropen: false, \n            snackbarmsg: '',\n            CategoryNameError:''\n             \n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    snackbarClose = (event) => {\n        this.setState({ snackbaropen: false });\n    };\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const isValid = this.validate();\n        if(isValid){\n            fetch('http://localhost:5000/api/categories', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'username': 'chathura'\n                },\n                body: JSON.stringify({\n                    categoryName: event.target.categoryName.value,\n                    status: event.target.status.value\n                })\n            })\n                .then(res => res.json())\n                .then((result) => {\n                    swal({\n                        title: \"Category Added Succesfully\",\n                        icon: \"success\",\n                        button: \"Done\",\n                    }); \n                    this.setState({CategoryNameError:''})\n                    setTimeout(function() {\n                        window.location.reload(); \n                      }.bind(this), 1000);\n                }, (error) => {\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\n                }\n\n                )\n        }\n    }\n\n    validate(){\n        let CategoryNameError = \"\";\n\n        if(!this.state.CategoryNameError){\n            CategoryNameError = \"Category Name Cannot Be Blank\"\n        }\n\n        if(CategoryNameError){\n            this.setState({CategoryNameError:CategoryNameError})\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.state.snackbaropen}\n                    autoHideDuration={6000}\n                    onClose={this.snackbarClose}\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\n                    ]}\n                />\n                <Modal\n                    {...this.props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                //centered\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Add Category\n              </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col sm={6}>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId=\"name\">\n                                        <Form.Label>Name</Form.Label>\n                                        <Form.Control type=\"text\" name=\"categoryName\"  placeholder=\"Category Name\" />\n                                          <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Status</Form.Label>\n                                        <Form.Control as=\"select\" required name=\"status\">\n                                            <option selected>ACTIVE</option>\n                                            <option>INACTIVE</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <br></br>\n                                    <Form.Group>\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\n                                            Add Category\n                                        </Button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/AddFactoryDetailsModal.jsx",["221","222","223"],"import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport swal from 'sweetalert';\nimport { Redirect } from 'react-router-dom';\n\n\nexport class AddFactoryDetailsModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            snackbaropen: false, \n            snackbarmsg: '',\n            companyNameError:'',\n            companyAddressError:'',\n            ownerNameError:'',\n            mainProductError:'',\n            startDateError:''\n\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    snackbarClose = (event) => {\n        this.setState({ snackbaropen: false });\n    };\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const isValid = this.validate(event);\n            if(isValid){\n                fetch('http://localhost:5000/api/factory-details', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'username': 'chathura'\n                },\n                body: JSON.stringify({\n                    companyName: event.target.companyName.value,\n                    companyAddress: event.target.companyAddress.value,\n                    ownerName: event.target.ownerName.value,\n                    mainProduct: event.target.mainProduct.value,\n                    startDate: event.target.startDate.value,\n                    is_added:1\n                    // companyName: event.target.companyName.value,\n                    // companyName: event.target.companyName.value,\n                })\n            })\n                .then(res => res.json())\n                .then((result) => {\n                    console.log(result);\n                    swal({\n                        title: \"Factory Details Added Succesfully\",\n                        icon: \"success\",\n                        button: \"Done\",\n                    }); \n                    this.setState({\n                        companyNameError:'',\n                        companyAddressError:'',\n                        ownerNameError:'',\n                        mainProductError:'',\n                        startDateError:'',\n                    })\n                    setTimeout(function() {\n                        window.location.reload(); \n                      }.bind(this), 1500);\n                }, (error) => {\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\n                }\n\n                )\n        }\n    }\n\n    validate(event){\n        let companyNameError = \"\";\n        let companyAddressError = \"\";\n        let ownerNameError = \"\";\n        let mainProductError = \"\";\n        let startDateError = \"\";\n\n        if(!event.target.companyName.value){\n            companyNameError = \"Company Name  Cannot Be Blank\"\n        }\n        if(!event.target.companyAddress.value){\n            companyAddressError = \"Company Address  Cannot Be Blank\"\n        }\n        if(!event.target.ownerName.value){\n            ownerNameError = \"Owner Name  Cannot Be Blank\"\n        }\n        if(!event.target.mainProduct.value){\n            mainProductError = \"Main Product  Cannot Be Blank\"\n        }\n        if(!event.target.startDate.value){\n            startDateError = \"start Date  Cannot Be Blank\"\n        }\n\n        if(companyNameError | companyAddressError | ownerNameError | mainProductError | startDateError){\n            this.setState({\n                companyNameError:companyNameError,\n                companyAddressError:companyAddressError,\n                ownerNameError:ownerNameError,\n                mainProductError:mainProductError,\n                startDateError:startDateError,\n            })\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.state.snackbaropen}\n                    autoHideDuration={6000}\n                    onClose={this.snackbarClose}\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\n                    ]}\n                />\n                <Modal\n                    {...this.props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                //centered\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Add Factory Details\n              </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col sm={6}>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId=\"companyName\">\n                                        <Form.Label>Company Name</Form.Label>\n                                        <Form.Control type=\"text\" name=\"companyName\" required placeholder=\"Company Name\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.companyNameError}</div>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"companyAddress\">\n                                        <Form.Label>Company Address</Form.Label>\n                                        <Form.Control type=\"text\" name=\"companyAddress\" required placeholder=\"Company Address\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.companyAddressError}</div>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"ownerName\">\n                                        <Form.Label>Owner Name</Form.Label>\n                                        <Form.Control type=\"text\" name=\"ownerName\" required placeholder=\"Owner Name\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.ownerNameError}</div>\n                                    </Form.Group>\n                                    {/* <Form.Group controlId=\"companyLogo\">\n                                        <Form.Label>Company Logo</Form.Label>\n                                        <Form.Control type=\"file\" name=\"companyLogo\" required placeholder=\"Category Name\" />\n                                    </Form.Group> */}\n                                    <Form.Group controlId=\"mainProduct\">\n                                        <Form.Label>Main Product</Form.Label>\n                                        <Form.Control type=\"text\" name=\"mainProduct\" required placeholder=\"Main Product\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.mainProduct}</div>\n                                    </Form.Group>\n                                    {/* <Form.Group controlId=\"br\">\n                                        <Form.Label>br</Form.Label>\n                                        <Form.Control type=\"file\" name=\"br\" required placeholder=\"Category Name\" />\n                                    </Form.Group> */}\n                                    <Form.Group controlId=\"startDate\">\n                                        <Form.Label>startDate</Form.Label>\n                                        <Form.Control type=\"date\" name=\"startDate\" required placeholder=\"Start Date\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.startDate}</div>\n                                    </Form.Group>\n                                    <br />\n                                    <Form.Group>\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\n                                            Add Factory Details\n                                        </Button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/EditCategoryModal.jsx",["224"],"import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport class EditCategoryModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { snackbaropen: false, snackbarmsg: '' };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(event, props) {\n        event.preventDefault();\n        fetch('http://localhost:5000/api/categories/', {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'username': 'chathura'\n            },\n            body: JSON.stringify({\n                id: event.target.id.value,\n                categoryName: event.target.name.value,\n                status: event.target.status.value,\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                swal({\n                    title: \"Category Updated Succesfully\",\n                    icon: \"success\",\n                    button: \"Done\",\n                  });\n            }, (error) => {\n                \n            }\n\n            )\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                    open={this.state.snackbaropen}\n                    autoHideDuration={6000}\n                    onClose={this.snackbarClose}\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\n                    ]}\n                />\n                <Modal\n                    {...this.props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Edit Category\n              </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col sm={6}>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId=\"id\">\n                                        <Form.Label>ID</Form.Label>\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"name\">\n                                        <Form.Label>Name</Form.Label>\n                                        <Form.Control type=\"text\" name=\"name\" required placeholder=\"Category Name\" defaultValue={this.props.name} />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Status</Form.Label>\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\n                                            <option selected disabled>{this.props.status}</option>\n                                            <option>ACTIVE</option>\n                                            <option>INACTIVE</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <br />\n                                    <Form.Group>\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\n                                            Edit Category\n                                        </Button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/EditProductCodeModal.jsx",["225"],"import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport swal from 'sweetalert';\nimport axios from \"axios\";\n\nexport class EditProductCodeModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { snackbaropen: false, snackbarmsg: '', categories:[] };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    snackbarClose = (event) => {\n        this.setState({ snackbaropen: false });\n    };\n\n    componentDidMount() {\n        axios\n          .get(\"http://localhost:5000/api/categories\")\n          .then((result) => {\n            const categories = result.data;\n    \n            this.setState({ categories: categories });\n          })\n          .catch((err) => console.log(err.message));\n      }\n\n    handleSubmit(event, props) {\n        event.preventDefault();\n        //alert(event.target.name.value);\n\n        fetch('http://localhost:5000/api/product-code/', { \n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'username': 'chathura'\n            },\n            body: JSON.stringify({\n                id: event.target.id.value,\n                productCode: event.target.productCode.value,\n                productCategory: event.target.productCategory.value,\n                status: event.target.status.value,\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                swal({\n                    title: \"Product Code Updated Succesfully\",\n                    icon: \"success\",\n                    button: \"Done\",\n                  });\n            }, (error) => {\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\n            }\n\n            )\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                    open={this.state.snackbaropen}\n                    autoHideDuration={6000}\n                    onClose={this.snackbarClose}\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\n                    ]}\n                />\n                <Modal\n                    {...this.props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Edit Product Code\n              </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col sm={6}>\n                            <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId=\"id\">\n                                        <Form.Label>ID</Form.Label>\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"name\">\n                                        <Form.Label>Product Code</Form.Label>\n                                        <Form.Control type=\"text\" name=\"productCode\" required placeholder=\"Product Code\" defaultValue={this.props.productCode} />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Product Category</Form.Label>\n                                        <Form.Control as=\"select\" required name=\"productCategory\" defaultValue={this.props.productCategory}>\n                                        {this.state.categories.map((i) => (\n                                            <option key={i._id}\n                                                    >{i.categoryName}</option>\n                                        ))}\n                                        </Form.Control>  \n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Status</Form.Label>\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\n                                            <option selected>ACTIVE</option>\n                                            <option>INACTIVE</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <br />\n                                    <Form.Group>\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\n                                            Edit Product Code\n                                        </Button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}","/home/prabath/Desktop/Hotel Management Sytem/src/components/SuperAdmin/Modals/EditMaterialCodeModal.jsx",["226"],"import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport class EditMaterialCodeModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { snackbaropen: false, snackbarmsg: '' };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    snackbarClose = (event) => {\n        this.setState({ snackbaropen: false });\n    };\n\n    handleSubmit(event, props) {\n        event.preventDefault();\n        //alert(event.target.name.value);\n\n        fetch('http://localhost:5000/api/meterial-code/', {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'username': 'chathura'\n            },\n            body: JSON.stringify({\n                id: event.target.id.value,\n                materialName: event.target.matName.value,\n                materialCode: event.target.matCode.value,\n                status: event.target.status.value,\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                swal({\n                    title: \"Metirial Code Updated Succesfully\",\n                    icon: \"success\",\n                    button: \"Done\",\n                  });\n            }, (error) => {\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\n            }\n\n            )\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                    open={this.state.snackbaropen}\n                    autoHideDuration={6000}\n                    onClose={this.snackbarClose}\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\n                    ]}\n                />\n                <Modal\n                    {...this.props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Edit Matirial COde\n              </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col sm={6}>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId=\"id\">\n                                        <Form.Label>ID</Form.Label>\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\n                                    </Form.Group>\n                                    \n                                    <Form.Group controlId=\"name\">\n                                        <Form.Label>Material Name</Form.Label>\n                                        <Form.Control type=\"text\" name=\"matName\" required placeholder=\"Material Name\" defaultValue={this.props.matirialName} />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"name\">\n                                        <Form.Label>Material Code</Form.Label>\n                                        <Form.Control type=\"text\" name=\"matCode\" required placeholder=\"Material Code\" defaultValue={this.props.materialCode} />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Status</Form.Label>\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\n                                            <option selected disabled>{this.props.status}</option>\n                                            <option>ACTIVE</option>\n                                            <option>INACTIVE</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <br />\n                                    <Form.Group>\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\n                                            Edit Matirial Code\n                                        </Button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}","/home/prabath/Desktop/Hotel Management Sytem/src/pages/HotelStaff/Reservation.jsx",["227"],"/home/prabath/Desktop/Hotel Management Sytem/src/pages/HotelStaff/Dashboard.jsx",["228","229","230","231"],"/home/prabath/Desktop/Hotel Management Sytem/src/components/HotelStaff/sideNav/Sidebar.jsx",["232","233","234","235","236"],"/home/prabath/Desktop/Hotel Management Sytem/src/components/HotelStaff/sideNav/SidebarData.js",[],"/home/prabath/Desktop/Hotel Management Sytem/src/components/HotelStaff/Tables/ReservationTable.jsx",["237","238","239"],"/home/prabath/Desktop/Hotel Management Sytem/src/components/HotelStaff/Modals/AddReservationsModal.jsx",["240","241","242","243"],"/home/prabath/Desktop/Hotel Management Sytem/src/components/HotelStaff/sideNav/SubMenu.jsx",[],"/home/prabath/Desktop/Hotel Management Sytem/src/components/HotelStaff/Modals/EditReservationsModal.jsx",["244","245"],{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":33,"column":26,"nodeType":"252","messageId":"253","endLine":33,"endColumn":28},{"ruleId":"250","severity":1,"message":"251","line":35,"column":25,"nodeType":"252","messageId":"253","endLine":35,"endColumn":27},{"ruleId":"254","severity":1,"message":"255","line":91,"column":36,"nodeType":"256","endLine":91,"endColumn":48},{"ruleId":"257","severity":1,"message":"258","line":2,"column":27,"nodeType":"259","messageId":"260","endLine":2,"endColumn":33},{"ruleId":"257","severity":1,"message":"261","line":2,"column":35,"nodeType":"259","messageId":"260","endLine":2,"endColumn":41},{"ruleId":"250","severity":1,"message":"262","line":43,"column":21,"nodeType":"252","messageId":"253","endLine":43,"endColumn":23},{"ruleId":"250","severity":1,"message":"251","line":46,"column":26,"nodeType":"252","messageId":"253","endLine":46,"endColumn":28},{"ruleId":"250","severity":1,"message":"251","line":51,"column":26,"nodeType":"252","messageId":"253","endLine":51,"endColumn":28},{"ruleId":"250","severity":1,"message":"262","line":64,"column":21,"nodeType":"252","messageId":"253","endLine":64,"endColumn":23},{"ruleId":"250","severity":1,"message":"251","line":71,"column":25,"nodeType":"252","messageId":"253","endLine":71,"endColumn":27},{"ruleId":"250","severity":1,"message":"251","line":84,"column":26,"nodeType":"252","messageId":"253","endLine":84,"endColumn":28},{"ruleId":"257","severity":1,"message":"263","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":14},{"ruleId":"257","severity":1,"message":"264","line":4,"column":16,"nodeType":"259","messageId":"260","endLine":4,"endColumn":19},{"ruleId":"257","severity":1,"message":"265","line":4,"column":21,"nodeType":"259","messageId":"260","endLine":4,"endColumn":24},{"ruleId":"257","severity":1,"message":"266","line":4,"column":26,"nodeType":"259","messageId":"260","endLine":4,"endColumn":35},{"ruleId":"257","severity":1,"message":"267","line":4,"column":37,"nodeType":"259","messageId":"260","endLine":4,"endColumn":42},{"ruleId":"257","severity":1,"message":"268","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":15},{"ruleId":"257","severity":1,"message":"269","line":3,"column":17,"nodeType":"259","messageId":"260","endLine":3,"endColumn":23},{"ruleId":"257","severity":1,"message":"270","line":4,"column":8,"nodeType":"259","messageId":"260","endLine":4,"endColumn":13},{"ruleId":"250","severity":1,"message":"251","line":87,"column":91,"nodeType":"252","messageId":"253","endLine":87,"endColumn":93},{"ruleId":"257","severity":1,"message":"271","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":15},{"ruleId":"257","severity":1,"message":"264","line":3,"column":25,"nodeType":"259","messageId":"260","endLine":3,"endColumn":28},{"ruleId":"257","severity":1,"message":"265","line":3,"column":30,"nodeType":"259","messageId":"260","endLine":3,"endColumn":33},{"ruleId":"257","severity":1,"message":"272","line":3,"column":41,"nodeType":"259","messageId":"260","endLine":3,"endColumn":50},{"ruleId":"257","severity":1,"message":"268","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":15},{"ruleId":"257","severity":1,"message":"268","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":15},{"ruleId":"257","severity":1,"message":"268","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":15},{"ruleId":"257","severity":1,"message":"268","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":15},{"ruleId":"257","severity":1,"message":"269","line":2,"column":17,"nodeType":"259","messageId":"260","endLine":2,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":42,"column":13,"nodeType":"275","messageId":"253","endLine":42,"endColumn":17,"fix":"276"},{"ruleId":"257","severity":1,"message":"277","line":51,"column":30,"nodeType":"259","messageId":"260","endLine":51,"endColumn":37},{"ruleId":"257","severity":1,"message":"268","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":15},{"ruleId":"257","severity":1,"message":"269","line":2,"column":17,"nodeType":"259","messageId":"260","endLine":2,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":43,"column":13,"nodeType":"275","messageId":"253","endLine":43,"endColumn":17,"fix":"278"},{"ruleId":"257","severity":1,"message":"279","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"268","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":15},{"ruleId":"257","severity":1,"message":"269","line":2,"column":17,"nodeType":"259","messageId":"260","endLine":2,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":42,"column":13,"nodeType":"275","messageId":"253","endLine":42,"endColumn":17,"fix":"280"},{"ruleId":"257","severity":1,"message":"272","line":2,"column":41,"nodeType":"259","messageId":"260","endLine":2,"endColumn":50},{"ruleId":"257","severity":1,"message":"281","line":6,"column":10,"nodeType":"259","messageId":"260","endLine":6,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":57,"column":23,"nodeType":"275","messageId":"253","endLine":57,"endColumn":27,"fix":"282"},{"ruleId":"257","severity":1,"message":"272","line":4,"column":41,"nodeType":"259","messageId":"260","endLine":4,"endColumn":50},{"ruleId":"257","severity":1,"message":"281","line":7,"column":10,"nodeType":"259","messageId":"260","endLine":7,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":69,"column":25,"nodeType":"275","messageId":"253","endLine":69,"endColumn":29,"fix":"283"},{"ruleId":"257","severity":1,"message":"272","line":2,"column":41,"nodeType":"259","messageId":"260","endLine":2,"endColumn":50},{"ruleId":"257","severity":1,"message":"281","line":6,"column":10,"nodeType":"259","messageId":"260","endLine":6,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":51,"column":25,"nodeType":"275","messageId":"253","endLine":51,"endColumn":29,"fix":"284"},{"ruleId":"257","severity":1,"message":"272","line":2,"column":41,"nodeType":"259","messageId":"260","endLine":2,"endColumn":50},{"ruleId":"257","severity":1,"message":"281","line":6,"column":10,"nodeType":"259","messageId":"260","endLine":6,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":68,"column":25,"nodeType":"275","messageId":"253","endLine":68,"endColumn":29,"fix":"285"},{"ruleId":"257","severity":1,"message":"272","line":2,"column":41,"nodeType":"259","messageId":"260","endLine":2,"endColumn":50},{"ruleId":"257","severity":1,"message":"272","line":2,"column":41,"nodeType":"259","messageId":"260","endLine":2,"endColumn":50},{"ruleId":"257","severity":1,"message":"272","line":2,"column":41,"nodeType":"259","messageId":"260","endLine":2,"endColumn":50},{"ruleId":"257","severity":1,"message":"268","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":15},{"ruleId":"257","severity":1,"message":"268","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":15},{"ruleId":"257","severity":1,"message":"269","line":3,"column":17,"nodeType":"259","messageId":"260","endLine":3,"endColumn":23},{"ruleId":"257","severity":1,"message":"270","line":4,"column":8,"nodeType":"259","messageId":"260","endLine":4,"endColumn":13},{"ruleId":"250","severity":1,"message":"251","line":87,"column":91,"nodeType":"252","messageId":"253","endLine":87,"endColumn":93},{"ruleId":"257","severity":1,"message":"263","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":14},{"ruleId":"257","severity":1,"message":"264","line":4,"column":16,"nodeType":"259","messageId":"260","endLine":4,"endColumn":19},{"ruleId":"257","severity":1,"message":"265","line":4,"column":21,"nodeType":"259","messageId":"260","endLine":4,"endColumn":24},{"ruleId":"257","severity":1,"message":"266","line":4,"column":26,"nodeType":"259","messageId":"260","endLine":4,"endColumn":35},{"ruleId":"257","severity":1,"message":"267","line":4,"column":37,"nodeType":"259","messageId":"260","endLine":4,"endColumn":42},{"ruleId":"257","severity":1,"message":"268","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":15},{"ruleId":"257","severity":1,"message":"269","line":2,"column":17,"nodeType":"259","messageId":"260","endLine":2,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":39,"column":13,"nodeType":"275","messageId":"253","endLine":39,"endColumn":17,"fix":"286"},{"ruleId":"257","severity":1,"message":"287","line":2,"column":8,"nodeType":"259","messageId":"260","endLine":2,"endColumn":13},{"ruleId":"257","severity":1,"message":"272","line":4,"column":41,"nodeType":"259","messageId":"260","endLine":4,"endColumn":50},{"ruleId":"257","severity":1,"message":"281","line":7,"column":10,"nodeType":"259","messageId":"260","endLine":7,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":69,"column":25,"nodeType":"275","messageId":"253","endLine":69,"endColumn":29,"fix":"288"},{"ruleId":"257","severity":1,"message":"272","line":2,"column":41,"nodeType":"259","messageId":"260","endLine":2,"endColumn":50},{"ruleId":"257","severity":1,"message":"287","line":6,"column":8,"nodeType":"259","messageId":"260","endLine":6,"endColumn":13},"no-native-reassign",["289"],"no-negated-in-lhs",["290"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","Expected '!==' and instead saw '!='.","'Card' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Image' is defined but never used.","'Table' is defined but never used.","'Button' is defined but never used.","'Chart' is defined but never used.","'Modal' is defined but never used.","'FormGroup' is defined but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"291","text":"292"},"'version' is assigned a value but never used.",{"range":"293","text":"292"},"'Component' is defined but never used.",{"range":"294","text":"292"},"'Redirect' is defined but never used.",{"range":"295","text":"292"},{"range":"296","text":"292"},{"range":"297","text":"292"},{"range":"298","text":"292"},{"range":"299","text":"292"},"'axios' is defined but never used.",{"range":"300","text":"292"},"no-global-assign","no-unsafe-negation",[1246,1257],"",[1264,1275],[1268,1279],[1951,1962],[2316,2327],[1745,1756],[2529,2540],[1187,1198],[2334,2345]]