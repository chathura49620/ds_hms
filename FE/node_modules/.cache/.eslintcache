[{"D:\\DS Project\\ds_hms\\FE\\src\\index.js":"1","D:\\DS Project\\ds_hms\\FE\\src\\reportWebVitals.js":"2","D:\\DS Project\\ds_hms\\FE\\src\\App.js":"3","D:\\DS Project\\ds_hms\\FE\\src\\pages\\Dashboard.jsx":"4","D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\Dashboard.jsx":"5","D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\BasicInfo.jsx":"6","D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\Categories.jsx":"7","D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\UserRoles.jsx":"8","D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\UserList.jsx":"9","D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\ProductCodes.jsx":"10","D:\\DS Project\\ds_hms\\FE\\src\\pages\\HotelStaff\\Dashboard.jsx":"11","D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\MaterialCodes.jsx":"12","D:\\DS Project\\ds_hms\\FE\\src\\pages\\HotelStaff\\Reservation.jsx":"13","D:\\DS Project\\ds_hms\\FE\\src\\pages\\Traveller\\Dashboard.jsx":"14","D:\\DS Project\\ds_hms\\FE\\src\\components\\forms\\loginUser.jsx":"15","D:\\DS Project\\ds_hms\\FE\\src\\components\\forms\\registerTraveller.jsx":"16","D:\\DS Project\\ds_hms\\FE\\src\\components\\Traveller\\sideNav\\Sidebar.jsx":"17","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\sideNav\\Sidebar.jsx":"18","D:\\DS Project\\ds_hms\\FE\\src\\components\\HotelStaff\\sideNav\\Sidebar.jsx":"19","D:\\DS Project\\ds_hms\\FE\\src\\components\\Traveller\\sideNav\\SidebarData.js":"20","D:\\DS Project\\ds_hms\\FE\\src\\pages\\charts\\chart.js":"21","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\sideNav\\SidebarData.js":"22","D:\\DS Project\\ds_hms\\FE\\src\\components\\HotelStaff\\sideNav\\SidebarData.js":"23","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddCategoryModal.jsx":"24","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddProductCodeModal.jsx":"25","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddFactoryDetailsModal.jsx":"26","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddMaterialCodeModal.jsx":"27","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\UserListTable.jsx":"28","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\RejectUsersTable.jsx":"29","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\UserRolesTable.jsx":"30","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\ProductCodesTable.jsx":"31","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\CategoriesTable.jsx":"32","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\ApprovedUsersTable.jsx":"33","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\MaterialCodeTable.jsx":"34","D:\\DS Project\\ds_hms\\FE\\src\\components\\Traveller\\sideNav\\SubMenu.jsx":"35","D:\\DS Project\\ds_hms\\FE\\src\\components\\HotelStaff\\Modals\\AddReservationsModal.jsx":"36","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\sideNav\\SubMenu.jsx":"37","D:\\DS Project\\ds_hms\\FE\\src\\components\\HotelStaff\\Tables\\ReservationTable.jsx":"38","D:\\DS Project\\ds_hms\\FE\\src\\components\\HotelStaff\\sideNav\\SubMenu.jsx":"39","D:\\DS Project\\ds_hms\\FE\\src\\components\\reusables\\formsuper.jsx":"40","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\EditCategoryModal.jsx":"41","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\EditProductCodeModal.jsx":"42","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\EditMaterialCodeModal.jsx":"43","D:\\DS Project\\ds_hms\\FE\\src\\components\\HotelStaff\\Modals\\EditReservationsModal.jsx":"44","D:\\DS Project\\ds_hms\\FE\\src\\components\\reusables\\input.jsx":"45","D:\\DS Project\\ds_hms\\FE\\src\\components\\reusables\\select.jsx":"46","D:\\DS Project\\ds_hms\\FE\\src\\components\\reusables\\textarea.jsx":"47","D:\\DS Project\\ds_hms\\FE\\src\\components\\reusables\\radio.jsx":"48"},{"size":403,"mtime":1652690449196,"results":"49","hashOfConfig":"50"},{"size":375,"mtime":1652690449205,"results":"51","hashOfConfig":"50"},{"size":150,"mtime":1652690449176,"results":"52","hashOfConfig":"50"},{"size":4121,"mtime":1652690449197,"results":"53","hashOfConfig":"50"},{"size":6539,"mtime":1652690449200,"results":"54","hashOfConfig":"50"},{"size":5327,"mtime":1652690449199,"results":"55","hashOfConfig":"50"},{"size":1502,"mtime":1652690449200,"results":"56","hashOfConfig":"50"},{"size":3289,"mtime":1652690449202,"results":"57","hashOfConfig":"50"},{"size":1547,"mtime":1652690449202,"results":"58","hashOfConfig":"50"},{"size":1668,"mtime":1652690449200,"results":"59","hashOfConfig":"50"},{"size":6539,"mtime":1652690449197,"results":"60","hashOfConfig":"50"},{"size":1681,"mtime":1652690449200,"results":"61","hashOfConfig":"50"},{"size":1660,"mtime":1652690449197,"results":"62","hashOfConfig":"50"},{"size":870,"mtime":1652690449203,"results":"63","hashOfConfig":"50"},{"size":2147,"mtime":1652690449189,"results":"64","hashOfConfig":"50"},{"size":2244,"mtime":1652690449189,"results":"65","hashOfConfig":"50"},{"size":2232,"mtime":1652690449188,"results":"66","hashOfConfig":"50"},{"size":1893,"mtime":1652690449186,"results":"67","hashOfConfig":"50"},{"size":1893,"mtime":1652690449178,"results":"68","hashOfConfig":"50"},{"size":1512,"mtime":1652690449188,"results":"69","hashOfConfig":"50"},{"size":852,"mtime":1652690449205,"results":"70","hashOfConfig":"50"},{"size":1708,"mtime":1652690449187,"results":"71","hashOfConfig":"50"},{"size":1708,"mtime":1652690449179,"results":"72","hashOfConfig":"50"},{"size":5218,"mtime":1652690449180,"results":"73","hashOfConfig":"50"},{"size":6860,"mtime":1652690449182,"results":"74","hashOfConfig":"50"},{"size":8917,"mtime":1652690449182,"results":"75","hashOfConfig":"50"},{"size":6182,"mtime":1652690449182,"results":"76","hashOfConfig":"50"},{"size":1327,"mtime":1652690449186,"results":"77","hashOfConfig":"50"},{"size":1022,"mtime":1652690449184,"results":"78","hashOfConfig":"50"},{"size":746,"mtime":1652690449186,"results":"79","hashOfConfig":"50"},{"size":3122,"mtime":1652690449184,"results":"80","hashOfConfig":"50"},{"size":2929,"mtime":1652690449184,"results":"81","hashOfConfig":"50"},{"size":955,"mtime":1652690449183,"results":"82","hashOfConfig":"50"},{"size":3109,"mtime":1652690449184,"results":"83","hashOfConfig":"50"},{"size":1716,"mtime":1652690449188,"results":"84","hashOfConfig":"50"},{"size":6522,"mtime":1652690449177,"results":"85","hashOfConfig":"50"},{"size":1667,"mtime":1652690449187,"results":"86","hashOfConfig":"50"},{"size":3053,"mtime":1652690449178,"results":"87","hashOfConfig":"50"},{"size":1667,"mtime":1652690449179,"results":"88","hashOfConfig":"50"},{"size":2547,"mtime":1652690449192,"results":"89","hashOfConfig":"50"},{"size":4602,"mtime":1652690449182,"results":"90","hashOfConfig":"50"},{"size":5826,"mtime":1652690449183,"results":"91","hashOfConfig":"50"},{"size":5297,"mtime":1652690449183,"results":"92","hashOfConfig":"50"},{"size":5067,"mtime":1652690449177,"results":"93","hashOfConfig":"50"},{"size":669,"mtime":1652690449192,"results":"94","hashOfConfig":"50"},{"size":790,"mtime":1652690449194,"results":"95","hashOfConfig":"50"},{"size":693,"mtime":1652690449194,"results":"96","hashOfConfig":"50"},{"size":958,"mtime":1652690449193,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19a44ls",{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},"D:\\DS Project\\ds_hms\\FE\\src\\index.js",[],"D:\\DS Project\\ds_hms\\FE\\src\\reportWebVitals.js",[],"D:\\DS Project\\ds_hms\\FE\\src\\App.js",[],"D:\\DS Project\\ds_hms\\FE\\src\\pages\\Dashboard.jsx",["226","227","228","229","230","231","232","233","234","235"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport SuperAdminSideNav from '../components/SuperAdmin/sideNav/Sidebar';\r\nimport HotelStaffSideNav from '../components/HotelStaff/sideNav/Sidebar';\r\nimport TravellerSideNav from '../components/Traveller/sideNav/Sidebar';\r\n\r\n\r\nimport SuperAdminDashboard from './SuperAdmin/Dashboard'\r\nimport HotelStaffDashboard from './HotelStaff/Dashboard'\r\nimport TravellerDashboard from './Traveller/Dashboard'\r\n\r\n\r\n//super admin routers\r\nimport BasicInfo from './SuperAdmin/BasicInfo';\r\nimport UserRoles from './SuperAdmin/UserRoles';\r\nimport UserList from './SuperAdmin/UserList';\r\nimport Categories from './SuperAdmin/Categories';\r\nimport ProductCodes from './SuperAdmin/ProductCodes';\r\nimport MaterialCodes from './SuperAdmin/MaterialCodes';\r\nimport  login  from '../components/forms/loginUser';\r\nimport  RegisterTraveller  from '../components/forms/registerTraveller';\r\n\r\n//super admin routers\r\nimport Reservation from './HotelStaff/Reservation';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);   \r\n        this.state = {\r\n            superAdmin: false\r\n        }\r\n        this.renderSideNavigation = this.renderSideNavigation.bind(this);\r\n        this.renderDashboard = this.renderDashboard.bind(this);\r\n    }\r\n\r\n    renderSideNavigation(){\r\n        const user_role = localStorage.getItem('user_role');\r\n        const is_login = localStorage.getItem('is_login');\r\n        if(is_login != '1'){\r\n                return false;\r\n        }else{\r\n            if(user_role == 'Super Admin'){\r\n                return (\r\n                    <SuperAdminSideNav/> \r\n                );\r\n            }\r\n            if(user_role == 'Hotel Staff'){\r\n                return (\r\n                    <HotelStaffSideNav/> \r\n                );\r\n            }\r\n            if(user_role == 'Traveller'){\r\n                return (\r\n                    <TravellerSideNav/> \r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderDashboard(){\r\n        const user_role = localStorage.getItem('user_role')\r\n        const is_login = localStorage.getItem('is_login')\r\n        if(is_login != '1'){\r\n            return (\r\n                <div>\r\n                    <Route path= '/' exact component={login} />\r\n                    <Route path= '/registerTraveller' exact component={RegisterTraveller} />\r\n                </div>\r\n            );\r\n        }else{\r\n           if(user_role == 'Super Admin'){\r\n                return (\r\n                    <div>\r\n                        <Route path='/' exact component={SuperAdminDashboard} />\r\n                        <Route path='/basic-info' exact component={BasicInfo} />\r\n                        <Route path='/user-roles' exact component={UserRoles} />\r\n                        <Route path='/user-list' exact component={UserList} />\r\n                        <Route path='/categories' exact component={Categories} />\r\n                        <Route path='/product-codes' exact component={ProductCodes} />\r\n                        <Route path='/metirial-codes' exact component={MaterialCodes} />\r\n                    </div>\r\n                );\r\n            }\r\n            if(user_role == 'Traveller'){\r\n                return (\r\n                    <div>\r\n                        <Route path='/' exact component={TravellerDashboard} />\r\n                    </div>\r\n                );\r\n            }\r\n            if(user_role == 'Hotel Staff'){\r\n                return (\r\n                    <div>\r\n                        <Route path='/' exact component={HotelStaffDashboard} />\r\n                        <Route path='/resavations' exact component={Reservation} />\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n       return(\r\n           <div>\r\n                 {this.renderSideNavigation()}\r\n                 {this.renderDashboard()}\r\n           </div> \r\n       );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\Dashboard.jsx",["236","237","238","239"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport Chart from \"../charts/chart\";\r\nimport \"./dashboard.css\";\r\nimport hello from \"../assets/hello.png\";\r\n// import clock from \"../assets/clock.png\";\r\nimport { AddFactoryDetailsModal } from '../../components/SuperAdmin/Modals/AddFactoryDetailsModal';\r\n// import Clock from \"../../components/ProductionManager/common/clock\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    factoryDetails: [],\r\n    category:[],\r\n    matCode:[],\r\n    proCode:[],\r\n    users:[],\r\n    user_name:'',\r\n    addModalShow: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n    .get(\"http://localhost:5000/api/factory-details\")\r\n    .then((result) => {\r\n      const factoryDetails = result.data;\r\n\r\n      this.setState({ factoryDetails: factoryDetails });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    const user_name = localStorage.getItem(\"user_full_name\");\r\n    this.setState({ user_name: user_name });\r\n\r\n    axios\r\n    .get(\"http://localhost:5000/api/categories\")\r\n    .then((result) => {\r\n      const category = result.data;\r\n\r\n      this.setState({ category: category });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    axios\r\n    .get(\"http://localhost:5000/api/meterial-code\")\r\n    .then((result) => {\r\n      const matCode = result.data;\r\n\r\n      this.setState({ matCode: matCode });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    axios\r\n    .get(\"http://localhost:5000/api/product-code\")\r\n    .then((result) => {\r\n      const proCode = result.data;\r\n\r\n      this.setState({ proCode: proCode });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    axios\r\n    .get(\"http://localhost:5000/users\")\r\n    .then((result) => {\r\n      const users = result.data;\r\n\r\n      this.setState({ users: users });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n  }\r\n\r\n\r\n  logout(){\r\n    localStorage.removeItem('user_full_name');\r\n    localStorage.removeItem('user_email');\r\n    localStorage.removeItem('is_login');\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n    return (\r\n      <React.Fragment>\r\n           <ButtonToolbar>\r\n                    <AddFactoryDetailsModal\r\n                        show={this.state.addModalShow && this.state.factoryDetails.length == 0}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n          <main>\r\n            <div className=\"main__container\">\r\n              {/* <!-- MAIN TITLE STARTS HERE --> */}\r\n\r\n              <div className=\"main__title\">\r\n              <img src={hello} alt=\"hello\" />\r\n                <div className=\"main__greeting\">\r\n                  <h1>Hello, {this.state.user_name}</h1>\r\n                  <p>Welcome to your profile.</p>\r\n                </div>\r\n                <button style={{ backgroundColor: \"#7121AD\", color: \"white\" ,width:\"100px\"}} onClick={this.logout}>Log Out</button>\r\n              </div>\r\n\r\n              <div className=\"charts\">\r\n                <div className=\"charts__left\">\r\n                  <div className=\"charts__left__title\">\r\n                    <div>\r\n                      <h1>Date and Time</h1>\r\n                    </div>\r\n                    <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n                  <div className=\"row mt-5\">\r\n                    <div className=\"col-md-6\">\r\n                      {/* <img src={clock} alt=\"clock\" /> */}\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      {/* <Clock /> */}\r\n                    </div>\r\n                  </div>\r\n                 \r\n                </div>\r\n\r\n                <div className=\"charts__right\">\r\n                  <div className=\"charts__right__title\">\r\n                    <div>\r\n                      <h1>Report Genaration</h1>\r\n                    </div>\r\n                    <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n\r\n                  <div className=\"charts__right__cards\">\r\n                 \r\n                 \r\n                      <div className=\"card1\">\r\n                      <h1>Profit Report</h1>\r\n                    </div>\r\n                    \r\n                   \r\n                      <div className=\"card2\">\r\n                      <h1>User Report</h1>\r\n                    </div>\r\n                     \r\n                     \r\n                        <div className=\"card3\">\r\n                        <h1>Cost Report</h1>\r\n                        </div>\r\n                       \r\n                  \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* <!-- MAIN TITLE ENDS HERE --> */}\r\n\r\n              {/* <!-- MAIN CARDS STARTS HERE --> */}\r\n              <div className=\"main__cards\">\r\n\r\n                \r\n                <div className=\"carda\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">Number of Users</p>\r\n                    <span className=\"font-bold text-title\">{this.state.users.length}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"cardd\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">No of Categories</p>\r\n                    <span className=\"font-bold text-title\">{this.state.category.length}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"carda\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">Number of Product Codes</p>\r\n                    <span className=\"font-bold text-title\">{this.state.proCode.length}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"cardd\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">No of Metirial Codes</p>\r\n                    <span className=\"font-bold text-title\">{this.state.matCode.length}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <!-- MAIN CARDS ENDS HERE --> */}\r\n\r\n              {/* <!-- CHARTS STARTS HERE --> */}\r\n              \r\n              {/* <!-- CHARTS ENDS HERE --> */}\r\n            </div>\r\n          </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\BasicInfo.jsx",["240","241","242","243"],"import React, { Component } from \"react\";\r\n\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport axios from \"axios\";\r\n\r\nclass BasicInfo extends Component  {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: '',  factoryDetails: [], };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n}\r\n\r\n  componentDidMount() {\r\n    axios\r\n    .get(\"http://localhost:5000/api/factory-details\")\r\n    .then((result) => {\r\n      const factoryDetails = result.data;\r\n      console.log(factoryDetails)\r\n\r\n      this.setState({ factoryDetails: factoryDetails });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event, props) {\r\n    event.preventDefault();\r\n    //alert(event.target.name.value);\r\n\r\n    fetch('http://localhost:5000/api/factory-details', {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'username': 'chathura'\r\n        },\r\n        body: JSON.stringify({\r\n            id: event.target.id.value,\r\n            companyName: event.target.companyName.value,\r\n            companyAddress: event.target.companyAddress.value,\r\n            ownerName: event.target.ownerName.value,\r\n            mainProduct: event.target.mainProduct.value,\r\n            startDate: event.target.startDate.value,\r\n            is_added:1\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then((result) => {\r\n            swal({\r\n                title: \"Factory Details Updated Succesfully\",\r\n                icon: \"success\",\r\n                button: \"Done\",\r\n              });\r\n        }, (error) => {\r\n            this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n        }\r\n\r\n        )\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h1>Basic Info</h1>\r\n            {this.state.factoryDetails.map((i) => (\r\n            <Form onSubmit={this.handleSubmit}  key={i._id}>\r\n                                      <Form.Group controlId=\"id\">\r\n                                        {/* <Form.Label>ID</Form.Label> */}\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={i._id} hidden/>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"companyName\">\r\n                                        <Form.Label>Company Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"companyName\" required placeholder=\"Company Name\" defaultValue={i.companyName} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"companyAddress\">\r\n                                        <Form.Label>Company Address</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"companyAddress\" required placeholder=\"Company Address\" defaultValue={i.companyAddress} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"ownerName\">\r\n                                        <Form.Label>Owner Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"ownerName\" required placeholder=\"Owner Name\" defaultValue={i.ownerName} />\r\n                                    </Form.Group>\r\n                                    {/* <Form.Group controlId=\"companyLogo\">\r\n                                        <Form.Label>Company Logo</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"companyLogo\" required placeholder=\"Category Name\" />\r\n                                    </Form.Group> */}\r\n                                    <Form.Group controlId=\"mainProduct\">\r\n                                        <Form.Label>Main Product</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"mainProduct\" required placeholder=\"Main Product\" defaultValue={i.mainProduct} />\r\n                                    </Form.Group>\r\n                                    {/* <Form.Group controlId=\"br\">\r\n                                        <Form.Label>br</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"br\" required placeholder=\"Category Name\" />\r\n                                    </Form.Group> */}\r\n                                    <Form.Group controlId=\"startDate\">\r\n                                        <Form.Label>startDate</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"startDate\" required placeholder=\"Start Date\" defaultValue={i.startDate} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button  variant=\"primary\" type=\"submit\" >\r\n                                            Update Factory Details\r\n                                        </Button>\r\n                                    </Form.Group>\r\n              </Form>\r\n            ))}\r\n          </div>\r\n\r\n          \r\n\r\n            \r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BasicInfo;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\Categories.jsx",["244"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddCategoryModal } from '../../components/SuperAdmin/Modals/AddCategoryModal';\r\nimport {CategoriesTable} from \"../../components/SuperAdmin/Tables/CategoriesTable\";\r\n\r\n\r\nclass Categories extends Component {\r\n  state = {\r\n    categories: [],\r\n    addModalShow: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n\r\n  render() {\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"mb-5\">Categories</h1>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Category\r\n                    </Button>\r\n                    <AddCategoryModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n            <CategoriesTable filteredItems={this.state.categories} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Categories;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\UserRoles.jsx",[],"D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\UserList.jsx",[],"D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\ProductCodes.jsx",["245"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddProductCodeModal } from '../../components/SuperAdmin/Modals/AddProductCodeModal';\r\nimport {ProductCodesTable} from \"../../components/SuperAdmin/Tables/ProductCodesTable\";\r\n\r\n\r\nclass ProductCodes extends Component {\r\n  state = {\r\n    ProductCodes: [],\r\n    addModalShow: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/product-code\")\r\n      .then((result) => {\r\n        const ProductCodes = result.data;\r\n\r\n        this.setState({ ProductCodes: ProductCodes });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  render(){\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n        <h1 className=\"mb-5\">Product Codes</h1>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Product Code\r\n                    </Button>\r\n                    <AddProductCodeModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n        </ButtonToolbar>\r\n        <div className=\"row\">\r\n          <div className=\"col-1\"></div>\r\n          <div className=\"col\">\r\n            <ProductCodesTable filteredItems={this.state.ProductCodes} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n  }\r\n};\r\n\r\nexport default ProductCodes;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\pages\\HotelStaff\\Dashboard.jsx",["246","247","248","249"],"D:\\DS Project\\ds_hms\\FE\\src\\pages\\SuperAdmin\\MaterialCodes.jsx",["250"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddMaterialCodeModal } from '../../components/SuperAdmin/Modals/AddMaterialCodeModal';\r\nimport {MaterialCodeTable} from \"../../components/SuperAdmin/Tables/MaterialCodeTable\";\r\n\r\nclass MaterialCodes extends Component {\r\n  state = {\r\n    MaterialCodes: [],\r\n    addModalShow: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/meterial-code\")\r\n      .then((result) => {\r\n        const MaterialCodes = result.data;\r\n\r\n        this.setState({ MaterialCodes: MaterialCodes });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  render(){\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n        <h1 className=\"mb-5\">Material Codes</h1>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Material Code\r\n                    </Button>\r\n                    <AddMaterialCodeModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n        <div className=\"row\">\r\n          <div className=\"col-1\"></div>\r\n          <div className=\"col\">\r\n            <MaterialCodeTable filteredItems={this.state.MaterialCodes} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n  }\r\n};\r\n\r\nexport default MaterialCodes;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\pages\\HotelStaff\\Reservation.jsx",["251"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddReservationsModal } from '../../components/HotelStaff/Modals/AddReservationsModal';\r\nimport {ReservationTable} from \"../../components/HotelStaff/Tables/ReservationTable\";\r\n\r\n\r\nclass Reservations extends Component {\r\n  state = {\r\n    reservations: [],\r\n    addModalShow: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8082/reservations\")\r\n      .then((result) => {\r\n        const reservations = result.data;\r\n\r\n        this.setState({ reservations: reservations });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  render(){\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n        <h1 className=\"mb-5\">Reservation</h1>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Reservation\r\n                    </Button>\r\n                    <AddReservationsModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n        </ButtonToolbar>\r\n        <div className=\"row\">\r\n          <div className=\"col-1\"></div>\r\n          <div className=\"col\">\r\n            <ReservationTable reservations={this.state.reservations} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n  }\r\n};\r\n\r\nexport default Reservations;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\pages\\Traveller\\Dashboard.jsx",["252","253","254","255","256","257","258"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport Chart from \"../charts/chart\";\r\n// import \"./dashboard.css\";\r\nimport hello from \"../assets/hello.png\";\r\n// import clock from \"../assets/clock.png\";\r\nimport { AddFactoryDetailsModal } from '../../components/SuperAdmin/Modals/AddFactoryDetailsModal';\r\n// import Clock from \"../../components/ProductionManager/common/clock\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n   \r\n  };\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n\r\n  logout(){\r\n    localStorage.removeItem('user_full_name');\r\n    localStorage.removeItem('user_email');\r\n    localStorage.removeItem('is_login');\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <h1>test traveller dashboard</h1>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\forms\\loginUser.jsx",["259","260","261"],"import React, { useState } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nimport FormSuper from './../reusables/formsuper';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass LoginUser extends FormSuper {\r\n  state = { \r\n\r\n\r\n    data: {\r\n      email: \"\",\r\n      password: \"\",\r\n    \r\n    },\r\n    errors: {},\r\n\r\n   } \r\n\r\n   schema = {\r\n    email: Joi.string().required(),\r\n    password: Joi.string().required(),\r\n    \r\n\r\n  };\r\n\r\n  componentDidMount(){\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  async doSubmit(){\r\n\r\n    const jsonOb = this.state.data;\r\n    console.log(\"submitted\")\r\n    console.log(jsonOb)\r\n     \r\n    try{\r\n      const response = await fetch(\"http://localhost:8082/userByEmail/\"+ jsonOb.email, {\r\n        method: \"GET\",\r\n      });\r\n  \r\n  \r\n      const data = await response.json();\r\n  \r\n      console.log(data);\r\n  \r\n      if(data){\r\n  \r\n        if(data.email === jsonOb.email && data.password === jsonOb.password){\r\n          localStorage.setItem(\"logged\", \"kk\");\r\n          localStorage.setItem(\"user_role\", data.type)\r\n          localStorage.setItem(\"is_login\", \"1\")\r\n          window.location.href = \"/\";\r\n          \r\n        }\r\n  \r\n\r\n\r\n    }\r\n    \r\n    }catch(ex){\r\n\r\n      alert(\"invalid credentials!\");\r\n    }\r\n    \r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <React.Fragment>\r\n    \r\n    <div className=\"row\" style={{marginTop:\"100px\"}}>\r\n      <div className=\"col-4\"></div>\r\n      <div className=\"col\" style={{backgroundColor:\"#F2F3F4\"}}>\r\n      <h1 className=\"mb-4\">Sign in</h1>\r\n      <form onSubmit={this.handleSubmit}>\r\n            <div className=\"my-2\">\r\n            {this.renderInput(\"email\", \"Email\")}\r\n            </div>\r\n            <div className=\"mb-5\">\r\n            {this.renderInput(\"password\", \"password\")}\r\n            </div>\r\n            \r\n           \r\n            {this.renderButton(\"Sign in\")}\r\n            <Link to=\"/registerTraveller\">Sign in as a Traveller</Link>\r\n           \r\n      </form>\r\n        \r\n\r\n      </div>\r\n      <div className=\"col-4\"></div>\r\n    </div>\r\n          \r\n        \r\n    </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n \r\nexport default LoginUser;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\forms\\registerTraveller.jsx",["262","263","264"],"import React, { useState } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nimport FormSuper from '../reusables/formsuper';\r\n\r\n\r\n\r\nclass RegisterTraveller extends FormSuper {\r\n  state = { \r\n\r\n\r\n    data: {\r\n      fullName: \"\",\r\n      country: \"\",\r\n      email: \"\",\r\n      contact: \"\",\r\n      type: \"Traveller\",\r\n      password: \"\",\r\n    },\r\n    errors: {},\r\n    memberTypes: [{id: 1, type: 'Panel Member'}, {id: 2, type: 'Supervisor'}]\r\n\r\n   } \r\n\r\n   schema = {\r\n    fullName: Joi.string().required(),\r\n    country: Joi.string().required(),\r\n    email: Joi.string().required(),\r\n    contact: Joi.string().required(),\r\n    type: Joi.string(),\r\n    password: Joi.string().required(),\r\n  };\r\n\r\n  componentDidMount(){\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n   async doSubmit(){\r\n\r\n    \r\n    const ob = this.state.data;\r\n    const jsonOb = {\r\n\r\n      fullName: ob.fullName,\r\n      country: ob.country,\r\n      email: ob.email,\r\n      contact: ob.contact,\r\n      type: ob.type,\r\n      age: ob.age,\r\n      password: ob.password,\r\n    }\r\n    \r\n\r\n\r\n    console.log(\"submitted\")\r\n\r\n    const response = await fetch(\"http://localhost:8082/adduser\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(jsonOb),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(data);\r\n\r\n    if(data){\r\n\r\n      window.location.href = \"/\";\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <React.Fragment>\r\n    \r\n    <div className=\"row mt-4\">\r\n      <div className=\"col-3\"></div>\r\n      <div className=\"col\" style={{backgroundColor:\"#F2F3F4\"}}>\r\n      <h1>Register Me</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.renderInput(\"fullName\", \"Full Name\")}\r\n            {this.renderInput(\"country\", \"Country\")}\r\n            {this.renderInput(\"email\", \"Email Address\")}\r\n            {this.renderInput(\"contact\", \"Contact Number\")}\r\n            {this.renderInput(\"password\", \"Password\")}\r\n            {this.renderButton(\"Register Me\")}\r\n          </form>\r\n        \r\n\r\n      </div>\r\n      <div className=\"col-4\"></div>\r\n    </div>\r\n          \r\n        \r\n    </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n \r\nexport default RegisterTraveller;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\Traveller\\sideNav\\Sidebar.jsx",["265","266","267","268","269"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Container, Image } from \"react-bootstrap\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nconst Nav = styled.div`\r\n  background:    #fdfefe ;\r\n  height: 80px; \r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background:   #34495e \r\n\r\n\r\n  ;\r\n  width: 250px;\r\n  height: 100vh;\r\n  border-style: solid;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  @media only screen and (max-width: 1920px) {\r\n    left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\r\n  }\r\n  left: 0;\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \" #17202a \" }}>\r\n        <Nav>\r\n         \r\n          <NavIcon to=\"#\">\r\n            \r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </NavIcon>\r\n          <h2>Research Project Management Tool</h2>\r\n          <button className='btn btn-sm btn-primary' onClick={() =>{\r\n            localStorage.removeItem(\"is_login\");\r\n            window.location.href = \"/\"\r\n            \r\n            }}>Log out</button><br></br>\r\n        </Nav>\r\n        <SidebarNav sidebar={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to=\"#\">\r\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\r\n            </NavIcon>\r\n            {SidebarData.map((item, index) => {\r\n              return <SubMenu item={item} key={index} />;\r\n            })}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\sideNav\\Sidebar.jsx",["270","271","272","273","274"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Container, Image } from \"react-bootstrap\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nconst Nav = styled.div`\r\n  background: #15171c;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #15171c;\r\n  width: 250px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  @media only screen and (max-width: 1920px) {\r\n    left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\r\n  }\r\n  left: 0;\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#fff\" }}>\r\n        <Nav>\r\n          <NavIcon to=\"#\">\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </NavIcon>\r\n        </Nav>\r\n        <SidebarNav sidebar={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to=\"#\">\r\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\r\n            </NavIcon>\r\n            {SidebarData.map((item, index) => {\r\n              return <SubMenu item={item} key={index} />;\r\n            })}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\HotelStaff\\sideNav\\Sidebar.jsx",["275","276","277","278","279"],"D:\\DS Project\\ds_hms\\FE\\src\\components\\Traveller\\sideNav\\SidebarData.js",["280"],"import React from \"react\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: \"Dashboard\",\r\n    path: \"/\",\r\n    icon: <AiIcons.AiFillHome />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n  {\r\n    title: \"Basic Info\",\r\n    path: \"/basic-info\",\r\n    icon: <IoIcons.IoMdPlay />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n  {\r\n    title: \"Items\",\r\n    icon: <RiIcons.RiBookmark3Fill />,\r\n\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: \"Item Lists\",\r\n        path: \"/items/my\",\r\n        icon: <IoIcons.IoIosListBox />,\r\n        cName: \"sub-nav\",\r\n      },\r\n      {\r\n        title: \"Item Records\",\r\n        path: \"/itemsrecords\",\r\n        icon: <RiIcons.RiBarChartFill />,\r\n        cName: \"sub-nav\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    title: \"Add a Member\",\r\n    path: \"/register\",\r\n    icon: <IoIcons.IoMdTime />,\r\n  },\r\n\r\n  {\r\n    title: \"view members\",\r\n    path: \"/viewMembers\",\r\n    icon: <IoIcons.IoMdColorFill />,\r\n  },\r\n  {\r\n    title: \"Item Requests\",\r\n    path: \"/requests/for/items\",\r\n    icon: <IoIcons.IoMdPaperPlane />,\r\n  },\r\n\r\n  {\r\n    title: \"My Profile\",\r\n    path: \"/myprofile\",\r\n    icon: <IoIcons.IoMdPerson />,\r\n  },\r\n];\r\n","D:\\DS Project\\ds_hms\\FE\\src\\pages\\charts\\chart.js",[],"D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\sideNav\\SidebarData.js",[],"D:\\DS Project\\ds_hms\\FE\\src\\components\\HotelStaff\\sideNav\\SidebarData.js",[],"D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddCategoryModal.jsx",["281","282","283"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddCategoryModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            CategoryNameError:''\r\n             \r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if(isValid){\r\n            fetch('http://localhost:5000/api/categories', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    categoryName: event.target.categoryName.value,\r\n                    status: event.target.status.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Category Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    }); \r\n                    this.setState({CategoryNameError:''})\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1000);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        }\r\n    }\r\n\r\n    validate(){\r\n        let CategoryNameError = \"\";\r\n\r\n        if(!this.state.CategoryNameError){\r\n            CategoryNameError = \"Category Name Cannot Be Blank\"\r\n        }\r\n\r\n        if(CategoryNameError){\r\n            this.setState({CategoryNameError:CategoryNameError})\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Category\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"categoryName\"  placeholder=\"Category Name\" />\r\n                                          <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\">\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Category\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddProductCodeModal.jsx",["284","285","286"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport swal from 'sweetalert';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddProductCodeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            categories: [],\r\n            productCodeError:'',\r\n            productCategoryError:''\r\n         };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n          .get(\"http://localhost:5000/api/categories\")\r\n          .then((result) => {\r\n            const categories = result.data;\r\n    \r\n            this.setState({ categories: categories });\r\n          })\r\n          .catch((err) => console.log(err.message));\r\n      }\r\n\r\n    handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n        const isValid = this.validate(event);\r\n        if(isValid){\r\n            fetch('http://localhost:5000/api/product-code/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    productCode: event.target.productCode.value,\r\n                    productCategory: event.target.productCategory.value,\r\n                    status: event.target.status.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Product Code Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    });\r\n                    this.setState({\r\n                        productCodeError:'',\r\n                        productCategoryError:''\r\n                    })\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1500);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        }\r\n    }\r\n\r\n    validate(event){\r\n        let productCodeError = \"\";\r\n        let productCategoryError = \"\";\r\n      \r\n       \r\n        if(!event.target.productCode.value){\r\n            productCodeError = \"Product Code Cannot Be Blank\"\r\n        }\r\n        if(!event.target.productCategory.value){\r\n            productCategoryError = \"Please Select Product Category\"\r\n        }\r\n        \r\n       \r\n\r\n        if(productCodeError){\r\n            this.setState({\r\n                productCodeError:productCodeError,\r\n                productCategoryError:productCategoryError\r\n            })\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Product Code\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Product Code</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"productCode\"  placeholder=\"Product Code\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCodeError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Product Category</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"productCategory\">\r\n                                        {this.state.categories.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.categoryName}</option>\r\n                                        ))}\r\n                                        </Form.Control>  \r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCategoryError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\"  name=\"status\">\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Product Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddFactoryDetailsModal.jsx",["287","288","289"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddFactoryDetailsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            companyNameError:'',\r\n            companyAddressError:'',\r\n            ownerNameError:'',\r\n            mainProductError:'',\r\n            startDateError:''\r\n\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate(event);\r\n            if(isValid){\r\n                fetch('http://localhost:5000/api/factory-details', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    companyName: event.target.companyName.value,\r\n                    companyAddress: event.target.companyAddress.value,\r\n                    ownerName: event.target.ownerName.value,\r\n                    mainProduct: event.target.mainProduct.value,\r\n                    startDate: event.target.startDate.value,\r\n                    is_added:1\r\n                    // companyName: event.target.companyName.value,\r\n                    // companyName: event.target.companyName.value,\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    console.log(result);\r\n                    swal({\r\n                        title: \"Factory Details Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    }); \r\n                    this.setState({\r\n                        companyNameError:'',\r\n                        companyAddressError:'',\r\n                        ownerNameError:'',\r\n                        mainProductError:'',\r\n                        startDateError:'',\r\n                    })\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1500);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        }\r\n    }\r\n\r\n    validate(event){\r\n        let companyNameError = \"\";\r\n        let companyAddressError = \"\";\r\n        let ownerNameError = \"\";\r\n        let mainProductError = \"\";\r\n        let startDateError = \"\";\r\n\r\n        if(!event.target.companyName.value){\r\n            companyNameError = \"Company Name  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.companyAddress.value){\r\n            companyAddressError = \"Company Address  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.ownerName.value){\r\n            ownerNameError = \"Owner Name  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.mainProduct.value){\r\n            mainProductError = \"Main Product  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.startDate.value){\r\n            startDateError = \"start Date  Cannot Be Blank\"\r\n        }\r\n\r\n        if(companyNameError | companyAddressError | ownerNameError | mainProductError | startDateError){\r\n            this.setState({\r\n                companyNameError:companyNameError,\r\n                companyAddressError:companyAddressError,\r\n                ownerNameError:ownerNameError,\r\n                mainProductError:mainProductError,\r\n                startDateError:startDateError,\r\n            })\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Factory Details\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"companyName\">\r\n                                        <Form.Label>Company Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"companyName\" required placeholder=\"Company Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.companyNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"companyAddress\">\r\n                                        <Form.Label>Company Address</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"companyAddress\" required placeholder=\"Company Address\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.companyAddressError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"ownerName\">\r\n                                        <Form.Label>Owner Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"ownerName\" required placeholder=\"Owner Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.ownerNameError}</div>\r\n                                    </Form.Group>\r\n                                    {/* <Form.Group controlId=\"companyLogo\">\r\n                                        <Form.Label>Company Logo</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"companyLogo\" required placeholder=\"Category Name\" />\r\n                                    </Form.Group> */}\r\n                                    <Form.Group controlId=\"mainProduct\">\r\n                                        <Form.Label>Main Product</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"mainProduct\" required placeholder=\"Main Product\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.mainProduct}</div>\r\n                                    </Form.Group>\r\n                                    {/* <Form.Group controlId=\"br\">\r\n                                        <Form.Label>br</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"br\" required placeholder=\"Category Name\" />\r\n                                    </Form.Group> */}\r\n                                    <Form.Group controlId=\"startDate\">\r\n                                        <Form.Label>startDate</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"startDate\" required placeholder=\"Start Date\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.startDate}</div>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Factory Details\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\AddMaterialCodeModal.jsx",["290","291","292"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nexport class AddMaterialCodeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            materialNameError:'',\r\n            materialCodeError:''\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate(event);\r\n        if(isValid){\r\n            fetch('http://localhost:5000/api/meterial-code/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    materialName: event.target.materialName.value,\r\n                    materialCode: event.target.materialCode.value,\r\n                    status: event.target.status.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Material Code Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    });\r\n                    this.setState({\r\n                        materialNameError: '',\r\n                        materialCodeError:''\r\n        \r\n                    }) \r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                    }.bind(this), 1500); \r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        }\r\n    }\r\n\r\n    validate(event){\r\n        let materialNameError = '';\r\n        let materialCodeError = '';\r\n        \r\n        if(!event.target.materialName.value){\r\n            materialNameError = \"Material Name  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.materialCode.value){\r\n            materialCodeError = \"Material Code Cannot Be Blank\"\r\n        }\r\n        \r\n\r\n        if(materialNameError || materialCodeError){\r\n         \r\n            this.setState({\r\n                materialNameError: materialNameError,\r\n                materialCodeError:materialCodeError\r\n\r\n            })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Material Code\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Material Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"materialName\"  placeholder=\"Material Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.materialNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Material Code</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"materialCode\"  placeholder=\"Material Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.materialCodeError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\">\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Material Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\UserListTable.jsx",[],"D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\RejectUsersTable.jsx",[],"D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\UserRolesTable.jsx",["293"],"import React, { Component } from \"react\";\r\nconst UserRolesTable = ({ filteredItems}) => {\r\n  return (\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">User Role</th>\r\n          <th scope=\"col\">Status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n           \r\n          >\r\n            <td>{i.userRoleNo}</td>\r\n            <td>{i.userRole}</td>\r\n            <td>{i.status}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default UserRolesTable;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\ProductCodesTable.jsx",["294","295","296"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditProductCodeModal } from '../Modals/EditProductCodeModal';\r\n\r\n\r\nexport class ProductCodesTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteProCode(id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/product-code', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Product Code Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          });\r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500); \r\n      });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {id, productCode, productCategory, status } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n      <ButtonToolbar>\r\n      <EditProductCodeModal\r\n          show={this.state.editModalShow} \r\n          onHide={EditModelClose}\r\n          id={id}\r\n          productCode={productCode}\r\n          productCategory={productCategory}\r\n          status={status}\r\n      />\r\n      </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Product Code</th>\r\n          <th scope=\"col\">Product Category</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n            \r\n          > \r\n            <td></td>\r\n            <td>{i.productCode}</td>\r\n            <td>{i.productCategory}</td>\r\n            <td><button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i._id, productCode: i.productCode, productCategory: i.productCategory, status: i.status })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteProCode(i._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n};\r\n\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\CategoriesTable.jsx",["297","298","299","300"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditCategoryModal } from '../Modals/EditCategoryModal';\r\n\r\nexport class CategoriesTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteCat(id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/categories', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Category Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          }); \r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500);\r\n      });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {id, name, status, version } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n       <ButtonToolbar>\r\n\r\n        <EditCategoryModal\r\n            show={this.state.editModalShow}\r\n            onHide={EditModelClose}\r\n            id={id}\r\n            name={name}\r\n            status={status}\r\n        />\r\n        </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Category</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n            \r\n          >\r\n            <td>{i.userRoleNo}</td>\r\n            <td>{i.categoryName}</td>\r\n            <td><button \r\n              className=\"btn-sm\"\r\n              style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i._id, name: i.categoryName, status: i.status })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteCat(i._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n     \r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n}\r\n\r\n\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\ApprovedUsersTable.jsx",[],"D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Tables\\MaterialCodeTable.jsx",["301","302","303"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditMaterialCodeModal } from '../Modals/EditMaterialCodeModal';\r\n\r\nexport class MaterialCodeTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteMatCode (id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/meterial-code', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Material Code Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          });\r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500);\r\n      });\r\n      \r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {id, matirialName, materialCode, status } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n       <ButtonToolbar>\r\n      <EditMaterialCodeModal\r\n          show={this.state.editModalShow}\r\n          onHide={EditModelClose}\r\n          id={id}\r\n          matirialName={matirialName}\r\n          materialCode={materialCode}\r\n          status={status}\r\n      />\r\n      </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Material Name</th>\r\n          <th scope=\"col\">Material Code</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n          >\r\n            <td>1</td>\r\n            <td>{i.materialName}</td>\r\n            <td>{i.materialCode}</td>\r\n            <td><button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i._id, matirialName: i.materialName, materialCode: i.materialCode, status: i.status })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteMatCode(i._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n  }\r\n};\r\n\r\n\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\Traveller\\sideNav\\SubMenu.jsx",[],"D:\\DS Project\\ds_hms\\FE\\src\\components\\HotelStaff\\Modals\\AddReservationsModal.jsx",["304","305","306","307"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport swal from 'sweetalert';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddReservationsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            // categories: [],\r\n            productCodeError:'',\r\n            productCategoryError:''\r\n         };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    // componentDidMount() {\r\n    //     axios\r\n    //       .get(\"http://localhost:5000/api/categories\")\r\n    //       .then((result) => {\r\n    //         const categories = result.data;\r\n    \r\n    //         this.setState({ categories: categories });\r\n    //       })\r\n    //       .catch((err) => console.log(err.message));\r\n    //   }\r\n\r\n    handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n        // const isValid = this.validate(event);\r\n        // if(isValid){\r\n            fetch('http://localhost:8082/addReservation', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    customerName: event.target.customerName.value,\r\n                    roomNo: event.target.roomNo.value,\r\n                    price: event.target.price.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Reservation Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    });\r\n                    this.setState({\r\n                        productCodeError:'',\r\n                        productCategoryError:''\r\n                    })\r\n                    setTimeout(function() {\r\n                        // window.location.reload(); \r\n                      }.bind(this), 1500);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        // }\r\n    }\r\n\r\n    validate(event){\r\n        let productCodeError = \"\";\r\n        let productCategoryError = \"\";\r\n      \r\n       \r\n        if(!event.target.productCode.value){\r\n            productCodeError = \"Product Code Cannot Be Blank\"\r\n        }\r\n        if(!event.target.productCategory.value){\r\n            productCategoryError = \"Please Select Product Category\"\r\n        }\r\n        \r\n       \r\n\r\n        if(productCodeError){\r\n            this.setState({\r\n                productCodeError:productCodeError,\r\n                productCategoryError:productCategoryError\r\n            })\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Reservation\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"customerName\">\r\n                                        <Form.Label>Customer Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"customerName\"  placeholder=\"Customer Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCodeError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"roomNo\">\r\n                                        <Form.Label>Room No</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"roomNo\"  placeholder=\"Room No\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCodeError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"price\">\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"price\"  placeholder=\"Price\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCodeError}</div>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Reservation\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\sideNav\\SubMenu.jsx",[],"D:\\DS Project\\ds_hms\\FE\\src\\components\\HotelStaff\\Tables\\ReservationTable.jsx",["308","309","310"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditReservationsModal } from '../Modals/EditReservationsModal';\r\n\r\n\r\nexport class ReservationTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteProCode(id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch(`http://localhost:8082/deleteReservation/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Reservation Code Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          });\r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500); \r\n      });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {id, customerName, roomNo, price } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n      <ButtonToolbar>\r\n      <EditReservationsModal\r\n          show={this.state.editModalShow} \r\n          onHide={EditModelClose}\r\n          id={id}\r\n          customerName={customerName}\r\n          roomNo={roomNo}\r\n          price={price}\r\n      />\r\n      </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Customer Name</th>\r\n          <th scope=\"col\">Romm No</th>\r\n          <th scope=\"col\">Price</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.reservations.map((i) => (\r\n          <tr\r\n            key={i.id}\r\n            \r\n          > \r\n            <td>{i.id}</td>\r\n            <td>{i.customerName}</td>\r\n            <td>{i.roomNo}</td>\r\n            <td>{i.price}</td>\r\n            <td><button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i.id, customerName: i.customerName, roomNo: i.roomNo, price: i.price })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteProCode(i.id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n};\r\n\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\HotelStaff\\sideNav\\SubMenu.jsx",[],"D:\\DS Project\\ds_hms\\FE\\src\\components\\reusables\\formsuper.jsx",["311"],"import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport TextArea from \"./textarea\";\r\nimport Radio from \"./radio\";\r\n\r\nclass FormSuper extends Component {\r\n\r\n\r\n  handleChange = ({ currentTarget }) => {\r\n     const errors = { ...this.state.errors };\r\n\r\n    const errorMessage = this.validateProperty(currentTarget);\r\n\r\n    if (errorMessage) errors[currentTarget.name] = errorMessage;\r\n    else delete errors[currentTarget.name];\r\n    const data = { ...this.state.data };\r\n    \r\n    data[currentTarget.name] = currentTarget.value;\r\n    this.setState({ data: data, errors: errors });\r\n    \r\n\r\n  };\r\n\r\n  validateProperty = (input) => {\r\n    const obj = { [input.name]: input.value };\r\n    const schema = { [input.name]: this.schema[input.name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  validate = () => {\r\n    const result = Joi.validate(this.state.data, this.schema, {\r\n      abortEarly: false,\r\n    });\r\n    console.log(result);\r\n    if (!result.error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of result.error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    console.log(errors);\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button\r\n        className=\"btn btn-sm btn-primary my-2\"\r\n        type=\"submit\"\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    return (\r\n      <Input\r\n      type={type}\r\n      name={name}\r\n      label={label}\r\n      value={this.state.data[name]}\r\n      onChange={this.handleChange}\r\n      error={this.state.errors[name]}\r\n      />\r\n      \r\n    );\r\n  }\r\n\r\n  renderTextArea(name, label) {\r\n    return (\r\n      <TextArea\r\n        name={name}\r\n        label={label}\r\n        value={this.state.data[name]}\r\n        onChange={this.handleChange}\r\n        error={this.state.errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={this.state.errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormSuper;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\EditCategoryModal.jsx",["312"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditCategoryModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '' };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        fetch('http://localhost:5000/api/categories/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                categoryName: event.target.name.value,\r\n                status: event.target.status.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Category Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                \r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Category\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"name\" required placeholder=\"Category Name\" defaultValue={this.props.name} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\r\n                                            <option selected disabled>{this.props.status}</option>\r\n                                            <option>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Category\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\EditProductCodeModal.jsx",["313"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport axios from \"axios\";\r\n\r\nexport class EditProductCodeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '', categories:[] };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n          .get(\"http://localhost:5000/api/categories\")\r\n          .then((result) => {\r\n            const categories = result.data;\r\n    \r\n            this.setState({ categories: categories });\r\n          })\r\n          .catch((err) => console.log(err.message));\r\n      }\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        //alert(event.target.name.value);\r\n\r\n        fetch('http://localhost:5000/api/product-code/', { \r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                productCode: event.target.productCode.value,\r\n                productCategory: event.target.productCategory.value,\r\n                status: event.target.status.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Product Code Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Product Code\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Product Code</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"productCode\" required placeholder=\"Product Code\" defaultValue={this.props.productCode} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Product Category</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"productCategory\" defaultValue={this.props.productCategory}>\r\n                                        {this.state.categories.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.categoryName}</option>\r\n                                        ))}\r\n                                        </Form.Control>  \r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Product Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\DS Project\\ds_hms\\FE\\src\\components\\SuperAdmin\\Modals\\EditMaterialCodeModal.jsx",["314"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditMaterialCodeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '' };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        //alert(event.target.name.value);\r\n\r\n        fetch('http://localhost:5000/api/meterial-code/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                materialName: event.target.matName.value,\r\n                materialCode: event.target.matCode.value,\r\n                status: event.target.status.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Metirial Code Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Matirial COde\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n                                    \r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Material Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"matName\" required placeholder=\"Material Name\" defaultValue={this.props.matirialName} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Material Code</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"matCode\" required placeholder=\"Material Code\" defaultValue={this.props.materialCode} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\r\n                                            <option selected disabled>{this.props.status}</option>\r\n                                            <option>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Matirial Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\DS Project\\ds_hms\\FE\\src\\components\\HotelStaff\\Modals\\EditReservationsModal.jsx",["315","316"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport axios from \"axios\";\r\n\r\nexport class EditReservationsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '', categories:[] };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        //alert(event.target.name.value);\r\n\r\n        fetch('http://localhost:8082/updateReservation', { \r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                customerName: event.target.customerName.value,\r\n                roomNo: event.target.roomNo.value,\r\n                price: event.target.price.value\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Reservation Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Reservation\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"customerName\">\r\n                                        <Form.Label>Customer Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"customerName\" required placeholder=\"Customer Name\" defaultValue={this.props.customerName} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Room No</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"roomNo\" required placeholder=\"Room No\" defaultValue={this.props.roomNo} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"price\" required placeholder=\"Price\" defaultValue={this.props.price} />\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Product Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\DS Project\\ds_hms\\FE\\src\\components\\reusables\\input.jsx",["317"],"import React, { Component } from \"react\";\r\n\r\nconst Input = ({name, label, value, onChange, error, type }) => {\r\n  return ( \r\n    <div className=\"form-group my-1\">\r\n      <label style={{ fontWeight: \"bold\" }} htmlFor={name}>\r\n        {label}\r\n      </label>\r\n      <input\r\n        id={name}\r\n        type={type}\r\n        className=\"form-control\"\r\n        value={value}\r\n        name={name}\r\n        autoComplete=\"off\"\r\n        onChange={onChange}\r\n        style={{ border: \"2px solid #050139\" }}\r\n      />\r\n      {error && (\r\n        <div style={{ padding: 3, color: \"red\" }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\reusables\\select.jsx",["318"],"import React, { Component } from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group my-2\">\r\n      <label style={{ fontWeight: \"bold\" }} htmlFor={name}>\r\n        {label}\r\n      </label>\r\n      <select\r\n        name={name}\r\n        id={name}\r\n        {...rest}\r\n        className=\"form-control\"\r\n        style={{ border: \"1px solid #050139\" }}\r\n      >\r\n        <option value=\"\" />\r\n\r\n        {options.map((opt) => (\r\n          <option key={opt.id} value={opt.type}>\r\n            {opt.type}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && (\r\n        <div className=\"alert alert-danger\" style={{ padding: 3 }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\reusables\\textarea.jsx",["319"],"import React, { Component } from \"react\";\r\n\r\nconst TextArea = ({ label, name, value, onChange, error }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label style={{ fontWeight: \"bold\" }} htmlFor={name}>\r\n        {label}\r\n      </label>\r\n      <textarea\r\n        cols=\"30\"\r\n        rows=\"3\"\r\n        className=\"form-control\"\r\n        style={{ border: \"1px solid #050139\" }}\r\n        value={value}\r\n        name={name}\r\n        autoComplete=\"off\"\r\n        onChange={onChange}\r\n      ></textarea>\r\n\r\n      {error && (\r\n        <div className=\"alert alert-danger\" style={{ padding: 3 }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","D:\\DS Project\\ds_hms\\FE\\src\\components\\reusables\\radio.jsx",["320","321","322"],"import React, { Component } from \"react\";\r\n\r\nconst Radio = ({ label, name, value, onChange, error }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ fontWeight: \"bold\" }}>Gender</div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          value=\"Male\"\r\n          name=\"Gender\"\r\n        />\r\n        <label className=\"form-check-label\" for=\"inlineRadio1\">\r\n          Male\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          checked\r\n          value=\"Female\"\r\n          name=\"Gender\"\r\n        />\r\n        <label className=\"form-check-label\" for=\"inlineRadio2\">\r\n          Female\r\n        </label>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n",{"ruleId":"323","severity":1,"message":"324","line":2,"column":27,"nodeType":"325","messageId":"326","endLine":2,"endColumn":33},{"ruleId":"323","severity":1,"message":"327","line":2,"column":35,"nodeType":"325","messageId":"326","endLine":2,"endColumn":41},{"ruleId":"328","severity":1,"message":"329","line":47,"column":21,"nodeType":"330","messageId":"331","endLine":47,"endColumn":23},{"ruleId":"328","severity":1,"message":"332","line":50,"column":26,"nodeType":"330","messageId":"331","endLine":50,"endColumn":28},{"ruleId":"328","severity":1,"message":"332","line":55,"column":26,"nodeType":"330","messageId":"331","endLine":55,"endColumn":28},{"ruleId":"328","severity":1,"message":"332","line":60,"column":26,"nodeType":"330","messageId":"331","endLine":60,"endColumn":28},{"ruleId":"328","severity":1,"message":"329","line":73,"column":21,"nodeType":"330","messageId":"331","endLine":73,"endColumn":23},{"ruleId":"328","severity":1,"message":"332","line":81,"column":25,"nodeType":"330","messageId":"331","endLine":81,"endColumn":27},{"ruleId":"328","severity":1,"message":"332","line":94,"column":26,"nodeType":"330","messageId":"331","endLine":94,"endColumn":28},{"ruleId":"328","severity":1,"message":"332","line":101,"column":26,"nodeType":"330","messageId":"331","endLine":101,"endColumn":28},{"ruleId":"323","severity":1,"message":"333","line":3,"column":10,"nodeType":"325","messageId":"326","endLine":3,"endColumn":15},{"ruleId":"323","severity":1,"message":"334","line":3,"column":17,"nodeType":"325","messageId":"326","endLine":3,"endColumn":23},{"ruleId":"323","severity":1,"message":"335","line":4,"column":8,"nodeType":"325","messageId":"326","endLine":4,"endColumn":13},{"ruleId":"328","severity":1,"message":"332","line":87,"column":91,"nodeType":"330","messageId":"331","endLine":87,"endColumn":93},{"ruleId":"323","severity":1,"message":"336","line":3,"column":10,"nodeType":"325","messageId":"326","endLine":3,"endColumn":15},{"ruleId":"323","severity":1,"message":"337","line":3,"column":25,"nodeType":"325","messageId":"326","endLine":3,"endColumn":28},{"ruleId":"323","severity":1,"message":"338","line":3,"column":30,"nodeType":"325","messageId":"326","endLine":3,"endColumn":33},{"ruleId":"323","severity":1,"message":"339","line":3,"column":41,"nodeType":"325","messageId":"326","endLine":3,"endColumn":50},{"ruleId":"323","severity":1,"message":"333","line":3,"column":10,"nodeType":"325","messageId":"326","endLine":3,"endColumn":15},{"ruleId":"323","severity":1,"message":"333","line":3,"column":10,"nodeType":"325","messageId":"326","endLine":3,"endColumn":15},{"ruleId":"323","severity":1,"message":"333","line":3,"column":10,"nodeType":"325","messageId":"326","endLine":3,"endColumn":15},{"ruleId":"323","severity":1,"message":"334","line":3,"column":17,"nodeType":"325","messageId":"326","endLine":3,"endColumn":23},{"ruleId":"323","severity":1,"message":"335","line":4,"column":8,"nodeType":"325","messageId":"326","endLine":4,"endColumn":13},{"ruleId":"328","severity":1,"message":"332","line":87,"column":91,"nodeType":"330","messageId":"331","endLine":87,"endColumn":93},{"ruleId":"323","severity":1,"message":"333","line":3,"column":10,"nodeType":"325","messageId":"326","endLine":3,"endColumn":15},{"ruleId":"323","severity":1,"message":"333","line":3,"column":10,"nodeType":"325","messageId":"326","endLine":3,"endColumn":15},{"ruleId":"323","severity":1,"message":"340","line":2,"column":8,"nodeType":"325","messageId":"326","endLine":2,"endColumn":13},{"ruleId":"323","severity":1,"message":"333","line":3,"column":10,"nodeType":"325","messageId":"326","endLine":3,"endColumn":15},{"ruleId":"323","severity":1,"message":"334","line":3,"column":17,"nodeType":"325","messageId":"326","endLine":3,"endColumn":23},{"ruleId":"323","severity":1,"message":"341","line":3,"column":25,"nodeType":"325","messageId":"326","endLine":3,"endColumn":38},{"ruleId":"323","severity":1,"message":"335","line":4,"column":8,"nodeType":"325","messageId":"326","endLine":4,"endColumn":13},{"ruleId":"323","severity":1,"message":"342","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":13},{"ruleId":"323","severity":1,"message":"343","line":8,"column":10,"nodeType":"325","messageId":"326","endLine":8,"endColumn":32},{"ruleId":"323","severity":1,"message":"344","line":1,"column":17,"nodeType":"325","messageId":"326","endLine":1,"endColumn":25},{"ruleId":"323","severity":1,"message":"340","line":3,"column":8,"nodeType":"325","messageId":"326","endLine":3,"endColumn":13},{"ruleId":"323","severity":1,"message":"345","line":4,"column":8,"nodeType":"325","messageId":"326","endLine":4,"endColumn":12},{"ruleId":"323","severity":1,"message":"344","line":1,"column":17,"nodeType":"325","messageId":"326","endLine":1,"endColumn":25},{"ruleId":"323","severity":1,"message":"340","line":3,"column":8,"nodeType":"325","messageId":"326","endLine":3,"endColumn":13},{"ruleId":"323","severity":1,"message":"345","line":4,"column":8,"nodeType":"325","messageId":"326","endLine":4,"endColumn":12},{"ruleId":"323","severity":1,"message":"346","line":4,"column":10,"nodeType":"325","messageId":"326","endLine":4,"endColumn":14},{"ruleId":"323","severity":1,"message":"337","line":4,"column":16,"nodeType":"325","messageId":"326","endLine":4,"endColumn":19},{"ruleId":"323","severity":1,"message":"338","line":4,"column":21,"nodeType":"325","messageId":"326","endLine":4,"endColumn":24},{"ruleId":"323","severity":1,"message":"347","line":4,"column":26,"nodeType":"325","messageId":"326","endLine":4,"endColumn":35},{"ruleId":"323","severity":1,"message":"348","line":4,"column":37,"nodeType":"325","messageId":"326","endLine":4,"endColumn":42},{"ruleId":"323","severity":1,"message":"346","line":4,"column":10,"nodeType":"325","messageId":"326","endLine":4,"endColumn":14},{"ruleId":"323","severity":1,"message":"337","line":4,"column":16,"nodeType":"325","messageId":"326","endLine":4,"endColumn":19},{"ruleId":"323","severity":1,"message":"338","line":4,"column":21,"nodeType":"325","messageId":"326","endLine":4,"endColumn":24},{"ruleId":"323","severity":1,"message":"347","line":4,"column":26,"nodeType":"325","messageId":"326","endLine":4,"endColumn":35},{"ruleId":"323","severity":1,"message":"348","line":4,"column":37,"nodeType":"325","messageId":"326","endLine":4,"endColumn":42},{"ruleId":"323","severity":1,"message":"346","line":4,"column":10,"nodeType":"325","messageId":"326","endLine":4,"endColumn":14},{"ruleId":"323","severity":1,"message":"337","line":4,"column":16,"nodeType":"325","messageId":"326","endLine":4,"endColumn":19},{"ruleId":"323","severity":1,"message":"338","line":4,"column":21,"nodeType":"325","messageId":"326","endLine":4,"endColumn":24},{"ruleId":"323","severity":1,"message":"347","line":4,"column":26,"nodeType":"325","messageId":"326","endLine":4,"endColumn":35},{"ruleId":"323","severity":1,"message":"348","line":4,"column":37,"nodeType":"325","messageId":"326","endLine":4,"endColumn":42},{"ruleId":"323","severity":1,"message":"349","line":2,"column":13,"nodeType":"325","messageId":"326","endLine":2,"endColumn":20},{"ruleId":"323","severity":1,"message":"339","line":2,"column":41,"nodeType":"325","messageId":"326","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"350","line":6,"column":10,"nodeType":"325","messageId":"326","endLine":6,"endColumn":18},{"ruleId":"351","severity":1,"message":"352","line":51,"column":25,"nodeType":"353","messageId":"331","endLine":51,"endColumn":29,"fix":"354"},{"ruleId":"323","severity":1,"message":"339","line":4,"column":41,"nodeType":"325","messageId":"326","endLine":4,"endColumn":50},{"ruleId":"323","severity":1,"message":"350","line":7,"column":10,"nodeType":"325","messageId":"326","endLine":7,"endColumn":18},{"ruleId":"351","severity":1,"message":"352","line":69,"column":25,"nodeType":"353","messageId":"331","endLine":69,"endColumn":29,"fix":"355"},{"ruleId":"323","severity":1,"message":"339","line":2,"column":41,"nodeType":"325","messageId":"326","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"350","line":6,"column":10,"nodeType":"325","messageId":"326","endLine":6,"endColumn":18},{"ruleId":"351","severity":1,"message":"352","line":68,"column":25,"nodeType":"353","messageId":"331","endLine":68,"endColumn":29,"fix":"356"},{"ruleId":"323","severity":1,"message":"339","line":2,"column":41,"nodeType":"325","messageId":"326","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"350","line":6,"column":10,"nodeType":"325","messageId":"326","endLine":6,"endColumn":18},{"ruleId":"351","severity":1,"message":"352","line":57,"column":23,"nodeType":"353","messageId":"331","endLine":57,"endColumn":27,"fix":"357"},{"ruleId":"323","severity":1,"message":"358","line":1,"column":17,"nodeType":"325","messageId":"326","endLine":1,"endColumn":26},{"ruleId":"323","severity":1,"message":"333","line":2,"column":10,"nodeType":"325","messageId":"326","endLine":2,"endColumn":15},{"ruleId":"323","severity":1,"message":"334","line":2,"column":17,"nodeType":"325","messageId":"326","endLine":2,"endColumn":23},{"ruleId":"351","severity":1,"message":"352","line":43,"column":13,"nodeType":"353","messageId":"331","endLine":43,"endColumn":17,"fix":"359"},{"ruleId":"323","severity":1,"message":"333","line":2,"column":10,"nodeType":"325","messageId":"326","endLine":2,"endColumn":15},{"ruleId":"323","severity":1,"message":"334","line":2,"column":17,"nodeType":"325","messageId":"326","endLine":2,"endColumn":23},{"ruleId":"351","severity":1,"message":"352","line":42,"column":13,"nodeType":"353","messageId":"331","endLine":42,"endColumn":17,"fix":"360"},{"ruleId":"323","severity":1,"message":"361","line":51,"column":30,"nodeType":"325","messageId":"326","endLine":51,"endColumn":37},{"ruleId":"323","severity":1,"message":"333","line":2,"column":10,"nodeType":"325","messageId":"326","endLine":2,"endColumn":15},{"ruleId":"323","severity":1,"message":"334","line":2,"column":17,"nodeType":"325","messageId":"326","endLine":2,"endColumn":23},{"ruleId":"351","severity":1,"message":"352","line":42,"column":13,"nodeType":"353","messageId":"331","endLine":42,"endColumn":17,"fix":"362"},{"ruleId":"323","severity":1,"message":"340","line":2,"column":8,"nodeType":"325","messageId":"326","endLine":2,"endColumn":13},{"ruleId":"323","severity":1,"message":"339","line":4,"column":41,"nodeType":"325","messageId":"326","endLine":4,"endColumn":50},{"ruleId":"323","severity":1,"message":"350","line":7,"column":10,"nodeType":"325","messageId":"326","endLine":7,"endColumn":18},{"ruleId":"351","severity":1,"message":"352","line":69,"column":25,"nodeType":"353","messageId":"331","endLine":69,"endColumn":29,"fix":"363"},{"ruleId":"323","severity":1,"message":"333","line":2,"column":10,"nodeType":"325","messageId":"326","endLine":2,"endColumn":15},{"ruleId":"323","severity":1,"message":"334","line":2,"column":17,"nodeType":"325","messageId":"326","endLine":2,"endColumn":23},{"ruleId":"351","severity":1,"message":"352","line":39,"column":13,"nodeType":"353","messageId":"331","endLine":39,"endColumn":17,"fix":"364"},{"ruleId":"323","severity":1,"message":"365","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":13},{"ruleId":"323","severity":1,"message":"339","line":2,"column":41,"nodeType":"325","messageId":"326","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"339","line":2,"column":41,"nodeType":"325","messageId":"326","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"339","line":2,"column":41,"nodeType":"325","messageId":"326","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"339","line":2,"column":41,"nodeType":"325","messageId":"326","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"340","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":13},{"ruleId":"323","severity":1,"message":"358","line":1,"column":17,"nodeType":"325","messageId":"326","endLine":1,"endColumn":26},{"ruleId":"323","severity":1,"message":"358","line":1,"column":17,"nodeType":"325","messageId":"326","endLine":1,"endColumn":26},{"ruleId":"323","severity":1,"message":"358","line":1,"column":17,"nodeType":"325","messageId":"326","endLine":1,"endColumn":26},{"ruleId":"323","severity":1,"message":"358","line":1,"column":17,"nodeType":"325","messageId":"326","endLine":1,"endColumn":26},{"ruleId":"366","severity":1,"message":"367","line":22,"column":11,"nodeType":"368","messageId":"369","endLine":22,"endColumn":39},{"ruleId":"366","severity":1,"message":"367","line":23,"column":11,"nodeType":"368","messageId":"369","endLine":23,"endColumn":23},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Table' is defined but never used.","'Button' is defined but never used.","'Chart' is defined but never used.","'Modal' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'FormGroup' is defined but never used.","'axios' is defined but never used.","'ButtonToolbar' is defined but never used.","'hello' is defined but never used.","'AddFactoryDetailsModal' is defined but never used.","'useState' is defined but never used.","'swal' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'Image' is defined but never used.","'FaIcons' is defined but never used.","'Redirect' is defined but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"370","text":"371"},{"range":"372","text":"371"},{"range":"373","text":"371"},{"range":"374","text":"371"},"'Component' is defined but never used.",{"range":"375","text":"371"},{"range":"376","text":"371"},"'version' is assigned a value but never used.",{"range":"377","text":"371"},{"range":"378","text":"371"},{"range":"379","text":"371"},"'Radio' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",[1795,1806],"",[2384,2395],[2596,2607],[2007,2018],[1306,1317],[1287,1298],[1309,1320],[2402,2413],[1225,1236]]